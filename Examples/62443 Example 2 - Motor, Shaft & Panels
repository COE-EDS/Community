<?xml version="1.0" encoding="UTF-8"?>
<project ref="motor-shaft-and-panels" name="Motor, Shaft and Panels" tags="" modelUpdated="2021-10-26 18:42:16" workflowState="" locked="false">
  <desc/>
  <diagram draft="false">
    <schema>PG14R3JhcGhNb2RlbCBkeD0iMTc4NCIgZHk9IjEwMjkiIGdyaWQ9IjAiIGdyaWRTaXplPSIxMCIgZ3VpZGVzPSIxIiB0b29sdGlwcz0iMSIgY29ubmVjdD0iMSIgYXJyb3dzPSIxIiBmb2xkPSIxIiBwYWdlPSIwIiBwYWdlU2NhbGU9IjEiIHBhZ2VXaWR0aD0iODI3IiBwYWdlSGVpZ2h0PSIxMTY5IiBtYXRoPSIwIiBzaGFkb3c9IjAiIGlyRHJhd2lvVmVyc2lvbj0iMy4wLjAtU05BUFNIT1QiPgogIDxyb290PgogICAgPG14Q2VsbCBpZD0iMCIvPgogICAgPG14Q2VsbCBpZD0iMSIgcGFyZW50PSIwIi8+CiAgICA8bXhDZWxsIGlkPSIxMiIgdmFsdWU9IkludGVybmV0IiBzdHlsZT0iZWRpdGFibGU9MDtpci5yZWY9ZjBiYTc3MjItMzliNi00YzgxLTgyOTAtYTMwYTI0OGJiOGQ5O3JvdW5kZWQ9MTt3aGl0ZVNwYWNlPXdyYXA7ZWRpdGFibGU9MDtyZWN1cnNpdmVSZXNpemU9MDtodG1sPTE7dmVydGljYWxBbGlnbj10b3A7YWxpZ249bGVmdDtkYXNoZWQ9MTtzdHJva2VXaWR0aD0xO2FyY1NpemU9MzthYnNvbHV0ZUFyY1NpemU9MTtzcGFjaW5nVG9wPTE7c3BhY2luZ0xlZnQ9MzI7c3Ryb2tlQ29sb3I9Izc1NzVFQjtmaWxsQ29sb3I9I0YwRjBGRjtmaWxsT3BhY2l0eT0zMDtmb250Q29sb3I9IzU2NTFFMDtjb25uZWN0YWJsZT0wO2NvbnRhaW5lcj0xO3NvdXJjZT1pcml1c3Jpc2s7aXIudHlwZT1UUlVTVFpPTkU7IiBwYXJlbnQ9IjEiIHZlcnRleD0iMSIgaXNUaHVtYj0iMCI+CiAgICAgIDxteEdlb21ldHJ5IHg9Ii0zODQiIHk9IjE5OSIgd2lkdGg9IjE0MyIgaGVpZ2h0PSIxMjguNSIgYXM9Imdlb21ldHJ5Ii8+CiAgICA8L214Q2VsbD4KICAgIDxteENlbGwgaWQ9IjExIiB2YWx1ZT0iIiBzdHlsZT0iYXNwZWN0PWZpeGVkO3BlcmltZXRlcj1lbGxpcHNlUGVyaW1ldGVyO2h0bWw9MTthbGlnbj1jZW50ZXI7c2hhZG93PTA7ZGFzaGVkPTA7c3BhY2luZ1RvcD0zO2ltYWdlO2ltYWdlPWltZy9saWIvYWN0aXZlX2RpcmVjdG9yeS9pbnRlcm5ldF9nbG9iZS5zdmc7c3Ryb2tlQ29sb3I9IzIwQzlFMztzdHJva2VXaWR0aD01O2ZpbGxDb2xvcj0jRjVGNUY1O2ZvbnRDb2xvcj0jOEM4QzhDOyIgcGFyZW50PSIxMiIgdmVydGV4PSIxIiBpc1RodW1iPSIwIj4KICAgICAgPG14R2VvbWV0cnkgeD0iNDYuNSIgeT0iMzkuMjUiIHdpZHRoPSI1MCIgaGVpZ2h0PSI1MCIgYXM9Imdlb21ldHJ5Ii8+CiAgICA8L214Q2VsbD4KICAgIDxteENlbGwgaWQ9IjQ0IiB2YWx1ZT0iIiBzdHlsZT0icG9pbnRlckV2ZW50cz0xO3NoYWRvdz0wO2Rhc2hlZD0wO2h0bWw9MTtzdHJva2VDb2xvcj1ub25lO2ZpbGxDb2xvcj0jNTA1MDUwO2xhYmVsUG9zaXRpb249Y2VudGVyO3ZlcnRpY2FsTGFiZWxQb3NpdGlvbj1ib3R0b207b3V0bGluZUNvbm5lY3Q9MDt2ZXJ0aWNhbEFsaWduPXRvcDthbGlnbj1jZW50ZXI7c2hhcGU9bXhncmFwaC5vZmZpY2UuY2xvdWRzLmNsb3VkO2ZvbnRDb2xvcj0jOEM4QzhDOyIgcGFyZW50PSIxMiIgdmVydGV4PSIxIiBpc1RodW1iPSIwIj4KICAgICAgPG14R2VvbWV0cnkgeD0iOTQiIHk9IjExLjUiIHdpZHRoPSI0MCIgaGVpZ2h0PSIyOSIgYXM9Imdlb21ldHJ5Ii8+CiAgICA8L214Q2VsbD4KICAgIDxteENlbGwgaWQ9IjUiIHZhbHVlPSJpZWM2MjQ0My1zbDIiIHN0eWxlPSJlZGl0YWJsZT0wO2lyLnJlZj00YWNkNGVkNy1kMTc2LTRkNTAtOTg5Ni1iMTZmYWYyMDkyNGM7cm91bmRlZD0xO3doaXRlU3BhY2U9d3JhcDtlZGl0YWJsZT0wO3JlY3Vyc2l2ZVJlc2l6ZT0wO2h0bWw9MTt2ZXJ0aWNhbEFsaWduPXRvcDthbGlnbj1sZWZ0O2Rhc2hlZD0xO3N0cm9rZVdpZHRoPTE7YXJjU2l6ZT0zO2Fic29sdXRlQXJjU2l6ZT0xO3NwYWNpbmdUb3A9MTtzcGFjaW5nTGVmdD0zMjtzdHJva2VDb2xvcj0jNzU3NUVCO2ZpbGxDb2xvcj0jRjBGMEZGO2ZpbGxPcGFjaXR5PTMwO2ZvbnRDb2xvcj0jNTY1MUUwO2Nvbm5lY3RhYmxlPTA7Y29udGFpbmVyPTE7c291cmNlPWlyaXVzcmlzaztpci50eXBlPVRSVVNUWk9ORTsiIHBhcmVudD0iMSIgdmVydGV4PSIxIiBpc1RodW1iPSIwIj4KICAgICAgPG14R2VvbWV0cnkgeD0iLTIyNyIgeT0iLTE0IiB3aWR0aD0iNjc4IiBoZWlnaHQ9IjUwNyIgYXM9Imdlb21ldHJ5Ii8+CiAgICA8L214Q2VsbD4KICAgIDxvYmplY3QgbGFiZWw9IiIgaXIuc291cmNlU3R5bGU9ImNvbnRhaW5lcj11bmRlZmluZWQ7cm91bmRlZD11bmRlZmluZWQ7YXJjU2l6ZT11bmRlZmluZWQ7cGVyaW1ldGVyPXVuZGVmaW5lZDtyZWN1cnNpdmVSZXNpemU9dW5kZWZpbmVkO3ZlcnRpY2FsQWxpZ249dW5kZWZpbmVkO3N0cm9rZVdpZHRoPTU7c3Ryb2tlQ29sb3I9IzIwQzlFMztmb250U2l6ZT11bmRlZmluZWQ7d2hpdGVTcGFjZT13cmFwO2h0bWw9MTtmaWxsQ29sb3I9I0Y1RjVGNTtmb250Q29sb3I9IzhDOEM4QzthbGlnbj11bmRlZmluZWQ7dGV4dERpcmVjdGlvbj11bmRlZmluZWQ7c3BhY2luZ1RvcD11bmRlZmluZWQ7c3BhY2luZ0xlZnQ9dW5kZWZpbmVkO2FzcGVjdD11bmRlZmluZWQ7ZGFzaGVkPXVuZGVmaW5lZDtmb250U3R5bGU9dW5kZWZpbmVkO291dGxpbmVDb25uZWN0PXVuZGVmaW5lZDtzaGFwZT11bmRlZmluZWQ7aW1hZ2U9dW5kZWZpbmVkO3ZlcnRpY2FsTGFiZWxQb3NpdGlvbj11bmRlZmluZWQiIGlkPSI3Ij4KICAgICAgPG14Q2VsbCBzdHlsZT0id2hpdGVTcGFjZT13cmFwO2h0bWw9MTtzdHJva2VDb2xvcj0jMjBDOUUzO3N0cm9rZVdpZHRoPTE7ZmlsbENvbG9yPSNGNUY1RjU7Zm9udENvbG9yPSM4QzhDOEM7Y29udGFpbmVyPTE7cm91bmRlZD0xO2FyY1NpemU9MztwZXJpbWV0ZXI9cmVjdGFuZ2xlUGVyaW1ldGVyO3JlY3Vyc2l2ZVJlc2l6ZT0wO3ZlcnRpY2FsQWxpZ249dG9wO2ZvbnRTaXplPTEzO2FsaWduPWxlZnQ7dGV4dERpcmVjdGlvbj1sdHI7c3BhY2luZ1RvcD0xO3NwYWNpbmdMZWZ0PTMyOyIgcGFyZW50PSI1IiB2ZXJ0ZXg9IjEiPgogICAgICAgIDxteEdlb21ldHJ5IHg9IjIzMyIgeT0iMTMzIiB3aWR0aD0iMjEzIiBoZWlnaHQ9IjMwMyIgYXM9Imdlb21ldHJ5Ii8+CiAgICAgIDwvbXhDZWxsPgogICAgPC9vYmplY3Q+CiAgICA8b2JqZWN0IGxhYmVsPSIiIGlyLnNvdXJjZVN0eWxlPSJjb250YWluZXI9dW5kZWZpbmVkO3JvdW5kZWQ9dW5kZWZpbmVkO2FyY1NpemU9dW5kZWZpbmVkO3BlcmltZXRlcj11bmRlZmluZWQ7cmVjdXJzaXZlUmVzaXplPXVuZGVmaW5lZDt2ZXJ0aWNhbEFsaWduPXVuZGVmaW5lZDtzdHJva2VXaWR0aD01O3N0cm9rZUNvbG9yPSMyMEM5RTM7Zm9udFNpemU9dW5kZWZpbmVkO3doaXRlU3BhY2U9d3JhcDtodG1sPTE7ZmlsbENvbG9yPSNGNUY1RjU7Zm9udENvbG9yPSM4QzhDOEM7YWxpZ249dW5kZWZpbmVkO3RleHREaXJlY3Rpb249dW5kZWZpbmVkO3NwYWNpbmdUb3A9dW5kZWZpbmVkO3NwYWNpbmdMZWZ0PXVuZGVmaW5lZDthc3BlY3Q9dW5kZWZpbmVkO2Rhc2hlZD11bmRlZmluZWQ7Zm9udFN0eWxlPXVuZGVmaW5lZDtvdXRsaW5lQ29ubmVjdD11bmRlZmluZWQ7c2hhcGU9dW5kZWZpbmVkO2ltYWdlPXVuZGVmaW5lZDt2ZXJ0aWNhbExhYmVsUG9zaXRpb249dW5kZWZpbmVkIiBpZD0iMjgiPgogICAgICA8bXhDZWxsIHN0eWxlPSJ3aGl0ZVNwYWNlPXdyYXA7aHRtbD0xO3N0cm9rZUNvbG9yPSMyMEM5RTM7c3Ryb2tlV2lkdGg9NDtmaWxsQ29sb3I9I0Y1RjVGNTtmb250Q29sb3I9IzhDOEM4Qztjb250YWluZXI9MTtyb3VuZGVkPTE7YXJjU2l6ZT0zO3BlcmltZXRlcj1yZWN0YW5nbGVQZXJpbWV0ZXI7cmVjdXJzaXZlUmVzaXplPTA7dmVydGljYWxBbGlnbj10b3A7Zm9udFNpemU9MTM7YWxpZ249bGVmdDt0ZXh0RGlyZWN0aW9uPWx0cjtzcGFjaW5nVG9wPTE7c3BhY2luZ0xlZnQ9MzI7IiBwYXJlbnQ9IjciIHZlcnRleD0iMSI+CiAgICAgICAgPG14R2VvbWV0cnkgeD0iMTUiIHk9Ijc2IiB3aWR0aD0iMTgyIiBoZWlnaHQ9IjIwMiIgYXM9Imdlb21ldHJ5Ii8+CiAgICAgIDwvbXhDZWxsPgogICAgPC9vYmplY3Q+CiAgICA8bXhDZWxsIGlkPSIzNyIgdmFsdWU9IiIgc3R5bGU9IndoaXRlU3BhY2U9d3JhcDtodG1sPTE7c3Ryb2tlQ29sb3I9IzIwQzlFMztzdHJva2VXaWR0aD0yO2ZpbGxDb2xvcj0jRjVGNUY1O2ZvbnRDb2xvcj0jOEM4QzhDOyIgcGFyZW50PSIyOCIgdmVydGV4PSIxIj4KICAgICAgPG14R2VvbWV0cnkgeD0iNjYiIHk9IjIiIHdpZHRoPSI1MCIgaGVpZ2h0PSIyMDAiIGFzPSJnZW9tZXRyeSIvPgogICAgPC9teENlbGw+CiAgICA8bXhDZWxsIGlkPSIyNiIgdmFsdWU9IiIgc3R5bGU9ImFzcGVjdD1maXhlZDtodG1sPTE7cG9pbnRzPVtdO2FsaWduPWNlbnRlcjtpbWFnZTtmb250U2l6ZT0xMjtpbWFnZT1pbWcvbGliL21zY2FlL1BlcnNvbi5zdmc7c3Ryb2tlQ29sb3I9IzIwQzlFMztzdHJva2VXaWR0aD01O2ZpbGxDb2xvcj0jRjVGNUY1OyIgcGFyZW50PSIyOCIgdmVydGV4PSIxIiBpc1RodW1iPSIwIj4KICAgICAgPG14R2VvbWV0cnkgeD0iNzIuNSIgeT0iMTI1IiB3aWR0aD0iMzciIGhlaWdodD0iNTAiIGFzPSJnZW9tZXRyeSIvPgogICAgPC9teENlbGw+CiAgICA8bXhDZWxsIGlkPSI4IiB2YWx1ZT0iQWN0dWF0b3IgLSBDb21wcmVzc29yLE1vdG9yLERyaXZlIiBzdHlsZT0iaXIucmVmPWRiY2U5ZGE0LTNhM2MtNGRmMS1iMDBkLTVkNjhiZDhhYzY2NTtyb3VuZGVkPTE7d2hpdGVTcGFjZT13cmFwO2h0bWw9MTthbGlnbj1jZW50ZXI7aW1hZ2VBbGlnbj1jZW50ZXI7aW1hZ2VXaWR0aD04MjtpbWFnZUhlaWdodD04MjthcmNTaXplPTkwO2Fic29sdXRlQXJjU2l6ZT0xO3N0cm9rZUNvbG9yPSMyMEM5RTM7ZmlsbENvbG9yPSNFM0ZDRkM7Zm9udENvbG9yPSMwMDg0QUQ7Zm9udFNpemU9MTI7c291cmNlPWlyaXVzcmlzaztpci50eXBlPUNPTVBPTkVOVDtpci5jb21wb25lbnREZWZpbml0aW9uLnJlZj1hY3R1YXRvci1jb21wcmVzc29yLW1vdG9yLWRyaXZlO3ZlcnRpY2FsTGFiZWxQb3NpdGlvbj1taWRkbGU7dmVydGljYWxBbGlnbj1taWRkbGU7aXIuc3luY2hyb25pemVkPTE7IiBwYXJlbnQ9IjUiIHZlcnRleD0iMSIgaXNUaHVtYj0iMCI+CiAgICAgIDxteEdlb21ldHJ5IHg9IjM1NiIgeT0iMjYiIHdpZHRoPSI5MCIgaGVpZ2h0PSI5MCIgYXM9Imdlb21ldHJ5Ii8+CiAgICA8L214Q2VsbD4KICAgIDxteENlbGwgaWQ9IjE5IiB2YWx1ZT0iU3dpdGNoIEwyL0wzIC0mZ3Q7IEV0aGVybmV0IiBzdHlsZT0iaXIucmVmPTFjNGYzN2Y2LTlhMjktNDQ5ZS05ZjgwLWJkNzkzNmM3ZTI5YjtlZGdlU3R5bGU9bm9uZTtjdXJ2ZWQ9MTtodG1sPTE7aXIuc3luY2hyb25pemVkPTE7c291cmNlUGVyaW1ldGVyU3BhY2luZz05O2VuZEFycm93PW9wZW47ZW5kRmlsbD0wO2VuZFNpemU9NDtzdHJva2VDb2xvcj0jQkZCRkJGO3N0cm9rZVdpZHRoPTU7IiBwYXJlbnQ9IjUiIHNvdXJjZT0iOSIgdGFyZ2V0PSIxOCIgZWRnZT0iMSI+CiAgICAgIDxteEdlb21ldHJ5IHJlbGF0aXZlPSIxIiBhcz0iZ2VvbWV0cnkiLz4KICAgIDwvbXhDZWxsPgogICAgPG14Q2VsbCBpZD0iOSIgdmFsdWU9IlN3aXRjaCBMMi9MMyIgc3R5bGU9ImlyLnJlZj0xYjM3MzJiYi04MzFiLTQ0MDEtOTMxOC1jOTRmOTllOTJhZjA7cm91bmRlZD0xO3doaXRlU3BhY2U9d3JhcDtodG1sPTE7YWxpZ249Y2VudGVyO2ltYWdlQWxpZ249Y2VudGVyO2ltYWdlV2lkdGg9ODI7aW1hZ2VIZWlnaHQ9ODI7YXJjU2l6ZT05MDthYnNvbHV0ZUFyY1NpemU9MTtzdHJva2VDb2xvcj0jMjBDOUUzO2ZpbGxDb2xvcj0jRTNGQ0ZDO2ZvbnRDb2xvcj0jMDA4NEFEO2ZvbnRTaXplPTEyO3NvdXJjZT1pcml1c3Jpc2s7aXIudHlwZT1DT01QT05FTlQ7aXIuY29tcG9uZW50RGVmaW5pdGlvbi5yZWY9c3dpdGNoLWwyL2wzO3ZlcnRpY2FsTGFiZWxQb3NpdGlvbj1taWRkbGU7dmVydGljYWxBbGlnbj1taWRkbGU7aXIuc3luY2hyb25pemVkPTE7IiBwYXJlbnQ9IjUiIHZlcnRleD0iMSIgaXNUaHVtYj0iMCI+CiAgICAgIDxteEdlb21ldHJ5IHg9IjEwMSIgeT0iMjMxLjUiIHdpZHRoPSI5MCIgaGVpZ2h0PSI5MCIgYXM9Imdlb21ldHJ5Ii8+CiAgICA8L214Q2VsbD4KICAgIDxteENlbGwgaWQ9IjE0IiB2YWx1ZT0iR2F0ZXdheSxSb3V0ZXIgLSZndDsgU3dpdGNoIEwyL0wzIiBzdHlsZT0iaXIucmVmPWQ3NTExOTdhLTg2MjMtNDA2Yi1iMTZhLWNmZDA4Nzg3ODlmMztlZGdlU3R5bGU9bm9uZTtjdXJ2ZWQ9MTtodG1sPTE7aXIuc3luY2hyb25pemVkPTE7c291cmNlUGVyaW1ldGVyU3BhY2luZz05O2VuZEFycm93PW9wZW47ZW5kRmlsbD0wO2VuZFNpemU9NDtzdHJva2VDb2xvcj0jQkZCRkJGO3N0cm9rZVdpZHRoPTU7IiBwYXJlbnQ9IjUiIHNvdXJjZT0iMTAiIHRhcmdldD0iOSIgZWRnZT0iMSI+CiAgICAgIDxteEdlb21ldHJ5IHJlbGF0aXZlPSIxIiBhcz0iZ2VvbWV0cnkiLz4KICAgIDwvbXhDZWxsPgogICAgPG14Q2VsbCBpZD0iMTAiIHZhbHVlPSJHYXRld2F5LFJvdXRlciIgc3R5bGU9ImlyLnJlZj01MDM4ODRjNS05NDY0LTQ3MDAtYjk5Zi0zMzEyZDlmOTM5MTE7cm91bmRlZD0xO3doaXRlU3BhY2U9d3JhcDtodG1sPTE7YWxpZ249Y2VudGVyO2ltYWdlQWxpZ249Y2VudGVyO2ltYWdlV2lkdGg9ODI7aW1hZ2VIZWlnaHQ9ODI7YXJjU2l6ZT05MDthYnNvbHV0ZUFyY1NpemU9MTtzdHJva2VDb2xvcj0jMjBDOUUzO2ZpbGxDb2xvcj0jRTNGQ0ZDO2ZvbnRDb2xvcj0jMDA4NEFEO2ZvbnRTaXplPTEyO3NvdXJjZT1pcml1c3Jpc2s7aXIudHlwZT1DT01QT05FTlQ7aXIuY29tcG9uZW50RGVmaW5pdGlvbi5yZWY9Z2F0ZXdheS1yb3V0ZXI7dmVydGljYWxMYWJlbFBvc2l0aW9uPW1pZGRsZTt2ZXJ0aWNhbEFsaWduPW1pZGRsZTtpci5zeW5jaHJvbml6ZWQ9MTsiIHBhcmVudD0iNSIgdmVydGV4PSIxIiBpc1RodW1iPSIwIj4KICAgICAgPG14R2VvbWV0cnkgeD0iMTgiIHk9IjIzMS41IiB3aWR0aD0iNDkiIGhlaWdodD0iOTAiIGFzPSJnZW9tZXRyeSIvPgogICAgPC9teENlbGw+CiAgICA8bXhDZWxsIGlkPSIzMiIgdmFsdWU9IkNvbnRyb2xsZXIgLSBQTEMsRUNVLENvbnRyb2xTZXJ2ZXJzIC0mZ3Q7IEFjdHVhdG9yIC0gQ29tcHJlc3NvcixNb3RvcixEcml2ZSIgc3R5bGU9ImlyLnJlZj05NzljN2VhYi02NDM1LTQ3ZTMtYTIxNi00MTU3MDYzMjM3Zjk7ZWRnZVN0eWxlPW5vbmU7Y3VydmVkPTE7aHRtbD0xO2lyLnN5bmNocm9uaXplZD0xO3NvdXJjZVBlcmltZXRlclNwYWNpbmc9OTtlbmRBcnJvdz1vcGVuO2VuZEZpbGw9MDtlbmRTaXplPTQ7c3Ryb2tlQ29sb3I9I0JGQkZCRjtzdHJva2VXaWR0aD0yOyIgcGFyZW50PSI1IiBzb3VyY2U9IjE1IiB0YXJnZXQ9IjgiIGVkZ2U9IjEiPgogICAgICA8bXhHZW9tZXRyeSByZWxhdGl2ZT0iMSIgYXM9Imdlb21ldHJ5Ii8+CiAgICA8L214Q2VsbD4KICAgIDxteENlbGwgaWQ9IjE1IiB2YWx1ZT0iQ29udHJvbGxlciAtIFBMQyxFQ1UsQ29udHJvbFNlcnZlcnMiIHN0eWxlPSJpci5yZWY9YTYwZWMyMDItZDVmMC00ZWJmLWE1ODQtMGZkODkxYjY3ZThjO3JvdW5kZWQ9MTt3aGl0ZVNwYWNlPXdyYXA7aHRtbD0xO2FsaWduPWNlbnRlcjtpbWFnZUFsaWduPWNlbnRlcjtpbWFnZVdpZHRoPTgyO2ltYWdlSGVpZ2h0PTgyO2FyY1NpemU9OTA7YWJzb2x1dGVBcmNTaXplPTE7c3Ryb2tlQ29sb3I9IzIwQzlFMztmaWxsQ29sb3I9I0UzRkNGQztmb250Q29sb3I9IzAwODRBRDtmb250U2l6ZT0xMjtzb3VyY2U9aXJpdXNyaXNrO2lyLnR5cGU9Q09NUE9ORU5UO2lyLmNvbXBvbmVudERlZmluaXRpb24ucmVmPWNvbnRyb2xsZXItcGxjLWVjdS1jb250cm9sc2VydmVyczt2ZXJ0aWNhbExhYmVsUG9zaXRpb249bWlkZGxlO3ZlcnRpY2FsQWxpZ249bWlkZGxlO2lyLnN5bmNocm9uaXplZD0xOyIgcGFyZW50PSI1IiB2ZXJ0ZXg9IjEiIGlzVGh1bWI9IjAiPgogICAgICA8bXhHZW9tZXRyeSB4PSIyMzMiIHk9IjI2IiB3aWR0aD0iOTAiIGhlaWdodD0iOTAiIGFzPSJnZW9tZXRyeSIvPgogICAgPC9teENlbGw+CiAgICA8bXhDZWxsIGlkPSIxNiIgdmFsdWU9IlNlbnNvciAtIE1ldGVycyIgc3R5bGU9ImlyLnJlZj03MzRkNWZiMy01MjhjLTRkNTQtOTNhOS1iNGE1NTM3ZTYxMmM7cm91bmRlZD0xO3doaXRlU3BhY2U9d3JhcDtodG1sPTE7YWxpZ249Y2VudGVyO2ltYWdlQWxpZ249Y2VudGVyO2ltYWdlV2lkdGg9ODI7aW1hZ2VIZWlnaHQ9ODI7YXJjU2l6ZT05MDthYnNvbHV0ZUFyY1NpemU9MTtzdHJva2VDb2xvcj0jMjBDOUUzO2ZpbGxDb2xvcj0jRTNGQ0ZDO2ZvbnRDb2xvcj0jMDA4NEFEO2ZvbnRTaXplPTEyO3NvdXJjZT1pcml1c3Jpc2s7aXIudHlwZT1DT01QT05FTlQ7aXIuY29tcG9uZW50RGVmaW5pdGlvbi5yZWY9c2Vuc29yLW1ldGVycy12YWx2ZXM7dmVydGljYWxMYWJlbFBvc2l0aW9uPW1pZGRsZTt2ZXJ0aWNhbEFsaWduPW1pZGRsZTtpci5zeW5jaHJvbml6ZWQ9MTsiIHBhcmVudD0iNSIgdmVydGV4PSIxIiBpc1RodW1iPSIwIj4KICAgICAgPG14R2VvbWV0cnkgeD0iMzU4IiB5PSI0NDIiIHdpZHRoPSI5MCIgaGVpZ2h0PSIzOCIgYXM9Imdlb21ldHJ5Ii8+CiAgICA8L214Q2VsbD4KICAgIDxteENlbGwgaWQ9IjE3IiB2YWx1ZT0iU2Vuc29yIC0gTWV0ZXJzIiBzdHlsZT0iaXIucmVmPWJmNDI1OGI0LTcxYzgtNDFkNy04MDQzLTQ4YzI4YTYwNGRjZTtyb3VuZGVkPTE7d2hpdGVTcGFjZT13cmFwO2h0bWw9MTthbGlnbj1jZW50ZXI7aW1hZ2VBbGlnbj1jZW50ZXI7aW1hZ2VXaWR0aD04MjtpbWFnZUhlaWdodD04MjthcmNTaXplPTkwO2Fic29sdXRlQXJjU2l6ZT0xO3N0cm9rZUNvbG9yPSMyMEM5RTM7ZmlsbENvbG9yPSNFM0ZDRkM7Zm9udENvbG9yPSMwMDg0QUQ7Zm9udFNpemU9MTI7c291cmNlPWlyaXVzcmlzaztpci50eXBlPUNPTVBPTkVOVDtpci5jb21wb25lbnREZWZpbml0aW9uLnJlZj1zZW5zb3ItbWV0ZXJzLXZhbHZlczt2ZXJ0aWNhbExhYmVsUG9zaXRpb249bWlkZGxlO3ZlcnRpY2FsQWxpZ249bWlkZGxlO2lyLnN5bmNocm9uaXplZD0xOyIgcGFyZW50PSI1IiB2ZXJ0ZXg9IjEiIGlzVGh1bWI9IjAiPgogICAgICA8bXhHZW9tZXRyeSB4PSIyMzMiIHk9IjQ0MSIgd2lkdGg9IjkwIiBoZWlnaHQ9IjM5IiBhcz0iZ2VvbWV0cnkiLz4KICAgIDwvbXhDZWxsPgogICAgPG14Q2VsbCBpZD0iMjIiIHZhbHVlPSJFdGhlcm5ldCAtJmd0OyBDb250cm9sbGVyIC0gUExDLEVDVSxDb250cm9sU2VydmVycyIgc3R5bGU9ImlyLnJlZj0yYjQxZDc1Yi04OGUyLTQ2MzEtOGRkNC0xOGMyZWU2MGNmM2Y7ZWRnZVN0eWxlPW5vbmU7Y3VydmVkPTE7aHRtbD0xO2lyLnN5bmNocm9uaXplZD0xO2VudHJ5WD0wO2VudHJ5WT0wLjU7ZW50cnlEeD0wO2VudHJ5RHk9MDtzb3VyY2VQZXJpbWV0ZXJTcGFjaW5nPTk7ZW5kQXJyb3c9b3BlbjtlbmRGaWxsPTA7ZW5kU2l6ZT00O3N0cm9rZUNvbG9yPSNCRkJGQkY7c3Ryb2tlV2lkdGg9MzsiIHBhcmVudD0iNSIgc291cmNlPSIxOCIgdGFyZ2V0PSIxNSIgZWRnZT0iMSI+CiAgICAgIDxteEdlb21ldHJ5IHJlbGF0aXZlPSIxIiBhcz0iZ2VvbWV0cnkiLz4KICAgIDwvbXhDZWxsPgogICAgPG14Q2VsbCBpZD0iMTgiIHZhbHVlPSJFdGhlcm5ldCIgc3R5bGU9ImlyLnJlZj0wYjRjYzExOC0zYjk5LTQ2ODYtYjVmZi1jZjI3YjdmMjIxMjA7cm91bmRlZD0xO3doaXRlU3BhY2U9d3JhcDtodG1sPTE7YWxpZ249Y2VudGVyO2ltYWdlQWxpZ249Y2VudGVyO2ltYWdlV2lkdGg9ODI7aW1hZ2VIZWlnaHQ9ODI7YXJjU2l6ZT05MDthYnNvbHV0ZUFyY1NpemU9MTtzdHJva2VDb2xvcj0jMjBDOUUzO2ZpbGxDb2xvcj0jRTNGQ0ZDO2ZvbnRDb2xvcj0jMDA4NEFEO2ZvbnRTaXplPTEyO3NvdXJjZT1pcml1c3Jpc2s7aXIudHlwZT1DT01QT05FTlQ7aXIuY29tcG9uZW50RGVmaW5pdGlvbi5yZWY9ZXRoZXJuZXQ7dmVydGljYWxMYWJlbFBvc2l0aW9uPW1pZGRsZTt2ZXJ0aWNhbEFsaWduPW1pZGRsZTtpci5zeW5jaHJvbml6ZWQ9MTsiIHBhcmVudD0iNSIgdmVydGV4PSIxIiBpc1RodW1iPSIwIj4KICAgICAgPG14R2VvbWV0cnkgeD0iMTAxIiB5PSIyNiIgd2lkdGg9IjkwIiBoZWlnaHQ9IjkwIiBhcz0iZ2VvbWV0cnkiLz4KICAgIDwvbXhDZWxsPgogICAgPG14Q2VsbCBpZD0iMjMiIHZhbHVlPSJITUksR1VJLERpc3BsYXkiIHN0eWxlPSJpci5yZWY9NGQwNjVmNDYtMWY3ZS00MTY2LWIwNzQtMmZkMDM4MzY3ODc5O3JvdW5kZWQ9MTt3aGl0ZVNwYWNlPXdyYXA7aHRtbD0xO2FsaWduPWNlbnRlcjtpbWFnZUFsaWduPWNlbnRlcjtpbWFnZVdpZHRoPTgyO2ltYWdlSGVpZ2h0PTgyO2FyY1NpemU9OTA7YWJzb2x1dGVBcmNTaXplPTE7c3Ryb2tlQ29sb3I9IzIwQzlFMztmaWxsQ29sb3I9I0UzRkNGQztmb250Q29sb3I9IzAwODRBRDtmb250U2l6ZT0xMjtzb3VyY2U9aXJpdXNyaXNrO2lyLnR5cGU9Q09NUE9ORU5UO2lyLmNvbXBvbmVudERlZmluaXRpb24ucmVmPWhtaS1ndWktZGlzcGxheTt2ZXJ0aWNhbExhYmVsUG9zaXRpb249bWlkZGxlO3ZlcnRpY2FsQWxpZ249bWlkZGxlO2lyLnN5bmNocm9uaXplZD0xOyIgcGFyZW50PSI1IiB2ZXJ0ZXg9IjEiIGlzVGh1bWI9IjAiPgogICAgICA8bXhHZW9tZXRyeSB4PSI0NDgiIHk9IjIzOS41IiB3aWR0aD0iNDgiIGhlaWdodD0iOTAiIGFzPSJnZW9tZXRyeSIvPgogICAgPC9teENlbGw+CiAgICA8bXhDZWxsIGlkPSIyNCIgdmFsdWU9IkFuZHJvaWQsaU9TLFdpbmRvd3MiIHN0eWxlPSJpci5yZWY9MzFlYTkzYzItZTI4Yy00ZGZiLTliNGItYzliNTc4NGNjZjU2O3JvdW5kZWQ9MTt3aGl0ZVNwYWNlPXdyYXA7aHRtbD0xO2FsaWduPWNlbnRlcjtpbWFnZUFsaWduPWNlbnRlcjtpbWFnZVdpZHRoPTgyO2ltYWdlSGVpZ2h0PTgyO2FyY1NpemU9OTA7YWJzb2x1dGVBcmNTaXplPTE7c3Ryb2tlQ29sb3I9IzIwQzlFMztmaWxsQ29sb3I9I0UzRkNGQztmb250Q29sb3I9IzAwODRBRDtmb250U2l6ZT0xMjtzb3VyY2U9aXJpdXNyaXNrO2lyLnR5cGU9Q09NUE9ORU5UO2lyLmNvbXBvbmVudERlZmluaXRpb24ucmVmPWFuZHJvaWQtaW9zLXdpbmRvd3M7dmVydGljYWxMYWJlbFBvc2l0aW9uPW1pZGRsZTt2ZXJ0aWNhbEFsaWduPW1pZGRsZTtpci5zeW5jaHJvbml6ZWQ9MTsiIHBhcmVudD0iNSIgdmVydGV4PSIxIiBpc1RodW1iPSIwIj4KICAgICAgPG14R2VvbWV0cnkgeD0iNDk2IiB5PSIyNTEuNSIgd2lkdGg9IjcyIiBoZWlnaHQ9IjY2IiBhcz0iZ2VvbWV0cnkiLz4KICAgIDwvbXhDZWxsPgogICAgPG14Q2VsbCBpZD0iMjciIHZhbHVlPSIiIHN0eWxlPSJhc3BlY3Q9Zml4ZWQ7aHRtbD0xO3BvaW50cz1bXTthbGlnbj1jZW50ZXI7aW1hZ2U7Zm9udFNpemU9MTI7aW1hZ2U9aW1nL2xpYi9tc2NhZS9QZXJzb24uc3ZnO3N0cm9rZUNvbG9yPSMyMEM5RTM7c3Ryb2tlV2lkdGg9NTtmaWxsQ29sb3I9I0Y1RjVGNTsiIHBhcmVudD0iNSIgdmVydGV4PSIxIiBpc1RodW1iPSIwIj4KICAgICAgPG14R2VvbWV0cnkgeD0iNjAyIiB5PSIyNTYuNSIgd2lkdGg9IjM3IiBoZWlnaHQ9IjUwIiBhcz0iZ2VvbWV0cnkiLz4KICAgIDwvbXhDZWxsPgogICAgPG14Q2VsbCBpZD0iMzEiIHZhbHVlPSJTZW5zb3IiIHN0eWxlPSJpci5yZWY9Njc1NzAzODktNGE2YS00OWIzLTk4ZGYtOWI3MGE3MGZjZWYyO3JvdW5kZWQ9MTt3aGl0ZVNwYWNlPXdyYXA7aHRtbD0xO2FsaWduPWNlbnRlcjtpbWFnZUFsaWduPWNlbnRlcjtpbWFnZVdpZHRoPTgyO2ltYWdlSGVpZ2h0PTgyO2FyY1NpemU9OTA7YWJzb2x1dGVBcmNTaXplPTE7c3Ryb2tlQ29sb3I9IzIwQzlFMztmaWxsQ29sb3I9I0UzRkNGQztmb250Q29sb3I9IzAwODRBRDtmb250U2l6ZT0xMjtzb3VyY2U9aXJpdXNyaXNrO2lyLnR5cGU9Q09NUE9ORU5UO2lyLmNvbXBvbmVudERlZmluaXRpb24ucmVmPXNlbnNvci1tZXRlcnMtdmFsdmVzO3ZlcnRpY2FsTGFiZWxQb3NpdGlvbj1taWRkbGU7dmVydGljYWxBbGlnbj1taWRkbGU7aXIuc3luY2hyb25pemVkPTE7IiBwYXJlbnQ9IjUiIHZlcnRleD0iMSIgaXNUaHVtYj0iMCI+CiAgICAgIDxteEdlb21ldHJ5IHg9IjM4MiIgeT0iMzE2IiB3aWR0aD0iNDMiIGhlaWdodD0iODgiIGFzPSJnZW9tZXRyeSIvPgogICAgPC9teENlbGw+CiAgICA8bXhDZWxsIGlkPSIyOSIgdmFsdWU9IlNlbnNvciIgc3R5bGU9ImlyLnJlZj1kYTk5NDM0OC0wNmJhLTQ0ZjctODM5ZS1lOTkyYTgyZTEyOTc7cm91bmRlZD0xO3doaXRlU3BhY2U9d3JhcDtodG1sPTE7YWxpZ249Y2VudGVyO2ltYWdlQWxpZ249Y2VudGVyO2ltYWdlV2lkdGg9ODI7aW1hZ2VIZWlnaHQ9ODI7YXJjU2l6ZT05MDthYnNvbHV0ZUFyY1NpemU9MTtzdHJva2VDb2xvcj0jMjBDOUUzO2ZpbGxDb2xvcj0jRTNGQ0ZDO2ZvbnRDb2xvcj0jMDA4NEFEO2ZvbnRTaXplPTEyO3NvdXJjZT1pcml1c3Jpc2s7aXIudHlwZT1DT01QT05FTlQ7aXIuY29tcG9uZW50RGVmaW5pdGlvbi5yZWY9c2Vuc29yLW1ldGVycy12YWx2ZXM7dmVydGljYWxMYWJlbFBvc2l0aW9uPW1pZGRsZTt2ZXJ0aWNhbEFsaWduPW1pZGRsZTtpci5zeW5jaHJvbml6ZWQ9MTsiIHBhcmVudD0iNSIgdmVydGV4PSIxIiBpc1RodW1iPSIwIj4KICAgICAgPG14R2VvbWV0cnkgeD0iMjU0IiB5PSIzMTYiIHdpZHRoPSI0MyIgaGVpZ2h0PSI4OCIgYXM9Imdlb21ldHJ5Ii8+CiAgICA8L214Q2VsbD4KICAgIDxteENlbGwgaWQ9IjMzIiB2YWx1ZT0iUkYgSW50ZXJmYWNlIC0gODAyLjExIFdpZmkiIHN0eWxlPSJpci5yZWY9Y2Q3MTg2YmEtYmI5Yi00YzFhLTlkMmMtZTgzMDEzMjIzNGVjO3JvdW5kZWQ9MTt3aGl0ZVNwYWNlPXdyYXA7aHRtbD0xO2FsaWduPWNlbnRlcjtpbWFnZUFsaWduPWNlbnRlcjtpbWFnZVdpZHRoPTgyO2ltYWdlSGVpZ2h0PTgyO2FyY1NpemU9OTA7YWJzb2x1dGVBcmNTaXplPTE7c3Ryb2tlQ29sb3I9IzIwQzlFMztmaWxsQ29sb3I9I0UzRkNGQztmb250Q29sb3I9IzAwODRBRDtmb250U2l6ZT0xMjtzb3VyY2U9aXJpdXNyaXNrO2lyLnR5cGU9Q09NUE9ORU5UO2lyLmNvbXBvbmVudERlZmluaXRpb24ucmVmPXJmLWludGVyZmFjZS04MDItMTEtd2lmaTt2ZXJ0aWNhbExhYmVsUG9zaXRpb249bWlkZGxlO3ZlcnRpY2FsQWxpZ249bWlkZGxlO2lyLnN5bmNocm9uaXplZD0xOyIgcGFyZW50PSI1IiB2ZXJ0ZXg9IjEiIGlzVGh1bWI9IjAiPgogICAgICA8bXhHZW9tZXRyeSB4PSI1NjIiIHk9IjI2IiB3aWR0aD0iOTAiIGhlaWdodD0iNTUuNSIgYXM9Imdlb21ldHJ5Ii8+CiAgICA8L214Q2VsbD4KICAgIDxteENlbGwgaWQ9IjM1IiB2YWx1ZT0iIiBzdHlsZT0iaHRtbD0xO3ZlcnRpY2FsTGFiZWxQb3NpdGlvbj1ib3R0b207YWxpZ249Y2VudGVyO2xhYmVsQmFja2dyb3VuZENvbG9yPSNmZmZmZmY7dmVydGljYWxBbGlnbj10b3A7c3Ryb2tlV2lkdGg9MjtzdHJva2VDb2xvcj0jMDA4MEYwO3NoYWRvdz0wO2Rhc2hlZD0wO3NoYXBlPW14Z3JhcGguaW9zNy5pY29ucy53aWZpO3BvaW50ZXJFdmVudHM9MTtmaWxsQ29sb3I9I0Y1RjVGNTtmb250Q29sb3I9IzhDOEM4Qztyb3RhdGlvbj0tMTM1OyIgcGFyZW50PSI1IiB2ZXJ0ZXg9IjEiIGlzVGh1bWI9IjAiPgogICAgICA8bXhHZW9tZXRyeSB4PSI1NTEuMyIgeT0iNzIiIHdpZHRoPSIyOS43IiBoZWlnaHQ9IjIxIiBhcz0iZ2VvbWV0cnkiLz4KICAgIDwvbXhDZWxsPgogICAgPG14Q2VsbCBpZD0iMzYiIHZhbHVlPSIiIHN0eWxlPSJodG1sPTE7dmVydGljYWxMYWJlbFBvc2l0aW9uPWJvdHRvbTthbGlnbj1jZW50ZXI7bGFiZWxCYWNrZ3JvdW5kQ29sb3I9I2ZmZmZmZjt2ZXJ0aWNhbEFsaWduPXRvcDtzdHJva2VXaWR0aD0yO3N0cm9rZUNvbG9yPSMwMDgwRjA7c2hhZG93PTA7ZGFzaGVkPTA7c2hhcGU9bXhncmFwaC5pb3M3Lmljb25zLndpZmk7cG9pbnRlckV2ZW50cz0xO2ZpbGxDb2xvcj0jRjVGNUY1O2ZvbnRDb2xvcj0jOEM4QzhDO3JvdGF0aW9uPTA7IiBwYXJlbnQ9IjUiIHZlcnRleD0iMSIgaXNUaHVtYj0iMCI+CiAgICAgIDxteEdlb21ldHJ5IHg9IjUxNy4xNDk5OTk5OTk5OTk5IiB5PSIyMzAuNSIgd2lkdGg9IjI5LjciIGhlaWdodD0iMjEiIGFzPSJnZW9tZXRyeSIvPgogICAgPC9teENlbGw+CiAgICA8bXhDZWxsIGlkPSIzOCIgdmFsdWU9IlJGIEludGVyZmFjZSAtIEJsdWV0b290aCIgc3R5bGU9ImlyLnJlZj1iMzYwMGIzZC0zZTM1LTQ3YzAtYjY0Yi0zYmIxMjczOWJmODE7cm91bmRlZD0xO3doaXRlU3BhY2U9d3JhcDtodG1sPTE7YWxpZ249Y2VudGVyO2ltYWdlQWxpZ249Y2VudGVyO2ltYWdlV2lkdGg9ODI7aW1hZ2VIZWlnaHQ9ODI7YXJjU2l6ZT05MDthYnNvbHV0ZUFyY1NpemU9MTtzdHJva2VDb2xvcj0jMjBDOUUzO2ZpbGxDb2xvcj0jRTNGQ0ZDO2ZvbnRDb2xvcj0jMDA4NEFEO2ZvbnRTaXplPTEyO3NvdXJjZT1pcml1c3Jpc2s7aXIudHlwZT1DT01QT05FTlQ7aXIuY29tcG9uZW50RGVmaW5pdGlvbi5yZWY9cmYtaW50ZXJmYWNlLWJsdWV0b290aDt2ZXJ0aWNhbExhYmVsUG9zaXRpb249bWlkZGxlO3ZlcnRpY2FsQWxpZ249bWlkZGxlO2lyLnN5bmNocm9uaXplZD0xOyIgcGFyZW50PSI1IiB2ZXJ0ZXg9IjEiIGlzVGh1bWI9IjAiPgogICAgICA8bXhHZW9tZXRyeSB4PSI0OTgiIHk9IjMxNy41IiB3aWR0aD0iNzEuNSIgaGVpZ2h0PSI2MyIgYXM9Imdlb21ldHJ5Ii8+CiAgICA8L214Q2VsbD4KICAgIDxteENlbGwgaWQ9IjM5IiB2YWx1ZT0iIiBzdHlsZT0iaHRtbD0xO3N0cm9rZVdpZHRoPTE7c2hhZG93PTA7ZGFzaGVkPTA7c2hhcGU9bXhncmFwaC5pb3M3Lm1pc2MuYmx1ZXRvb3RoO2ZpbGxDb2xvcj0jMDA3QUZGO3N0cm9rZUNvbG9yPW5vbmU7YnV0dG9uVGV4dD07c3Ryb2tlQ29sb3IyPSMyMjIyMjI7Zm9udENvbG9yPSMyMjIyMjI7Zm9udFNpemU9ODt2ZXJ0aWNhbExhYmVsUG9zaXRpb249Ym90dG9tO3ZlcnRpY2FsQWxpZ249dG9wO2FsaWduPWNlbnRlcjsiIHBhcmVudD0iNSIgdmVydGV4PSIxIiBpc1RodW1iPSIwIj4KICAgICAgPG14R2VvbWV0cnkgeD0iNTg1IiB5PSIyODAiIHdpZHRoPSIxNSIgaGVpZ2h0PSIxNSIgYXM9Imdlb21ldHJ5Ii8+CiAgICA8L214Q2VsbD4KICAgIDxteENlbGwgaWQ9IjQzIiB2YWx1ZT0ib2ZmaWNlIGJ1aWxkaW5nIiBzdHlsZT0ib3V0bGluZUNvbm5lY3Q9MDtncmFkaWVudENvbG9yPW5vbmU7Zm9udENvbG9yPSM1NDVCNjQ7c3Ryb2tlQ29sb3I9bm9uZTtmaWxsQ29sb3I9Izg3OTE5NjtkYXNoZWQ9MDt2ZXJ0aWNhbExhYmVsUG9zaXRpb249Ym90dG9tO3ZlcnRpY2FsQWxpZ249dG9wO2FsaWduPWNlbnRlcjtodG1sPTE7Zm9udFNpemU9MTI7Zm9udFN0eWxlPTA7YXNwZWN0PWZpeGVkO3NoYXBlPW14Z3JhcGguYXdzNC5pbGx1c3RyYXRpb25fb2ZmaWNlX2J1aWxkaW5nO3BvaW50ZXJFdmVudHM9MSIgcGFyZW50PSI1IiB2ZXJ0ZXg9IjEiPgogICAgICA8bXhHZW9tZXRyeSB4PSIyNyIgeT0iNDA0IiB3aWR0aD0iMTAwIiBoZWlnaHQ9IjcxIiBhcz0iZ2VvbWV0cnkiLz4KICAgIDwvbXhDZWxsPgogICAgPG14Q2VsbCBpZD0iMTMiIHN0eWxlPSJlZGdlU3R5bGU9bm9uZTtjdXJ2ZWQ9MTtodG1sPTE7aXIuc3luY2hyb25pemVkPTE7ZW50cnlYPTA7ZW50cnlZPTAuNTtlbnRyeUR4PTA7ZW50cnlEeT0wO3NvdXJjZVBlcmltZXRlclNwYWNpbmc9OTtlbmRBcnJvdz1vcGVuO2VuZEZpbGw9MDtlbmRTaXplPTQ7c3Ryb2tlQ29sb3I9I0JGQkZCRjtzdHJva2VXaWR0aD01OyIgcGFyZW50PSIxIiBzb3VyY2U9IjExIiB0YXJnZXQ9IjEwIiBlZGdlPSIxIj4KICAgICAgPG14R2VvbWV0cnkgcmVsYXRpdmU9IjEiIGFzPSJnZW9tZXRyeSIvPgogICAgPC9teENlbGw+CiAgPC9yb290Pgo8L214R3JhcGhNb2RlbD4K</schema>
  </diagram>
  <trustZones>
    <trustZone ref="internet" uuid="f0ba7722-39b6-4c81-8290-a30a248bb8d9" name="Internet" desc="Untrusted Internet public zone" trustRating="1"/>
    <trustZone ref="iec62443-sl2" uuid="4acd4ed7-d176-4d50-9896-b16faf20924c" name="iec62443-sl2" desc="" trustRating="2"/>
  </trustZones>
  <questions/>
  <assets/>
  <settings>
    <issueTrackers>
      <jira>
        <fields/>
      </jira>
    </issueTrackers>
  </settings>
  <dataflows>
    <dataflow name="Switch L2/L3 -&gt; Ethernet" ref="1c4f37f6-9a29-449e-9f80-bd7936c7e29b" source="a0c0dc14-231e-446a-bb2b-351dc27d2414" target="a8d847b4-1cbd-4dd1-80da-f4380ecf35c0">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Ethernet -&gt; Controller - PLC,ECU,ControlServers" ref="2b41d75b-88e2-4631-8dd4-18c2ee60cf3f" source="a8d847b4-1cbd-4dd1-80da-f4380ecf35c0" target="69242525-545b-4484-bf49-7aa27e22f2e3">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Controller - PLC,ECU,ControlServers -&gt; Actuator - Compressor,Motor,Drive" ref="979c7eab-6435-47e3-a216-4157063237f9" source="69242525-545b-4484-bf49-7aa27e22f2e3" target="dfb1f940-d2d7-4c37-aae3-23698c7e5a4c">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Gateway,Router -&gt; Switch L2/L3" ref="d751197a-8623-406b-b16a-cfd0878789f3" source="1f6d947b-e729-4b29-8274-8234bd42b429" target="a0c0dc14-231e-446a-bb2b-351dc27d2414">
      <assets/>
      <tags/>
    </dataflow>
  </dataflows>
  <customFields/>
  <components>
    <component uuid="3029dad3-3ceb-4191-8de5-490a270fb670" diagramComponentId="da994348-06ba-44f7-839e-e992a82e1297" ref="15c73059-c3f9-4f51-8f00-d8e38da14c6f" name="Sensor" desc="" library="iec62443" parentComponentRef="" componentDefinitionRef="sensor-meters-valves">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="iec62443-sl2"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-300" name="Channel Accessible by Non-Endpoint ('Man-in-the-Middle')" state="0" impact="100" issueId="">
          <desc>The product does not adequately verify the identity of actors at both ends of a communication channel, or does not adequately ensure the integrity of the channel, in a way that allows the channel to be accessed or influenced by an actor that is not an endpoint.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-284" name="Improper Access Control" state="0" impact="100" issueId="">
          <desc>The software does not restrict or incorrectly restricts access to a resource from an unauthorized actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-79" name="Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')" state="0" impact="100" issueId="">
          <desc>The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-307" name="Improper Restriction of Excessive Authentication Attempts" state="0" impact="100" issueId="">
          <desc>The software does not implement sufficient measures to prevent multiple failed authentication attempts within in a short time frame, making it more susceptible to brute force attacks.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-732" name="Incorrect Permission Assignment for Critical Resource" state="0" impact="100" issueId="">
          <desc>The software specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-209" name="Information Exposure Through an Error Message" state="0" impact="100" issueId="">
          <desc>The software generates an error message that includes sensitive information about its environment, users, or associated data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-1100" name="Insufficient Isolation of System-Dependent Functions" state="0" impact="100" issueId="">
          <desc>The product or code does not isolate system-dependent
					functionality into separate stand-alone modules.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="">
          <desc>When a security-critical event occurs, the software either does not record the event or omits important details about the event when logging it.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-522" name="Insufficiently Protected Credentials" state="0" impact="100" issueId="">
          <desc>This weakness occurs when the application transmits or stores authentication credentials and uses an insecure method that is susceptible to unauthorized interception and/or retrieval.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-5" name="J2EE Misconfiguration: Data Transmission Without Encryption" state="0" impact="100" issueId="">
          <desc>Information sent over a network can be compromised while in transit. An attacker may be able to read or modify the contents if the data are sent in plaintext or are weakly encrypted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-311" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="">
          <desc>The software does not encrypt sensitive or critical information before storage or transmission.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-693" name="Protection Mechanism Failure" state="0" impact="100" issueId="">
          <desc>The product does not use or incorrectly uses a protection mechanism that provides sufficient defence against directed attacks against the product.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-521" name="Weak Password Requirements" state="0" impact="100" issueId="">
          <desc>The product does not require that users should have strong passwords, which makes it easier for attackers to compromise user accounts.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="protect_audit_info_logs_tools" name="Assets shall protect audit information, audit logs, and audit tools (if present) from unauthorized access, modification and deletion." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. the storage of audit information to hardware-enforced write-once media.
2. Access Management Process</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.11" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_auth_all_users_based_on_resp" name="Assets shall provide an authorization enforcement mechanism for all identified and authenticated users based on their assigned responsibilities." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. On all interfaces, the control system shall provide the capability to enforce authorizations assigned to all users (humans, software processes and devices) for controlling use of the control system to support segregation of duties and least privilege.
2. Authorization is granting of permissions based on authentication. 
3.All authorization decisions should be made on the server, not the client.  
4. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
5. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
6. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
7. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
8. Server side implementation and presentation layer representations of access control rules must match. 
9. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
10. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
11. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="continuous_monitor_accepted_sec" name="Assets shall provide the capability to be continuously monitored using commonly accepted security industry practices and recommendations to detect, characterize and report security breaches in a timely manner." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Control system monitoring capability can be achieved through a variety of tools and
techniques (for example, IDS, IPS, malicious code protection mechanisms and network monitoring mechanisms).
2. Monitoring devices should be strategically deployed within the control system (for example, at
selected perimeter locations and near server farms supporting critical applications) to collect
essential information. Monitoring mechanisms may also be deployed at ad hoc locations
within the control system to track specific transactions
3. SIEM Implementation</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_for_audit_records" name="Assets shall provide the capability to create timestamps (including date and time) for use in audit records." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Timestamps (including date and time) of audit records should be generated using internal
system clocks.
1. provide timestamps for use in audit record generation.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" name="Assets shall provide the capability to create timestamps that are synchronized with a system wide time source." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>to synchronize internal system clocks at a configurable frequency.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="maintain_essential_functions" name="Assets shall provide the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>provide the capability to manage communication loads (such as
using rate limiting) to mitigate the effects of information flooding types of DoS events.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" name="Assets shall provide the capability to specifically restrict the use of unnecessary functions, ports, protocols and/or services." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc> 1. capability to specifically prohibit and/or restrict the use of unnecessary functions, ports, protocols and/or services.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="validate_syntax_length_content_of_any_input" name="Assets shall validate the syntax, length and content of any input data that is used as an industrial process control input or input via external interfaces that directly impacts the action of the asset." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. input data validation include out-of-range values for a defined field type, invalid characters in data fields, missing or incomplete data and buffer overflow.
2. SAST &amp; DAST
3. Data from external sources are sanitized based on acceptable formats and lengths.  It is preferred to use white listing, over black listing.
4. Data is validated when crossing API boundaries</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_pw_policy_enforce" name="For assets utilizing password-based authentication, the asset shall provide the capability to enforce configurable password strength based on minimum length and variety of character types. " issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.
Note: A service should employ one or more tactics to prevent or at least slow down a brute force attack, including: blacklisting an IP after 5 unsuccessful attempts, slowing down attempts with increasing timeout delays introduced after 5 unsuccessful attempts, locking out non-admin accounts after 3 unsuccessful attempts.  The account must be disabled for a period of time sufficient to discourage brute force guessing of credentials, but not so long as to allow for a denial-of-service attack to be performed.  Allow non-admin users to reset their own passwords to prevent administrative burden.  If users are allowed to reset their password, best practice is to email a new password to the users email account and require a reset upon next logon.  It is not best practice to simply reset and display the new password on the authentication screen as an attacker may trigger that reset and change the password without notice to the user.  If using a screen reveal of password, should be accompanied by both a known secret of user, such as mothers maiden name and also an email to notify the user of such a change.  Temporary passwords and links should have a short expiration time.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_human_user_interface_determine_user_took_action" name="If an asset provides a human user interface, the asset shall provide the capability to determine whether a given human user took a particular action. Control elements that are not able to support such capability shall be listed in component documents." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Examples of particular actions taken by a user include performing operator actions, changing
control system configurations, creating information, sending a message, approving
information (such as indicating concurrence) and receiving a message.
1. digital signatures, digital message receipts and timestamps</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.14" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" name="If an asset supports usage through wireless interfaces it shall provide the capability to integrate into the asset that supports usage authorization, monitoring and restrictions according to commonly accepted industry practices." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>provide the capability to authorize, monitor and enforce usage restrictions for wireless connectivity to the control system.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="id_and_handle_error_conditions" name="The asset shall identify and handle error conditions in a manner such that effective remediation can occur. This shall be done in a manner which does not provide information that could be exploited by adversaries to attack the IACS unless revealing this information is necessary for the timely troubleshooting of problems." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Error messages generated by the control system should provide timely and useful information without revealing potentially harmful information.
2. Vulnerability Assessment &amp; Penetration Testing</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_auth_based_on_role_leas_priv" name="The asset shall provide authorization enforcement for all users based on their assigned responsibilities and least privilege" issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. enforce authorizations assigned to all human users.
2. Use control policies (for example, identity-based policies, role-based policies and rule-based policies) and associated read/write access enforcement mechanisms (for example, access control lists, access control matrices and cryptography).
2. check which roles are assigned to a verified user or asset and which privileges are assigned to these roles – if the requested operation is covered by the permissions, it is executed, otherwise rejected. Only qualified and authorized individuals should obtain the use of control system components for purposes of initiating changes, including upgrades and modifications. Authorization is granting of permissions based on authentication. 
3.All authorization decisions should be made on the server, not the client.  
4. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
5. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
6. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
7. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
8. Server side implementation and presentation layer representations of access control rules must match. 
9. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
10. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
11. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="role_to_define_and_modify_perm_mapping" name="The asset shall provide directly or through a compensating security mechanism, for an authorized role to define and modify the mapping of permissions to roles for all human users" issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>The control system shall provide the capability for an authorized user or role to define and
modify the mapping of permissions to roles for all human users.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_config_usage_restriction" name="The asset shall provide the capability to automatically enforce configurable usage restrictions" issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Authenticate &amp; Authorize devices before allowing connection.
2. Digital+E46 Signatures</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="employ_cypto_mechs_to_recognize_changes" name="The asset shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="limit_invalid_attempts" name="The asset shall provide the capability to enforce a limit of a configurable number of consecutive invalid access attempts by any user (human, software process or device) during a configurable time period. The asset shall provide the capability to deny access for a specified period of time or until unlocked by an administrator when this limit has been exceeded." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. limit of a configurable number of consecutive invalid access attempts by any user (human, software process or device).
2. As per Policy.
3. For all invalid authentication attempts, the server should simply respond "invalid attempt, please retry" or similarly vague statement that does not imply partial success.  
Note: A service should employ one or more tactics to prevent or at least slow down a brute force attack, including: blacklisting an IP after 5 unsuccessful attempts, slowing down attempts with increasing timeout delays introduced after 5 unsuccessful attempts, locking out non-admin accounts after 3 unsuccessful attempts.  The account must be disabled for a period of time sufficient to discourage brute force guessing of credentials, but not so long as to allow for a denial-of-service attack to be performed.  Allow non-admin users to reset their own passwords to prevent administrative burden.  If users are allowed to reset their password, best practice is to email a new password to the users email account and require a reset upon next logon.  It is not best practice to simply reset and display the new password on the authentication screen as an attacker may trigger that reset and change the password without notice to the user.  If using a screen reveal of password, should be accompanied by both a known secret of user, such as mothers maiden name and also an email to notify the user of such a change.  Temporary passwords and links should have a short expiration time.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" name="The asset shall provide the capability to generate audit records relevant to security for the following categories: access control, request errors, operating system events, asset events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Generate audit records relevant to security for the following categories: access control, request errors, operating system events, control system events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="logically_segment_control_system" name="The asset shall provide the capability to logically segment asset networks from non-asset networks and to logically segment critical asset networks from other asset networks." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Access from the control system to the World Wide Web should be clearly justified based on
control system operational requirements.
2. Logical Segmentation.
3. Physical Segmentation.
4. capability to provide network services to control system networks, critical or otherwise, without a connection to non-control system networks.
5. capability to logically and physically isolate critical control system networks from non-critical control system networks.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="mitigate_info_effects_flooding_types" name="The asset shall provide the capability to manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. boundary protection
2. restricting the information flow to be unidirectional outbound
3. manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events.
4. restrict the ability of all users (humans, software processes and devices) to cause DoS events which affect other control systems or networks.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="physically_segment_control_system" name="The asset shall provide the capability to physically segment asset networks from non-asset networks and to physically segment critical asset networks from non-critical asset networks." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="prevent_further_access_init_seslock" name="The asset shall provide the capability to prevent further access by initiating a session lock after a configurable time period of inactivity or by manual initiation. The session lock shall remain in effect until the human user who owns the session or another authorized human user re-establishes access using appropriate identification and authentication procedures." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. activate session lock mechanisms automatically after a configurable time period.
2. In some cases, session lock for control system operator workstations or nodes is not advised (for example, sessions which are required for immediate operator responses in emergency situations).
3. In situations where the control system cannot support session lock, the responsible entity should employ appropriate compensating countermeasures (for example, providing increased physical security, personnel security and auditing measures).
Note: Use the server or framework’s session management controls. The application should only recognize these session identifiers as valid. Session identifier creation must always be done on a trusted system (e.g., The server). Session management controls should use well vetted algorithms that ensure sufficiently random session identifiers. Set the domain and path for cookies containing authenticated session identifiers to an appropriately restricted value for the site. Logout functionality should fully terminate the associated session or connection. Logout functionality should be available from all pages protected by authorization. Establish a session inactivity timeout that is as short as possible, based on balancing risk and business functional requirements. In most cases it should be no more than several hours. Disallow persistent logins and enforce periodic session terminations, even when the session is active. Especially for applications supporting rich network connections or connecting to critical systems. Termination times should support business requirements and the user should receive sufficient notification to mitigate negative impacts. If a session was established before login, close that session and establish a new session after a successful login. Generate a new session identifier on any re-authentication. Do not allow concurrent logins with the same user ID. Supplement standard session management for sensitive server-side operations, like account management, by utilizing per-session strong random tokens or parameters. This method can be used to prevent Cross Site Request Forgery attacks. Supplement standard session management for highly sensitive or critical operations by utilizing per-request, as opposed to per-session, strong random tokens or parameters. Set the "secure" attribute for cookies transmitted over an TLS connection. Set cookies with the HttpOnly attribute, unless you specifically require client-side scripts within your application to read or set a cookie's value</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_conf_of_info_traversing_netw" name="The asset shall provide the capability to protect the confidentiality of information at rest and remote access sessions traversing an untrusted network." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_conf_of_info_at_rest_remote_access" name="The asset shall provide the capability to protect the confidentiality of information for which explicit read authorization is supported, whether at rest or in transit." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. physical means, compartmentalization or encryption.
2. configuring explicit read authorizations in the control system.
3. Digital Certificates.
4. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_integrity_transmitted_info" name="The asset shall provide the capability to protect the integrity of transmitted information." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="report_current_list_of_installed_assets" name="The asset shall provide the capability to report the current list of installed assets and their associated properties." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Usage of component ID, capability and revision level.
2. Formal process of configuration management should be deployed to keep control of the
changes in the component inventory baseline
3. The system requires all default passwords and pass phrases to be changed in order to complete the setup, prior to being operational.  This includes SSID passphrases, default accounts, admin accounts, etc.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="switch_to_and_from_emergency_power_supply" name="The asset shall provide the capability to switch to and from an emergency power supply without affecting the existing security state or a documented degraded mode. " issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>There may be instances where compensating countermeasures such as physical door access
control or control system may be affected by loss of base power supply, in which case the emergency power supply should cover those associated systems.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="common-sl2-cr1-11" name="SL2 - Common - CR1.11" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-11-adv_bruteforce_auth_creds" name="And adversary can bruteforce authentication credentials" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-522">
                  <countermeasures>
                    <countermeasure ref="limit_invalid_attempts" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="limit_invalid_attempts" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-7" name="SL2 - Common - CR1.7" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-7-adv_bruteforce_pw" name="An adversary is able to brute force the password" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-307">
                  <countermeasures>
                    <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-7-adv_guess_pw" name="An adversary is able to guess the password based on identifying an authenticator" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-521">
                  <countermeasures>
                    <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-1" name="SL2 - Common - CR2.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-1-adv_connect_with_compromised_acc_make_changes" name="An adversary is able to connect to the asset with a compromised account and is able to make changes to all content available on the asset. (no roles)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_auth_all_users_based_on_resp" mitigation="34"/>
                    <countermeasure ref="enforce_auth_based_on_role_leas_priv" mitigation="33"/>
                    <countermeasure ref="role_to_define_and_modify_perm_mapping" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_auth_all_users_based_on_resp" mitigation="34"/>
                <countermeasure ref="enforce_auth_based_on_role_leas_priv" mitigation="33"/>
                <countermeasure ref="role_to_define_and_modify_perm_mapping" mitigation="33"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-11" name="SL2 - Common - CR2.11" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-11-an_adversary_compromises_a_system_without_knowing_when_he_compromised_it" name="An adversary compromises a system without knowing when he compromised it." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                    <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-12" name="SL2 - Common - CR2.12" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-12-an_adversary_compromised_the_system_not_knowing_from_where_he_compromised_the_system" name="An adversary compromised the asset, not knowing from where he compromised the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="provide_human_user_interface_determine_user_took_action" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_human_user_interface_determine_user_took_action" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-2" name="SL2 - Common - CR2.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-2-adv_wifi_access" name="An adversary is able to get access to the asset via wireless protocols without authorization" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-3" name="SL2 - Common - CR2.3" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-3-adv_portable_dev_access" name="An adversary can access the asset using a portable device" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_config_usage_restriction" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_config_usage_restriction" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-5" name="SL2 - Common - CR2.5" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-5-an_adversary_can_perform_a_dos_attack_by_making_consecutive_authorization_requests" name="An adversary can perform a DoS attack by making consecutive authorization requests" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-307">
                  <countermeasures>
                    <countermeasure ref="prevent_further_access_init_seslock" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="prevent_further_access_init_seslock" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-8" name="SL2 - Common - CR2.8" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-8-an_aversary_could_have_compromised_the_sytem_without_you_knowing" name="An adversary could have compromised the system without you knowing what part in the asset was compromised or how he compromised the asset " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-1" name="SL2 - Common - CR3.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-1-adv_intercept_netw_traffic" name="An adversary can intercept network traffic" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="25" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-5">
                  <countermeasures>
                    <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                    <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-5" name="SL2 - Common - CR3.5" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-5-adv_xss" name="An adversary can perform cross site scripting when input is not validated" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-79">
                  <countermeasures>
                    <countermeasure ref="validate_syntax_length_content_of_any_input" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="validate_syntax_length_content_of_any_input" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-7" name="SL2 - Common - CR3.7" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-7-adv_disclose_info_via_error_msg" name="An adversary can use error messages that contain too much information, such as stack traces, to discover vulnerabilities in the running service." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-209">
                  <countermeasures>
                    <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-9" name="SL2 - Common - CR3.9" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-9-adv_delete_audit_records_after_breach" name="An adversary is able to delete audit records after a system breach which can make investigations very difficult  " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-732">
                  <countermeasures>
                    <countermeasure ref="protect_audit_info_logs_tools" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_audit_info_logs_tools" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr4-1" name="SL2 - Common - CR4.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr4-1-adv_intercept_unecrypted_file_in_transit" name="An adversary is able to intercept an unencrypted file in transit" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="protect_conf_of_info_at_rest_remote_access" mitigation="50"/>
                    <countermeasure ref="protect_conf_of_info_traversing_netw" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_conf_of_info_at_rest_remote_access" mitigation="50"/>
                <countermeasure ref="protect_conf_of_info_traversing_netw" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr5-1" name="SL2 - Common - CR5.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr5-1-network_segmentation_exploit" name="An adversary is able to hop between internal networks since they are not segregated" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="logically_segment_control_system" mitigation="50"/>
                    <countermeasure ref="physically_segment_control_system" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="logically_segment_control_system" mitigation="50"/>
                <countermeasure ref="physically_segment_control_system" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr6-2" name="SL2 - Common - CR6.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr6-2-continuous_monitoring_exploit" name="An adversary compromises a system  without it being timely notified and detected by for example a IDS" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-693">
                  <countermeasures>
                    <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-1" name="SL2 - Common - CR7.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-1-dos_no_protect" name="Assets might lose the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event.&#10;" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-1100">
                  <countermeasures>
                    <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                    <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-5" name="SL2 - Common - CR7.5" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-5-emergency_power" name="An adversary can cause a power outage of a security system which will give an adversary to compromise the asset." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="switch_to_and_from_emergency_power_supply" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="switch_to_and_from_emergency_power_supply" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-7" name="SL2 - Common - CR7.7" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-7-unauth_access_unnecessary_func" name="Unauthorized component access might occur as a result of not being able to restrict unnecessary functions, ports, protocols and/or services." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-8" name="SL2 - Common - CR7.8" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-8-rogue_assets" name="Rogue assets might enter the network as a result of not being able to verify component identities." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="0c53d780-9253-46ce-aa24-08b3a3f7a3f5" diagramComponentId="a60ec202-d5f0-4ebf-a584-0fd891b67e8c" ref="69242525-545b-4484-bf49-7aa27e22f2e3" name="Controller - PLC,ECU,ControlServers" desc="" library="iec62443" parentComponentRef="" componentDefinitionRef="controller-plc-ecu-controlservers">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="iec62443-sl2"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-300" name="Channel Accessible by Non-Endpoint ('Man-in-the-Middle')" state="0" impact="100" issueId="">
          <desc>The product does not adequately verify the identity of actors at both ends of a communication channel, or does not adequately ensure the integrity of the channel, in a way that allows the channel to be accessed or influenced by an actor that is not an endpoint.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-284" name="Improper Access Control" state="0" impact="100" issueId="">
          <desc>The software does not restrict or incorrectly restricts access to a resource from an unauthorized actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-287" name="Improper Authentication" state="0" impact="100" issueId="">
          <desc>When an actor claims to have a given identity, the software does not prove or insufficiently proves that the claim is correct.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-20" name="Improper Input Validation" state="0" impact="100" issueId="">
          <desc>The product does not validate or incorrectly validates input that can affect the control flow or data flow of a program.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-79" name="Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')" state="0" impact="100" issueId="">
          <desc>The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-117" name="Improper Output Neutralization for Logs" state="0" impact="100" issueId="">
          <desc>The software does not neutralize or incorrectly neutralizes output that is written to logs.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-307" name="Improper Restriction of Excessive Authentication Attempts" state="0" impact="100" issueId="">
          <desc>The software does not implement sufficient measures to prevent multiple failed authentication attempts within in a short time frame, making it more susceptible to brute force attacks.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-354" name="Improper Validation of Integrity Check Value" state="0" impact="100" issueId="">
          <desc>The software does not validate or incorrectly validates the integrity check values or "checksums" of a message. This may prevent it from detecting if the data has been modified or corrupted in transmission.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-326" name="Inadequate Encryption Strength" state="0" impact="100" issueId="">
          <desc>The software stores or transmits sensitive data using an encryption scheme that is theoretically sound, but is not strong enough for the level of protection required.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-532" name="Inclusion of Sensitive Information in Log Files" state="0" impact="100" issueId="">
          <desc>Information written to log files can be of a sensitive nature and give valuable guidance to an attacker or expose sensitive user information.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-732" name="Incorrect Permission Assignment for Critical Resource" state="0" impact="100" issueId="">
          <desc>The software specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-286" name="Incorrect User Management" state="0" impact="100" issueId="">
          <desc>The software does not properly manage a user within its environment.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-209" name="Information Exposure Through an Error Message" state="0" impact="100" issueId="">
          <desc>The software generates an error message that includes sensitive information about its environment, users, or associated data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-1100" name="Insufficient Isolation of System-Dependent Functions" state="0" impact="100" issueId="">
          <desc>The product or code does not isolate system-dependent
					functionality into separate stand-alone modules.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="">
          <desc>When a security-critical event occurs, the software either does not record the event or omits important details about the event when logging it.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-522" name="Insufficiently Protected Credentials" state="0" impact="100" issueId="">
          <desc>This weakness occurs when the application transmits or stores authentication credentials and uses an insecure method that is susceptible to unauthorized interception and/or retrieval.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-5" name="J2EE Misconfiguration: Data Transmission Without Encryption" state="0" impact="100" issueId="">
          <desc>Information sent over a network can be compromised while in transit. An attacker may be able to read or modify the contents if the data are sent in plaintext or are weakly encrypted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-322" name="Key Exchange without Entity Authentication" state="0" impact="100" issueId="">
          <desc>The software performs a key exchange with an actor without verifying the identity of that actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-311" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="">
          <desc>The software does not encrypt sensitive or critical information before storage or transmission.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-636" name="Not Failing Securely ('Failing Open')" state="0" impact="100" issueId="">
          <desc>When the product encounters an error condition or failure, its design requires it to fall back to a state that is less secure than other options that are available, such as selecting the weakest encryption algorithm or using the most permissive access control restrictions.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-693" name="Protection Mechanism Failure" state="0" impact="100" issueId="">
          <desc>The product does not use or incorrectly uses a protection mechanism that provides sufficient defence against directed attacks against the product.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-384" name="Session Fixation" state="0" impact="100" issueId="">
          <desc>Authenticating a user, or otherwise establishing a new user session, without invalidating any existing session identifier gives an attacker the opportunity to steal authenticated sessions.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-507" name="Trojan Horse" state="0" impact="100" issueId="">
          <desc>The software appears to contain benign or useful functionality, but it also contains code that is hidden from normal operation that violates the intended security policy of the user or the system administrator.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-798" name="Use of Hard-coded Credentials" state="0" impact="100" issueId="">
          <desc>The software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-261" name="Weak Cryptography for Passwords" state="0" impact="100" issueId="">
          <desc>Obscuring a password with a trivial encoding does not protect the password.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-521" name="Weak Password Requirements" state="0" impact="100" issueId="">
          <desc>The product does not require that users should have strong passwords, which makes it easier for attackers to compromise user accounts.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-123" name="Write-what-where Condition" state="0" impact="100" issueId="">
          <desc>Any condition where the attacker has the ability to write an arbitrary value to an arbitrary location, often as the result of a buffer overflow.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="protect_audit_info_logs_tools" name="Assets shall protect audit information, audit logs, and audit tools (if present) from unauthorized access, modification and deletion." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. the storage of audit information to hardware-enforced write-once media.
2. Access Management Process</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.11" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_auth_all_users_based_on_resp" name="Assets shall provide an authorization enforcement mechanism for all identified and authenticated users based on their assigned responsibilities." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. On all interfaces, the control system shall provide the capability to enforce authorizations assigned to all users (humans, software processes and devices) for controlling use of the control system to support segregation of duties and least privilege.
2. Authorization is granting of permissions based on authentication. 
3.All authorization decisions should be made on the server, not the client.  
4. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
5. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
6. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
7. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
8. Server side implementation and presentation layer representations of access control rules must match. 
9. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
10. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
11. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="auth_humans_tools_audit_logs" name="Assets shall provide the capability for authorized humans and/or tools to access audit logs on a read-only basis." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Access Control - Authorize members
2. Least Privilege &amp; Need to Know Basis
3. Review of access </desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="config_according_to_recommended_netw_and_security" name="Assets shall provide the capability to be configured according to recommended network and security configurations as described in guidelines provided by the asset supplier. The asset shall provide an interface to the currently deployed network and security configuration settings." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Devices with network connectivity are capable of being updated from the network.
2. provide the capability to generate a report listing the currently deployed security settings in a machine-readable format.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="continuous_monitor_accepted_sec" name="Assets shall provide the capability to be continuously monitored using commonly accepted security industry practices and recommendations to detect, characterize and report security breaches in a timely manner." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Control system monitoring capability can be achieved through a variety of tools and
techniques (for example, IDS, IPS, malicious code protection mechanisms and network monitoring mechanisms).
2. Monitoring devices should be strategically deployed within the control system (for example, at
selected perimeter locations and near server farms supporting critical applications) to collect
essential information. Monitoring mechanisms may also be deployed at ad hoc locations
within the control system to track specific transactions
3. SIEM Implementation</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="cap_to_be_recovered_to_known_secure_state" name="Assets shall provide the capability to be recovered and reconstituted to a known secure state after a disruption or failure." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Control system recovery and reconstitution to a known secure state means that all system
parameters (either default or configurable) are set to secure values, security-critical patches
are reinstalled, security-related configuration settings are reestablished, system documentation and operating procedures are available, application and system software is reinstalled and configured with secure settings, information from the most recent, known secure backups is loaded and the system is fully tested and functional.
1. Roll back procedure.
2. Secure storage of previous version</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_for_audit_records" name="Assets shall provide the capability to create timestamps (including date and time) for use in audit records." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Timestamps (including date and time) of audit records should be generated using internal
system clocks.
1. provide timestamps for use in audit record generation.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" name="Assets shall provide the capability to create timestamps that are synchronized with a system wide time source." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>to synchronize internal system clocks at a configurable frequency.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="maintain_essential_functions" name="Assets shall provide the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>provide the capability to manage communication loads (such as
using rate limiting) to mitigate the effects of information flooding types of DoS events.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="support_auth_check_on_software_config" name="Assets shall provide the capability to perform or support authenticity checks on software, configuration and other information as well as the recording and reporting of the results of these checks or be integrated into a system that can perform or support authenticity checks." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Integrity verification methods are employed to detect, record, report and protect against software and information tampering.
1. cryptographic hashes
2. Notification of unauthorize changes
Integrity verification methods are employed to detect, record, report and protect against software and information tampering that may occur if other protection mechanisms (such as authorization enforcement) have been circumvented. The control system should employ formal or recommended integrity mechanisms (such as cryptographic hashes).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="integrity_check_software" name="Assets shall provide the capability to perform or support integrity checks on software, configuration and other information as well as the recording and reporting of the results of these checks or be integrated into a system that can perform or support integrity checks." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Integrity verification methods are employed to detect, record, report and protect against software and information tampering.
1. cryptographic hashes
2. Notification of unauthorize changes
Integrity verification methods are employed to detect, record, report and protect against software and information tampering that may occur if other protection mechanisms (such as authorization enforcement) have been circumvented. The control system should employ formal or recommended integrity mechanisms (such as cryptographic hashes).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_critical_long_lived_symmetric_keys" name="Assets shall provide the capability to protect critical, long lived symmetric keys via hardware mechanisms." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. establish the mutual trust using the symmetric key; store securely the shared secret (the authentication is valid as long as the shared secret remains secret); restrict access to the shared secret; ensure that the algorithms and keys used for the symmetric key authentication</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.16" supportedStandardRef="iec-62443-4-2:2019"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" name="Assets shall provide the capability to specifically restrict the use of unnecessary functions, ports, protocols and/or services." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc> 1. capability to specifically prohibit and/or restrict the use of unnecessary functions, ports, protocols and/or services.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="validate_syntax_length_content_of_any_input" name="Assets shall validate the syntax, length and content of any input data that is used as an industrial process control input or input via external interfaces that directly impacts the action of the asset." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. input data validation include out-of-range values for a defined field type, invalid characters in data fields, missing or incomplete data and buffer overflow.
2. SAST &amp; DAST
3. Data from external sources are sanitized based on acceptable formats and lengths.  It is preferred to use white listing, over black listing.
4. Data is validated when crossing API boundaries</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="phys_logical_connect_to_automation_process" name="Assets that physically or logically connect to an automation process shall provide the capability to set outputs to a predetermined state if normal operation as defined by the asset supplier cannot be maintained." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. The appropriate predetermined state of control system outputs is application dependent and could be one of the following user configurable options:
• Unpowered – the outputs fail to the unpowered state
• Hold – the outputs fail to the last-known good value
• Fixed – the outputs fail to a fixed value that is determined by the asset owner or an
application
2. All user supplied data is encoded prior to output. (i.e.. Html encoding, special character encoding).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_pw_policy_enforce" name="For assets utilizing password-based authentication, the asset shall provide the capability to enforce configurable password strength based on minimum length and variety of character types. " issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.
Note: A service should employ one or more tactics to prevent or at least slow down a brute force attack, including: blacklisting an IP after 5 unsuccessful attempts, slowing down attempts with increasing timeout delays introduced after 5 unsuccessful attempts, locking out non-admin accounts after 3 unsuccessful attempts.  The account must be disabled for a period of time sufficient to discourage brute force guessing of credentials, but not so long as to allow for a denial-of-service attack to be performed.  Allow non-admin users to reset their own passwords to prevent administrative burden.  If users are allowed to reset their password, best practice is to email a new password to the users email account and require a reset upon next logon.  It is not best practice to simply reset and display the new password on the authentication screen as an attacker may trigger that reset and change the password without notice to the user.  If using a screen reveal of password, should be accompanied by both a known secret of user, such as mothers maiden name and also an email to notify the user of such a change.  Temporary passwords and links should have a short expiration time.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_id_and_auth_for_human_users" name="Identify and authenticate all human users" issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. passwords, tokens, biometrics, Certificates, geographic location
2. role-based or group-based
3. should be applied to both local and remote access to the control system.
4. Least Privilege 
5. Segregation of Duties
6. Authentication types (factors): (1) something you know (a secret) -like username and password; (2) something you have - such as a token device or smart phone; and (3) something you are - such as biometrics. 
7. On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.
8.  services should run as non-root accounts or use SUID accounts that release privilege after service start.  Non-root accounts used for services should not have a shell enabled, i.e. /dev/null should be shell in passwd file.  In cases where the application must run with elevated privileges, raise privileges as late as possible, and drop them as soon as possible.  For windows based services, it is preferred to run the service as SYSTEM, instead of an administrator account, which would have credentials which may be guessed and used in an attack.
9. Authorization is granting of permissions based on authentication. 
10.All authorization decisions should be made on the server, not the client.  
11. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
12. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
13. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
14. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
15. Server side implementation and presentation layer representations of access control rules must match. 
16. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
17. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
18. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources
Note: system level forms of identification, such as IP or MAC address are easily spoofable and therefore do not qualify as a valid form of authentication. Establish and utilize standard, tested, authentication services whenever possible. Use a centralized implementation for all authentication controls, including libraries that call external authentication services. Segregate authentication logic from the resource being requested and use redirection to and from the centralized authentication control.  All authentication controls should fail securely. Enforce password complexity requirements established by policy or regulation. Authentication credentials should be sufficient to withstand attacks that are typical of the threats in the deployed environment. (e.g., requiring the use of alphabetic as well as numeric and/or special characters). Enforce password length requirements established by policy or regulation. Eight characters is commonly used, but 16 is better or consider the use of multi-word pass phrases. Password entry should be obscured on the user's screen. (e.g., on web forms use the input type "password")</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_human_user_interface_determine_user_took_action" name="If an asset provides a human user interface, the asset shall provide the capability to determine whether a given human user took a particular action. Control elements that are not able to support such capability shall be listed in component documents." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Examples of particular actions taken by a user include performing operator actions, changing
control system configurations, creating information, sending a message, approving
information (such as indicating concurrence) and receiving a message.
1. digital signatures, digital message receipts and timestamps</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.14" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="terminate_remote_session_auto_or_manual" name="If an asset supports remote sessions, the asset shall provide the capability to terminate a remote session either automatically after a configurable time period of inactivity, manually by a local authority, or manually by the user (human, software process or device) who initiated the session." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Terminate a remote session either automatically after a configurable time period of inactivity, manually by a local authority, or manually by the user (human, software process or device) who initiated the session.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" name="If an asset supports usage through wireless interfaces it shall provide the capability to integrate into the asset that supports usage authorization, monitoring and restrictions according to commonly accepted industry practices." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>provide the capability to authorize, monitor and enforce usage restrictions for wireless connectivity to the control system.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="user_crypto_algs" name="If cryptography is required, the asset shall use cryptographic algorithms, key sizes and mechanisms for key establishment and management according to commonly accepted security industry practices and recommendations." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. document the practices and procedures relating to cryptographic key establishment and management.
2. utilize established and tested encryption and hash algorithms, such as the advanced
encryption standard (AES) and the secure hash algorithm (SHA) series, and key sizes based
on an assigned standard.
3. Key generation needs to be performed using an effective random number generator.
4. The security policies and procedures for key management need to address
periodic key changes, key destruction, key distribution and encryption key backup in
accordance with defined standards</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_acc_mgmt_for_auth_users" name="Provide support of management of all accounts by authorized users" issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. individual, role-based, device-based, Service &amp;  default account management Policy.
2. Review of accounts.
3. Approvals for creating, disabling, removing or modifying accounts.
4.  On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="allocate_sufficient_audit_record_storage" name="The asset shall allocate sufficient audit record storage capacity according to commonly recognized recommendations for log management and system configuration. The asset shall provide auditing mechanisms to reduce the likelihood of such capacity being exceeded." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>The control system shall allocate sufficient audit record storage capacity according to
commonly recognized recommendations for log management and system configuration. The
control system shall provide auditing mechanisms to reduce the likelihood of such capacity
being exceeded</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.11" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="id_and_handle_error_conditions" name="The asset shall identify and handle error conditions in a manner such that effective remediation can occur. This shall be done in a manner which does not provide information that could be exploited by adversaries to attack the IACS unless revealing this information is necessary for the timely troubleshooting of problems." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Error messages generated by the control system should provide timely and useful information without revealing potentially harmful information.
2. Vulnerability Assessment &amp; Penetration Testing</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_auth_based_on_role_leas_priv" name="The asset shall provide authorization enforcement for all users based on their assigned responsibilities and least privilege" issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. enforce authorizations assigned to all human users.
2. Use control policies (for example, identity-based policies, role-based policies and rule-based policies) and associated read/write access enforcement mechanisms (for example, access control lists, access control matrices and cryptography).
2. check which roles are assigned to a verified user or asset and which privileges are assigned to these roles – if the requested operation is covered by the permissions, it is executed, otherwise rejected. Only qualified and authorized individuals should obtain the use of control system components for purposes of initiating changes, including upgrades and modifications. Authorization is granting of permissions based on authentication. 
3.All authorization decisions should be made on the server, not the client.  
4. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
5. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
6. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
7. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
8. Server side implementation and presentation layer representations of access control rules must match. 
9. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
10. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
11. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="role_to_define_and_modify_perm_mapping" name="The asset shall provide directly or through a compensating security mechanism, for an authorized role to define and modify the mapping of permissions to roles for all human users" issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>The control system shall provide the capability for an authorized user or role to define and
modify the mapping of permissions to roles for all human users.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="alert_personnel_prevent_svc_loss" name="The asset shall provide the capability to alert personnel and prevent the loss of essential services and functions in the event of an audit processing failure. The control system shall provide the capability to support appropriate actions in response to an audit processing failure according to commonly accepted industry practices and recommendations. " issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Audit generation typically occurs at the source of the event. Audit processing involves
transmission, possible augmentation (such as the addition of a timestamp) and persistent
storage of the audit records. Audit processing failures include, for example, software or
hardware errors, failures in the audit capturing mechanisms and audit storage capacity being
reached or exceeded
1.capability to alert personnel and prevent the loss of essential services and functions in the event of an audit processing failure.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.12" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_config_usage_restriction" name="The asset shall provide the capability to automatically enforce configurable usage restrictions" issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Authenticate &amp; Authorize devices before allowing connection.
2. Digital+E46 Signatures</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="deny_access_via_untrusted_netw_unless_approved" name="The asset shall provide the capability to deny access requests via untrusted networks unless approved by an assigned role." issueId="" platform="" cost="0" risk="74" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.15" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="deny_netw_traffic_allow_netw_traffic_exceptions" name="The asset shall provide the capability to deny network traffic by default and allow network traffic by exception (also termed deny all, permit by exception)." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>deny network traffic by default and allow network traffic by exception (also termed deny all, permit by exception).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="show_sys_use_notification" name="The asset shall provide the capability to display a system use notification message before authenticating. The system use notification message shall be configurable by authorized personnel." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. display a system use notification message or warning banners before authenticating &amp; configurable by authorized personnel.
2. Privacy and security policies and procedures need to be consistent with applicable laws,
directives, policies, regulations, standards and guidance.
3. Examples of elements for inclusion in the system use notification message are:
a) that the individual is accessing a specific control system;
b) that system usage may be monitored, recorded and subject to audit;
c) that unauthorized use of the system is prohibited and subject to criminal and/or civil
penalties; and
d) that use of the system indicates consent to monitoring and recording</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.14" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="employ_cypto_mechs_to_recognize_changes" name="The asset shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="employ_maware_protection" name="The asset shall provide the capability to employ malicious code protection mechanisms at all entry and exit points." issueId="" platform="" cost="0" risk="74" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>prevent, detect, mitigate and report instances of detected malicious code (for example, viruses, worms, Trojan horses and spyware) transported by electronic mail, electronic mail attachments, Internet access, removable media (for example, universal serial bus (USB) devices, diskettes or compact disks), PDF documents, web services, network connections and infected laptops or other
common means.
1. Detection Technique  - binary integrity and attributes monitoring, hashing and signature techniques.
2.Mitigation technique - file cleaning, quarantining, file deletion, host communication restriction and IPSs
3. Prevention Technique - application blacklisting and whitelisting techniques, removable media control, sandbox techniques and specific computing platforms mechanisms such as restricted firmware update capabilities, No Execute (NX) bit, data execution prevention (DEP), address space layout randomization (ASLR), stack corruption detection and mandatory access controls.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" name="The asset shall provide the capability to employ protection mechanisms to prevent, detect, report and mitigate the effects of malicious code or unauthorized software. The asset shall provide the capability to update the protection mechanisms." issueId="" platform="" cost="0" risk="74" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>prevent, detect, mitigate and report instances of detected malicious code (for example, viruses, worms, Trojan horses and spyware) transported by electronic mail, electronic mail attachments, Internet access, removable media (for example, universal serial bus (USB) devices, diskettes or compact disks), PDF documents, web services, network connections and infected laptops or other
common means.
1. Detection Technique  - binary integrity and attributes monitoring, hashing and signature techniques.
2.Mitigation technique - file cleaning, quarantining, file deletion, host communication restriction and IPSs
3. Prevention Technique - application blacklisting and whitelisting techniques, removable media control, sandbox techniques and specific computing platforms mechanisms such as restricted firmware update capabilities, No Execute (NX) bit, data execution prevention (DEP), address space layout randomization (ASLR), stack corruption detection and mandatory access controls.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="limit_invalid_attempts" name="The asset shall provide the capability to enforce a limit of a configurable number of consecutive invalid access attempts by any user (human, software process or device) during a configurable time period. The asset shall provide the capability to deny access for a specified period of time or until unlocked by an administrator when this limit has been exceeded." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. limit of a configurable number of consecutive invalid access attempts by any user (human, software process or device).
2. As per Policy.
3. For all invalid authentication attempts, the server should simply respond "invalid attempt, please retry" or similarly vague statement that does not imply partial success.  
Note: A service should employ one or more tactics to prevent or at least slow down a brute force attack, including: blacklisting an IP after 5 unsuccessful attempts, slowing down attempts with increasing timeout delays introduced after 5 unsuccessful attempts, locking out non-admin accounts after 3 unsuccessful attempts.  The account must be disabled for a period of time sufficient to discourage brute force guessing of credentials, but not so long as to allow for a denial-of-service attack to be performed.  Allow non-admin users to reset their own passwords to prevent administrative burden.  If users are allowed to reset their password, best practice is to email a new password to the users email account and require a reset upon next logon.  It is not best practice to simply reset and display the new password on the authentication screen as an attacker may trigger that reset and change the password without notice to the user.  If using a screen reveal of password, should be accompanied by both a known secret of user, such as mothers maiden name and also an email to notify the user of such a change.  Temporary passwords and links should have a short expiration time.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" name="The asset shall provide the capability to generate audit records relevant to security for the following categories: access control, request errors, operating system events, asset events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Generate audit records relevant to security for the following categories: access control, request errors, operating system events, control system events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" name="The asset shall provide the capability to identify and authenticate all software processes and devices. This capability shall enforce such identification and authentication on all interfaces which provide access to the asset to support least privilege in accordance with applicable security policies and procedures." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. identity bound to the physical device
2. passwords, tokens or location (physical or logical)
3. role-based, group-based or entity-based,
4. Combination of 1) something you know (a secret) -like username and password; (2) something you have - such as a token device or smart phone; and (3) something you are - such as biometrics. 
5. Assign identifiers that uniquely identify users/devices
a. E.g., employ a unique username-password combination for the user
b. Reasoning: This will prevent user 1 from spoofing as user 2. This is a concern for users with different levels of access.
6. Uniquely identify and authenticate users and devices
c. Multi-factor authentication
d. Use of authentication protocols that require no password/multifactor authentication: e.g., OAuth, OpenID, SAML</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_auth_init" name="The asset shall provide the capability to: initialize authenticator content; change all default authenticators upon asset installation; change/refresh all authenticators; protect all authenticators from unauthorized disclosure and modification when stored and transmitted." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>&gt; initialize authenticator content;
&gt; change all default authenticators upon control system installation;
&gt; change/refresh all authenticators; and
&gt; protect all authenticators from unauthorized disclosure and modification when stored and
transmitted
2.  tokens, symmetric keys, private keys (part of a public/private key pair), biometrics,
passwords, physical keys and key card
3. Human users should take reasonable measures to safeguard authenticators, including maintaining possession of their individual authenticators, not loaning or sharing authenticators with others and reporting lost or compromised authenticators immediately.
4. cryptographic protections such as encryption or hashing or by handshake protocols which do not require transmission of the password. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.
5. Lockout or loss of control due to security measures is not acceptable. If the control system is required to have a high level of availability, measures should be taken to maintain this high
level of availability (such as compensating physical countermeasures, duplicate keys and
supervisory override).
6. Complex strength of the authentication mechanism</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="logically_segment_control_system" name="The asset shall provide the capability to logically segment asset networks from non-asset networks and to logically segment critical asset networks from other asset networks." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Access from the control system to the World Wide Web should be clearly justified based on
control system operational requirements.
2. Logical Segmentation.
3. Physical Segmentation.
4. capability to provide network services to control system networks, critical or otherwise, without a connection to non-control system networks.
5. capability to logically and physically isolate critical control system networks from non-critical control system networks.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="mitigate_info_effects_flooding_types" name="The asset shall provide the capability to manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. boundary protection
2. restricting the information flow to be unidirectional outbound
3. manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events.
4. restrict the ability of all users (humans, software processes and devices) to cause DoS events which affect other control systems or networks.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="monitor_control_access_methods" name="The asset shall provide the capability to monitor and control all methods of access to the asset via untrusted networks." issueId="" platform="" cost="0" risk="74" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Examples of access to the control system via untrusted networks typically include remote
access methods (such as dial-up, broadband and wireless) as well as connections from a
company’s office (non-control system) network.
1. restrict access achieved through dial-up connections (for example, limiting dial-up access based upon the source of the request).
2. protect against unauthorized connections or subversion of authorized connections (for example, using virtual private network technology).
3. Access via untrusted networks to geographically remote control system component locations (for example, control centers and field locations) should only be enabled when necessary and authenticated.
4. Multifactor authentication for remote user access to the control system.
5. Use of VPNs &amp; Firewalls.
6. Monitoring &amp; Logging of Access for control systems.
7. deny access requests via untrusted networks unless approved by an assigned role.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.15" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="monitor_control_comms_zone_boundaries" name="The asset shall provide the capability to monitor and control communications at zone boundaries to enforce the compartmentalization defined in the risk-based zones and conduits model." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Any connections to external networks or other control systems should occur through managed
interfaces consisting of appropriate boundary protection devices (for example, proxies,
gateways, routers, firewalls, unidirectional gateways, guards and encrypted tunnels) arranged
in an effective architecture (for example, firewalls protecting application gateways residing in
a DMZ).
1. capability to deny network traffic by default and allow network traffic by exception (also termed deny all, permit by exception).
2. capability to prevent any communication through the control system boundary (also termed island mode).
3. The control system shall provide the capability to prevent any communication through the
control system boundary when there is an operational failure of the boundary protection
mechanisms (also termed fail close). This ‘fail close’ functionality shall be designed such that
it does not interfere with the operation of a SIS or other safety-related functions.
4. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="physically_segment_control_system" name="The asset shall provide the capability to physically segment asset networks from non-asset networks and to physically segment critical asset networks from non-critical asset networks." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_conf_of_info_traversing_netw" name="The asset shall provide the capability to protect the confidentiality of information at rest and remote access sessions traversing an untrusted network." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_conf_of_info_at_rest_remote_access" name="The asset shall provide the capability to protect the confidentiality of information for which explicit read authorization is supported, whether at rest or in transit." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. physical means, compartmentalization or encryption.
2. configuring explicit read authorizations in the control system.
3. Digital Certificates.
4. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_integrity_transmitted_info" name="The asset shall provide the capability to protect the integrity of transmitted information." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="report_current_list_of_installed_assets" name="The asset shall provide the capability to report the current list of installed assets and their associated properties." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Usage of component ID, capability and revision level.
2. Formal process of configuration management should be deployed to keep control of the
changes in the component inventory baseline
3. The system requires all default passwords and pass phrases to be changed in order to complete the setup, prior to being operational.  This includes SSID passphrases, default accounts, admin accounts, etc.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_support_mgmt_id_by_user_group_role" name="The asset shall provide the capability to support the management of identifiers by user, group, role or asset interface." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Management of identifiers by group, role or  system interface.
2. Session ID, resource ID, secure cookie management policy.
3. On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.
NOTE: Use the server or framework’s session management controls. The application should only recognize these session identifiers as valid. Session identifier creation must always be done on a trusted system (e.g., The server). Session management controls should use well vetted algorithms that ensure sufficiently random session identifiers. Set the domain and path for cookies containing authenticated session identifiers to an appropriately restricted value for the site. Logout functionality should fully terminate the associated session or connection. Logout functionality should be available from all pages protected by authorization. Establish a session inactivity timeout that is as short as possible, based on balancing risk and business functional requirements. In most cases it should be no more than several hours. Disallow persistent logins and enforce periodic session terminations, even when the session is active. Especially for applications supporting rich network connections or connecting to critical systems. Termination times should support business requirements and the user should receive sufficient notification to mitigate negative impacts. If a session was established before login, close that session and establish a new session after a successful login. Generate a new session identifier on any re-authentication. Do not allow concurrent logins with the same user ID. Supplement standard session management for sensitive server-side operations, like account management, by utilizing per-session strong random tokens or parameters. This method can be used to prevent Cross Site Request Forgery attacks. Supplement standard session management for highly sensitive or critical operations by utilizing per-request, as opposed to per-session, strong random tokens or parameters. Set the "secure" attribute for cookies transmitted over an TLS connection. Set cookies with the HttpOnly attribute, unless you specifically require client-side scripts within your application to read or set a cookie's value
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="switch_to_and_from_emergency_power_supply" name="The asset shall provide the capability to switch to and from an emergency power supply without affecting the existing security state or a documented degraded mode. " issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>There may be instances where compensating countermeasures such as physical door access
control or control system may be affected by loss of base power supply, in which case the emergency power supply should cover those associated systems.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="unique_id_human_users" name="The asset shall provide the capability to uniquely identify and authenticate all human users." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. passwords, tokens, biometrics, Certificates, geographic location
2. role-based or group-based
3. should be applied to both local and remote access to the control system.
4. Least Privilege 
5. Segregation of Duties
6. Authentication types (factors): (1) something you know (a secret) -like username and password; (2) something you have - such as a token device or smart phone; and (3) something you are - such as biometrics. 
7. On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.
8.  services should run as non-root accounts or use SUID accounts that release privilege after service start.  Non-root accounts used for services should not have a shell enabled, i.e. /dev/null should be shell in passwd file.  In cases where the application must run with elevated privileges, raise privileges as late as possible, and drop them as soon as possible.  For windows based services, it is preferred to run the service as SYSTEM, instead of an administrator account, which would have credentials which may be guessed and used in an attack.
9. Authorization is granting of permissions based on authentication. 
10.All authorization decisions should be made on the server, not the client.  
11. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
12. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
13. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
14. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
15. Server side implementation and presentation layer representations of access control rules must match. 
16. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
17. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
18. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources.
19. Assign identifiers that uniquely identify users/devices
a. E.g., employ a unique username-password combination for the user
b. Reasoning: This will prevent user 1 from spoofing as user 2. This is a concern for users with different levels of access.
20. Uniquely identify and authenticate users and devices
c. Multi-factor authentication
d. Use of authentication protocols that require no password/multifactor authentication: e.g., OAuth, OpenID, SAML
Note: system level forms of identification, such as IP or MAC address are easily spoofable and therefore do not qualify as a valid form of authentication. Establish and utilize standard, tested, authentication services whenever possible. Use a centralized implementation for all authentication controls, including libraries that call external authentication services. Segregate authentication logic from the resource being requested and use redirection to and from the centralized authentication control.  All authentication controls should fail securely. Enforce password complexity requirements established by policy or regulation. Authentication credentials should be sufficient to withstand attacks that are typical of the threats in the deployed environment. (e.g., requiring the use of alphabetic as well as numeric and/or special characters). Enforce password length requirements established by policy or regulation. Eight characters is commonly used, but 16 is better or consider the use of multi-word pass phrases. Password entry should be obscured on the user's screen. (e.g., on web forms use the input type "password")</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="validate_integrity_of_backup_info" name="The asset shall provide the capability to verify the reliability of backup mechanisms" issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>provide the capability to verify the reliability of backup mechanisms</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="id_auth_all_users_engaged_in_wireless_comms" name="The controls system shall provide the capability to identify and authenticate all users (humans, software processes or devices) engaged in wireless communication." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Identification of Wireless technologies include, but are not limited to, microwave, satellite, packet radio, Institute of Electrical and Electronics Engineers (IEEE) 802.11x, IEEE 802.15.4 (ZigBee,IEC 62591 – WirelessHART®, ISA-100.11a), IEEE 802.15.1 (Bluetooth), wireless LAN mobile routers, mobile phones with tethering and various infrared technologies.
1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="uniquely_id_auth_all_users_engaged_in_wireless_comms" name="The controls system shall provide the capability to uniquely identify and authenticate all users (humans, software processes or devices) engaged in wireless communication." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Identification of Wireless technologies include, but are not limited to, microwave, satellite, packet radio, Institute of Electrical and Electronics Engineers (IEEE) 802.11x, IEEE 802.15.4 (ZigBee,IEC 62591 – WirelessHART®, ISA-100.11a), IEEE 802.15.1 (Bluetooth), wireless LAN mobile routers, mobile phones with tethering and various infrared technologies.
1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_participate_in_sys_level_backup" name="The identity and location of critical files and the ability to conduct backups of user-level and system-level information (including system state information) shall be supported by the asset without affecting the normal plant operations." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. availability of up-to-date backups.
2. verify the reliability of backup mechanisms.
3. automate the backup function based on a configurable frequency.
4. Review of Failed Backups.
5. Centralize Backup, backup media.
6. Encrypted backup storage</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="obscure_auth_feedback" name="When an asset provides an authentication capability, the asset shall provide the capability to obscure feedback of authenticator information during the authentication process." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. obscure feedback of authentication information during the authentication process by displaying asterisks or other random characters when a human user types in a password obscures feedback of authentication information.
2. entry of wired equivalent privacy (WEP) keys, secure socket shell (SSH) token entry and
RSA one-time passwords.
3. not provide any hint as to the reason for the authentication failure, such as “unknown user name”.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.12" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="common-sl2-cr1-1" name="SL2 - Common - CR1.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-1-auth_access_token_exploit" name="An adversary exploits a weakness in authentication to create an access token to associate a process/thread" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-287">
                  <countermeasures>
                    <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                    <countermeasure ref="unique_id_human_users" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                <countermeasure ref="unique_id_human_users" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-1-unauth_human_sys_access" name="Unauthorized human access to the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                    <countermeasure ref="unique_id_human_users" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                <countermeasure ref="unique_id_human_users" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-1-unid-sys-user" name="Unidentified user of the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="50" availability="25" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-286">
                  <countermeasures>
                    <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                    <countermeasure ref="unique_id_human_users" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                <countermeasure ref="unique_id_human_users" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-10" name="SL2 - Common - CR1.10" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-10-adv_auth_feedback" name="An adversary receives authenticator feedback which helps him in user enumeration. E.g. invalid username. Invalid password." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-209">
                  <countermeasures>
                    <countermeasure ref="obscure_auth_feedback" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="obscure_auth_feedback" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-11" name="SL2 - Common - CR1.11" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-11-adv_bruteforce_auth_creds" name="And adversary can bruteforce authentication credentials" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-522">
                  <countermeasures>
                    <countermeasure ref="limit_invalid_attempts" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="limit_invalid_attempts" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-12" name="SL2 - Common - CR1.12" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-12-adv_no_motd" name="Adversaries who compromised the asset can dispute there was no message stating access was only for authorized personnel" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="show_sys_use_notification" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="show_sys_use_notification" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-13" name="SL2 - Common - CR1.13" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-13-adv_access_untrusted_netw" name="An adversary accesses the asset via an untrusted network" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="75" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="deny_access_via_untrusted_netw_unless_approved" mitigation="50"/>
                    <countermeasure ref="monitor_control_access_methods" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="deny_access_via_untrusted_netw_unless_approved" mitigation="50"/>
                <countermeasure ref="monitor_control_access_methods" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-14" name="SL2 - Common - CR1.14" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-14-rogue_employee_abuse_key" name="A rogue employee has unfettered access to a key and might use it for a malicious purpose or pass it onto someone else to the same end." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-322">
                  <countermeasures>
                    <countermeasure ref="protect_critical_long_lived_symmetric_keys" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_critical_long_lived_symmetric_keys" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-2" name="SL2 - Common - CR1.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-2-unid_sys_backdoor" name="Unidentified backdoor plugged in the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-2-unid_softw_arb_code_exec" name="Unidentified software that executes arbitrary code" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-123">
                  <countermeasures>
                    <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-3" name="SL2 - Common - CR1.3" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-3-adv_get_netw_info" name="An adversary that has previously obtained unauthorized access to certain device resources, uses that access to obtain information such as location and network information" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="provide_acc_mgmt_for_auth_users" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_acc_mgmt_for_auth_users" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-4" name="SL2 - Common - CR1.4" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-4-adv_guess_trusted_id" name="An adversary guesses, obtains, or &quot;rides&quot; a trusted identifier (e.g. session ID, resource ID, cookie, etc.) to perform authorized actions under the guise of an authenticated user or service." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-384">
                  <countermeasures>
                    <countermeasure ref="provide_support_mgmt_id_by_user_group_role" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_support_mgmt_id_by_user_group_role" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-5" name="SL2 - Common - CR1.5" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-5-adv_guess_default_pw" name="An adversary guesses the default password and user of an authenticator (e.g. admin:admin)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-521">
                  <countermeasures>
                    <countermeasure ref="provide_auth_init" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_auth_init" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-5-adv_retrieve_unencrypted_pw" name="An adversary is able to retrieve unencrypted passwords after a DBMS/DB -server breach" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-261">
                  <countermeasures>
                    <countermeasure ref="provide_auth_init" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_auth_init" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-6" name="SL2 - Common - CR1.6" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-6-adv_rogue_dev_mitm" name="An adversary can plant a rogue device to perform man-in-the-middle attacks" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
                    <countermeasure ref="uniquely_id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
                <countermeasure ref="uniquely_id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-7" name="SL2 - Common - CR1.7" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-7-adv_bruteforce_pw" name="An adversary is able to brute force the password" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-307">
                  <countermeasures>
                    <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-7-adv_guess_pw" name="An adversary is able to guess the password based on identifying an authenticator" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-521">
                  <countermeasures>
                    <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-1" name="SL2 - Common - CR2.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-1-adv_connect_with_compromised_acc_make_changes" name="An adversary is able to connect to the asset with a compromised account and is able to make changes to all content available on the asset. (no roles)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_auth_all_users_based_on_resp" mitigation="34"/>
                    <countermeasure ref="enforce_auth_based_on_role_leas_priv" mitigation="33"/>
                    <countermeasure ref="role_to_define_and_modify_perm_mapping" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_auth_all_users_based_on_resp" mitigation="34"/>
                <countermeasure ref="enforce_auth_based_on_role_leas_priv" mitigation="33"/>
                <countermeasure ref="role_to_define_and_modify_perm_mapping" mitigation="33"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-10" name="SL2 - Common - CR2.10" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-10-a_system_user_admin_is_not_notified_when_there_is_an_error_logging_the_system" name="A system user admin is not notified when there is an error logging the asset. Adversaries can use this by making the logging of the asset prone to errors by introducing a bug in the process. Now adversaries can compromise the system without it being logged." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="75" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="alert_personnel_prevent_svc_loss" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="alert_personnel_prevent_svc_loss" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-11" name="SL2 - Common - CR2.11" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-11-an_adversary_compromises_a_system_without_knowing_when_he_compromised_it" name="An adversary compromises a system without knowing when he compromised it." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                    <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-12" name="SL2 - Common - CR2.12" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-12-an_adversary_compromised_the_system_not_knowing_from_where_he_compromised_the_system" name="An adversary compromised the asset, not knowing from where he compromised the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="provide_human_user_interface_determine_user_took_action" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_human_user_interface_determine_user_took_action" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-2" name="SL2 - Common - CR2.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-2-adv_wifi_access" name="An adversary is able to get access to the asset via wireless protocols without authorization" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-3" name="SL2 - Common - CR2.3" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-3-adv_portable_dev_access" name="An adversary can access the asset using a portable device" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_config_usage_restriction" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_config_usage_restriction" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-6" name="SL2 - Common - CR2.6" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-6-an_adversary_could_have_maintained_a_stored_session" name="An adversary could have maintained a stored session. By doing so he keeps access to the asset with the role identified with that corresponding session." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-384">
                  <countermeasures>
                    <countermeasure ref="terminate_remote_session_auto_or_manual" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="terminate_remote_session_auto_or_manual" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-8" name="SL2 - Common - CR2.8" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-8-an_aversary_could_have_compromised_the_sytem_without_you_knowing" name="An adversary could have compromised the system without you knowing what part in the asset was compromised or how he compromised the asset " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-9" name="SL2 - Common - CR2.9" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-9-logging_of_the_system_will_fail_when_allocated_storage_capacity_is_satisfied" name="Logging of the asset will fail when allocated storage capacity is satisfied. Attackers can take advantage of this by creating space-eater malware." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-117">
                  <countermeasures>
                    <countermeasure ref="allocate_sufficient_audit_record_storage" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="allocate_sufficient_audit_record_storage" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-1" name="SL2 - Common - CR3.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-1-adv_intercept_netw_traffic" name="An adversary can intercept network traffic" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="25" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-5">
                  <countermeasures>
                    <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                    <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-2" name="SL2 - Common - CR3.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-2-adv_phishing_mail" name="An adversary sends a phishing mail with a trojan as email attachment" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-507">
                  <countermeasures>
                    <countermeasure ref="employ_maware_protection" mitigation="50"/>
                    <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="employ_maware_protection" mitigation="50"/>
                <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-4" name="SL2 - Common - CR3.4" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-4-adv_tamper_software" name="An adversary is able to tamper with software running on a system. On the asset no integrity check is in place." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-354">
                  <countermeasures>
                    <countermeasure ref="integrity_check_software" mitigation="50"/>
                    <countermeasure ref="support_auth_check_on_software_config" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="integrity_check_software" mitigation="50"/>
                <countermeasure ref="support_auth_check_on_software_config" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-5" name="SL2 - Common - CR3.5" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-5-adv_xss" name="An adversary can perform cross site scripting when input is not validated" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-79">
                  <countermeasures>
                    <countermeasure ref="validate_syntax_length_content_of_any_input" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="validate_syntax_length_content_of_any_input" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-6" name="SL2 - Common - CR3.6" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-6-adv_fuzz_sensor" name="An adversary can fuzz a sensor connected to a PLC which will cause the controller to generate wrong output values which can cause big system failures (DoS)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="75" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-20">
                  <countermeasures>
                    <countermeasure ref="phys_logical_connect_to_automation_process" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="phys_logical_connect_to_automation_process" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-7" name="SL2 - Common - CR3.7" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-7-adv_disclose_info_via_error_msg" name="An adversary can use error messages that contain too much information, such as stack traces, to discover vulnerabilities in the running service." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-209">
                  <countermeasures>
                    <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-9" name="SL2 - Common - CR3.9" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-9-adv_delete_audit_records_after_breach" name="An adversary is able to delete audit records after a system breach which can make investigations very difficult  " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-732">
                  <countermeasures>
                    <countermeasure ref="protect_audit_info_logs_tools" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_audit_info_logs_tools" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr4-1" name="SL2 - Common - CR4.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr4-1-adv_intercept_unecrypted_file_in_transit" name="An adversary is able to intercept an unencrypted file in transit" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="protect_conf_of_info_at_rest_remote_access" mitigation="50"/>
                    <countermeasure ref="protect_conf_of_info_traversing_netw" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_conf_of_info_at_rest_remote_access" mitigation="50"/>
                <countermeasure ref="protect_conf_of_info_traversing_netw" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr4-3" name="SL2 - Common - CR4.3" desc="" library="iec62443">
          <threats>
            <threat ref="cr4-3-adv_break_alg_weak_encryption" name="When a weak encryption algorithm is used an adversary is capable of breaking the algorithm with standard available tools" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-326">
                  <countermeasures>
                    <countermeasure ref="user_crypto_algs" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="user_crypto_algs" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr5-1" name="SL2 - Common - CR5.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr5-1-network_segmentation_exploit" name="An adversary is able to hop between internal networks since they are not segregated" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="logically_segment_control_system" mitigation="50"/>
                    <countermeasure ref="physically_segment_control_system" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="logically_segment_control_system" mitigation="50"/>
                <countermeasure ref="physically_segment_control_system" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr5-2" name="SL2 - Common - CR5.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr5-2-lateralmovement_exploit" name="An adversary can complete lateral movement within the asset when no protection is set up" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="deny_netw_traffic_allow_netw_traffic_exceptions" mitigation="50"/>
                    <countermeasure ref="monitor_control_comms_zone_boundaries" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="deny_netw_traffic_allow_netw_traffic_exceptions" mitigation="50"/>
                <countermeasure ref="monitor_control_comms_zone_boundaries" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr6-1" name="SL2 - Common - CR6.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr6-1-audit_log_exploit" name="An adversary may compromise the asset and edit the logfiles with non root privileges" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-532">
                  <countermeasures>
                    <countermeasure ref="auth_humans_tools_audit_logs" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="auth_humans_tools_audit_logs" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr6-2" name="SL2 - Common - CR6.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr6-2-continuous_monitoring_exploit" name="An adversary compromises a system  without it being timely notified and detected by for example a IDS" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-693">
                  <countermeasures>
                    <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-1" name="SL2 - Common - CR7.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-1-dos_no_protect" name="Assets might lose the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event.&#10;" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-1100">
                  <countermeasures>
                    <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                    <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-3" name="SL2 - Common - CR7.3" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-3-no_usr_sys_info_backup" name="Assets might not regain their state (user- and system-level information) due to storage failure." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="50" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-636">
                  <countermeasures>
                    <countermeasure ref="provide_participate_in_sys_level_backup" mitigation="50"/>
                    <countermeasure ref="validate_integrity_of_backup_info" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_participate_in_sys_level_backup" mitigation="50"/>
                <countermeasure ref="validate_integrity_of_backup_info" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-4" name="SL2 - Common - CR7.4" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-4-no_usr_sys_info_backup" name="Assets might not regain their state (user- and system-level information) due to storage failure." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="50" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-636">
                  <countermeasures>
                    <countermeasure ref="cap_to_be_recovered_to_known_secure_state" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="cap_to_be_recovered_to_known_secure_state" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-5" name="SL2 - Common - CR7.5" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-5-emergency_power" name="An adversary can cause a power outage of a security system which will give an adversary to compromise the asset." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="switch_to_and_from_emergency_power_supply" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="switch_to_and_from_emergency_power_supply" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-6" name="SL2 - Common - CR7.6" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-6-unauth_access_default_creds" name="Unauthorized component access might occur as a result of not being able to change default access credentials" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-798">
                  <countermeasures>
                    <countermeasure ref="config_according_to_recommended_netw_and_security" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="config_according_to_recommended_netw_and_security" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-7" name="SL2 - Common - CR7.7" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-7-unauth_access_unnecessary_func" name="Unauthorized component access might occur as a result of not being able to restrict unnecessary functions, ports, protocols and/or services." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-8" name="SL2 - Common - CR7.8" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-8-rogue_assets" name="Rogue assets might enter the network as a result of not being able to verify component identities." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="73e8e94d-cd2a-4787-a80b-6127337db894" diagramComponentId="1b3732bb-831b-4401-9318-c94f99e92af0" ref="a0c0dc14-231e-446a-bb2b-351dc27d2414" name="Switch L2/L3" desc="" library="iec62443" parentComponentRef="" componentDefinitionRef="switch-l2/l3">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="iec62443-sl2"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-300" name="Channel Accessible by Non-Endpoint ('Man-in-the-Middle')" state="0" impact="100" issueId="">
          <desc>The product does not adequately verify the identity of actors at both ends of a communication channel, or does not adequately ensure the integrity of the channel, in a way that allows the channel to be accessed or influenced by an actor that is not an endpoint.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-284" name="Improper Access Control" state="0" impact="100" issueId="">
          <desc>The software does not restrict or incorrectly restricts access to a resource from an unauthorized actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-287" name="Improper Authentication" state="0" impact="100" issueId="">
          <desc>When an actor claims to have a given identity, the software does not prove or insufficiently proves that the claim is correct.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-94" name="Improper Control of Generation of Code ('Code Injection')" state="0" impact="100" issueId="">
          <desc>The software constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behaviour of the intended code segment.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-20" name="Improper Input Validation" state="0" impact="100" issueId="">
          <desc>The product does not validate or incorrectly validates input that can affect the control flow or data flow of a program.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-79" name="Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')" state="0" impact="100" issueId="">
          <desc>The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-147" name="Improper Neutralization of Input Terminators" state="0" impact="100" issueId="">
          <desc>The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as input terminators when they are sent to a downstream component.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-117" name="Improper Output Neutralization for Logs" state="0" impact="100" issueId="">
          <desc>The software does not neutralize or incorrectly neutralizes output that is written to logs.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-307" name="Improper Restriction of Excessive Authentication Attempts" state="0" impact="100" issueId="">
          <desc>The software does not implement sufficient measures to prevent multiple failed authentication attempts within in a short time frame, making it more susceptible to brute force attacks.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-354" name="Improper Validation of Integrity Check Value" state="0" impact="100" issueId="">
          <desc>The software does not validate or incorrectly validates the integrity check values or "checksums" of a message. This may prevent it from detecting if the data has been modified or corrupted in transmission.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-347" name="Improper Verification of Cryptographic Signature" state="0" impact="100" issueId="">
          <desc>The software does not verify, or incorrectly verifies, the cryptographic signature for data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-326" name="Inadequate Encryption Strength" state="0" impact="100" issueId="">
          <desc>The software stores or transmits sensitive data using an encryption scheme that is theoretically sound, but is not strong enough for the level of protection required.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-532" name="Inclusion of Sensitive Information in Log Files" state="0" impact="100" issueId="">
          <desc>Information written to log files can be of a sensitive nature and give valuable guidance to an attacker or expose sensitive user information.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-732" name="Incorrect Permission Assignment for Critical Resource" state="0" impact="100" issueId="">
          <desc>The software specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-286" name="Incorrect User Management" state="0" impact="100" issueId="">
          <desc>The software does not properly manage a user within its environment.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-209" name="Information Exposure Through an Error Message" state="0" impact="100" issueId="">
          <desc>The software generates an error message that includes sensitive information about its environment, users, or associated data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-1100" name="Insufficient Isolation of System-Dependent Functions" state="0" impact="100" issueId="">
          <desc>The product or code does not isolate system-dependent
					functionality into separate stand-alone modules.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="">
          <desc>When a security-critical event occurs, the software either does not record the event or omits important details about the event when logging it.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-522" name="Insufficiently Protected Credentials" state="0" impact="100" issueId="">
          <desc>This weakness occurs when the application transmits or stores authentication credentials and uses an insecure method that is susceptible to unauthorized interception and/or retrieval.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-5" name="J2EE Misconfiguration: Data Transmission Without Encryption" state="0" impact="100" issueId="">
          <desc>Information sent over a network can be compromised while in transit. An attacker may be able to read or modify the contents if the data are sent in plaintext or are weakly encrypted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-322" name="Key Exchange without Entity Authentication" state="0" impact="100" issueId="">
          <desc>The software performs a key exchange with an actor without verifying the identity of that actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-311" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="">
          <desc>The software does not encrypt sensitive or critical information before storage or transmission.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-636" name="Not Failing Securely ('Failing Open')" state="0" impact="100" issueId="">
          <desc>When the product encounters an error condition or failure, its design requires it to fall back to a state that is less secure than other options that are available, such as selecting the weakest encryption algorithm or using the most permissive access control restrictions.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-672" name="Operation on a Resource after Expiration or Release" state="0" impact="100" issueId="">
          <desc>The software uses, accesses, or otherwise operates on a resource after that resource has been expired, released, or revoked.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-693" name="Protection Mechanism Failure" state="0" impact="100" issueId="">
          <desc>The product does not use or incorrectly uses a protection mechanism that provides sufficient defence against directed attacks against the product.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-384" name="Session Fixation" state="0" impact="100" issueId="">
          <desc>Authenticating a user, or otherwise establishing a new user session, without invalidating any existing session identifier gives an attacker the opportunity to steal authenticated sessions.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-507" name="Trojan Horse" state="0" impact="100" issueId="">
          <desc>The software appears to contain benign or useful functionality, but it also contains code that is hidden from normal operation that violates the intended security policy of the user or the system administrator.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-400" name="Uncontrolled Resource Consumption" state="0" impact="100" issueId="">
          <desc>The software does not properly control the allocation and maintenance of a limited resource thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-798" name="Use of Hard-coded Credentials" state="0" impact="100" issueId="">
          <desc>The software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-916" name="Use of Password Hash With Insufficient Computational Effort" state="0" impact="100" issueId="">
          <desc>The software generates a hash for a password, but it uses a scheme that does not provide a sufficient level of computational effort that would make password cracking attacks infeasible or expensive.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-261" name="Weak Cryptography for Passwords" state="0" impact="100" issueId="">
          <desc>Obscuring a password with a trivial encoding does not protect the password.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-521" name="Weak Password Requirements" state="0" impact="100" issueId="">
          <desc>The product does not require that users should have strong passwords, which makes it easier for attackers to compromise user accounts.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-123" name="Write-what-where Condition" state="0" impact="100" issueId="">
          <desc>Any condition where the attacker has the ability to write an arbitrary value to an arbitrary location, often as the result of a buffer overflow.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="protect_audit_info_logs_tools" name="Assets shall protect audit information, audit logs, and audit tools (if present) from unauthorized access, modification and deletion." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. the storage of audit information to hardware-enforced write-once media.
2. Access Management Process</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.11" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_auth_all_users_based_on_resp" name="Assets shall provide an authorization enforcement mechanism for all identified and authenticated users based on their assigned responsibilities." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. On all interfaces, the control system shall provide the capability to enforce authorizations assigned to all users (humans, software processes and devices) for controlling use of the control system to support segregation of duties and least privilege.
2. Authorization is granting of permissions based on authentication. 
3.All authorization decisions should be made on the server, not the client.  
4. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
5. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
6. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
7. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
8. Server side implementation and presentation layer representations of access control rules must match. 
9. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
10. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
11. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="auth_humans_tools_audit_logs" name="Assets shall provide the capability for authorized humans and/or tools to access audit logs on a read-only basis." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Access Control - Authorize members
2. Least Privilege &amp; Need to Know Basis
3. Review of access </desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="config_according_to_recommended_netw_and_security" name="Assets shall provide the capability to be configured according to recommended network and security configurations as described in guidelines provided by the asset supplier. The asset shall provide an interface to the currently deployed network and security configuration settings." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Devices with network connectivity are capable of being updated from the network.
2. provide the capability to generate a report listing the currently deployed security settings in a machine-readable format.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="continuous_monitor_accepted_sec" name="Assets shall provide the capability to be continuously monitored using commonly accepted security industry practices and recommendations to detect, characterize and report security breaches in a timely manner." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Control system monitoring capability can be achieved through a variety of tools and
techniques (for example, IDS, IPS, malicious code protection mechanisms and network monitoring mechanisms).
2. Monitoring devices should be strategically deployed within the control system (for example, at
selected perimeter locations and near server farms supporting critical applications) to collect
essential information. Monitoring mechanisms may also be deployed at ad hoc locations
within the control system to track specific transactions
3. SIEM Implementation</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="cap_to_be_recovered_to_known_secure_state" name="Assets shall provide the capability to be recovered and reconstituted to a known secure state after a disruption or failure." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Control system recovery and reconstitution to a known secure state means that all system
parameters (either default or configurable) are set to secure values, security-critical patches
are reinstalled, security-related configuration settings are reestablished, system documentation and operating procedures are available, application and system software is reinstalled and configured with secure settings, information from the most recent, known secure backups is loaded and the system is fully tested and functional.
1. Roll back procedure.
2. Secure storage of previous version</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_for_audit_records" name="Assets shall provide the capability to create timestamps (including date and time) for use in audit records." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Timestamps (including date and time) of audit records should be generated using internal
system clocks.
1. provide timestamps for use in audit record generation.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" name="Assets shall provide the capability to create timestamps that are synchronized with a system wide time source." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>to synchronize internal system clocks at a configurable frequency.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="explicit_read_auth_protect_conf_info" name="Assets shall provide the capability to erase all information, for which explicit read authorization is supported, from assets to be released from active service and/or decommissioned." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Removal of a control system component from active service should not provide the
opportunity for unintentional release of information for which explicit read authorization is
supported.
1. Information produced by the actions of a user or role (or the actions of a software process
acting on behalf of a user or role) should not be disclosed to a different user or role in an
uncontrolled fashion.
2. Purging of all information from volatile memory, active service or decommissioned system.
3. Ensure purging successfully occurs
NOTE Volatile memory resources are those that typically do not retain information after being released to memory management. However, there are attacks against random access memory (RAM) that have the potential to extract key material or other confidential data before it is actually over-written. Therefore, it is a commonly accepted practice to purge all unique data and connections to unique data from volatile shared memory when that memory is released back to the control system for use by a different user, such that this data is not visible or accessible to the new user.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="limit_rsrc_by_sec" name="Assets shall provide the capability to limit the use of resources by security functions to protect against resource exhaustion." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Resource management (for example, network segmentation or priority schemes) prevents a
lower-priority software process from delaying or interfering with the control system servicing
any higher-priority software process.
1. initiating network scans, patching and/or antivirus checks on an operating system.
2. Traffic rate limiting schemes should be considered as a mitigation technique.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="maintain_essential_functions" name="Assets shall provide the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>provide the capability to manage communication loads (such as
using rate limiting) to mitigate the effects of information flooding types of DoS events.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="support_auth_check_on_software_config" name="Assets shall provide the capability to perform or support authenticity checks on software, configuration and other information as well as the recording and reporting of the results of these checks or be integrated into a system that can perform or support authenticity checks." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Integrity verification methods are employed to detect, record, report and protect against software and information tampering.
1. cryptographic hashes
2. Notification of unauthorize changes
Integrity verification methods are employed to detect, record, report and protect against software and information tampering that may occur if other protection mechanisms (such as authorization enforcement) have been circumvented. The control system should employ formal or recommended integrity mechanisms (such as cryptographic hashes).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="integrity_check_software" name="Assets shall provide the capability to perform or support integrity checks on software, configuration and other information as well as the recording and reporting of the results of these checks or be integrated into a system that can perform or support integrity checks." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Integrity verification methods are employed to detect, record, report and protect against software and information tampering.
1. cryptographic hashes
2. Notification of unauthorize changes
Integrity verification methods are employed to detect, record, report and protect against software and information tampering that may occur if other protection mechanisms (such as authorization enforcement) have been circumvented. The control system should employ formal or recommended integrity mechanisms (such as cryptographic hashes).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_critical_long_lived_symmetric_keys" name="Assets shall provide the capability to protect critical, long lived symmetric keys via hardware mechanisms." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. establish the mutual trust using the symmetric key; store securely the shared secret (the authentication is valid as long as the shared secret remains secret); restrict access to the shared secret; ensure that the algorithms and keys used for the symmetric key authentication</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.16" supportedStandardRef="iec-62443-4-2:2019"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" name="Assets shall provide the capability to specifically restrict the use of unnecessary functions, ports, protocols and/or services." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc> 1. capability to specifically prohibit and/or restrict the use of unnecessary functions, ports, protocols and/or services.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="validate_syntax_length_content_of_any_input" name="Assets shall validate the syntax, length and content of any input data that is used as an industrial process control input or input via external interfaces that directly impacts the action of the asset." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. input data validation include out-of-range values for a defined field type, invalid characters in data fields, missing or incomplete data and buffer overflow.
2. SAST &amp; DAST
3. Data from external sources are sanitized based on acceptable formats and lengths.  It is preferred to use white listing, over black listing.
4. Data is validated when crossing API boundaries</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="phys_logical_connect_to_automation_process" name="Assets that physically or logically connect to an automation process shall provide the capability to set outputs to a predetermined state if normal operation as defined by the asset supplier cannot be maintained." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. The appropriate predetermined state of control system outputs is application dependent and could be one of the following user configurable options:
• Unpowered – the outputs fail to the unpowered state
• Hold – the outputs fail to the last-known good value
• Fixed – the outputs fail to a fixed value that is determined by the asset owner or an
application
2. All user supplied data is encoded prior to output. (i.e.. Html encoding, special character encoding).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_pw_policy_enforce" name="For assets utilizing password-based authentication, the asset shall provide the capability to enforce configurable password strength based on minimum length and variety of character types. " issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.
Note: A service should employ one or more tactics to prevent or at least slow down a brute force attack, including: blacklisting an IP after 5 unsuccessful attempts, slowing down attempts with increasing timeout delays introduced after 5 unsuccessful attempts, locking out non-admin accounts after 3 unsuccessful attempts.  The account must be disabled for a period of time sufficient to discourage brute force guessing of credentials, but not so long as to allow for a denial-of-service attack to be performed.  Allow non-admin users to reset their own passwords to prevent administrative burden.  If users are allowed to reset their password, best practice is to email a new password to the users email account and require a reset upon next logon.  It is not best practice to simply reset and display the new password on the authentication screen as an attacker may trigger that reset and change the password without notice to the user.  If using a screen reveal of password, should be accompanied by both a known secret of user, such as mothers maiden name and also an email to notify the user of such a change.  Temporary passwords and links should have a short expiration time.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_id_and_auth_for_human_users" name="Identify and authenticate all human users" issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. passwords, tokens, biometrics, Certificates, geographic location
2. role-based or group-based
3. should be applied to both local and remote access to the control system.
4. Least Privilege 
5. Segregation of Duties
6. Authentication types (factors): (1) something you know (a secret) -like username and password; (2) something you have - such as a token device or smart phone; and (3) something you are - such as biometrics. 
7. On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.
8.  services should run as non-root accounts or use SUID accounts that release privilege after service start.  Non-root accounts used for services should not have a shell enabled, i.e. /dev/null should be shell in passwd file.  In cases where the application must run with elevated privileges, raise privileges as late as possible, and drop them as soon as possible.  For windows based services, it is preferred to run the service as SYSTEM, instead of an administrator account, which would have credentials which may be guessed and used in an attack.
9. Authorization is granting of permissions based on authentication. 
10.All authorization decisions should be made on the server, not the client.  
11. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
12. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
13. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
14. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
15. Server side implementation and presentation layer representations of access control rules must match. 
16. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
17. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
18. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources
Note: system level forms of identification, such as IP or MAC address are easily spoofable and therefore do not qualify as a valid form of authentication. Establish and utilize standard, tested, authentication services whenever possible. Use a centralized implementation for all authentication controls, including libraries that call external authentication services. Segregate authentication logic from the resource being requested and use redirection to and from the centralized authentication control.  All authentication controls should fail securely. Enforce password complexity requirements established by policy or regulation. Authentication credentials should be sufficient to withstand attacks that are typical of the threats in the deployed environment. (e.g., requiring the use of alphabetic as well as numeric and/or special characters). Enforce password length requirements established by policy or regulation. Eight characters is commonly used, but 16 is better or consider the use of multi-word pass phrases. Password entry should be obscured on the user's screen. (e.g., on web forms use the input type "password")</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_human_user_interface_determine_user_took_action" name="If an asset provides a human user interface, the asset shall provide the capability to determine whether a given human user took a particular action. Control elements that are not able to support such capability shall be listed in component documents." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Examples of particular actions taken by a user include performing operator actions, changing
control system configurations, creating information, sending a message, approving
information (such as indicating concurrence) and receiving a message.
1. digital signatures, digital message receipts and timestamps</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.14" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="terminate_remote_session_auto_or_manual" name="If an asset supports remote sessions, the asset shall provide the capability to terminate a remote session either automatically after a configurable time period of inactivity, manually by a local authority, or manually by the user (human, software process or device) who initiated the session." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Terminate a remote session either automatically after a configurable time period of inactivity, manually by a local authority, or manually by the user (human, software process or device) who initiated the session.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" name="If an asset supports usage through wireless interfaces it shall provide the capability to integrate into the asset that supports usage authorization, monitoring and restrictions according to commonly accepted industry practices." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>provide the capability to authorize, monitor and enforce usage restrictions for wireless connectivity to the control system.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="user_crypto_algs" name="If cryptography is required, the asset shall use cryptographic algorithms, key sizes and mechanisms for key establishment and management according to commonly accepted security industry practices and recommendations." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. document the practices and procedures relating to cryptographic key establishment and management.
2. utilize established and tested encryption and hash algorithms, such as the advanced
encryption standard (AES) and the secure hash algorithm (SHA) series, and key sizes based
on an assigned standard.
3. Key generation needs to be performed using an effective random number generator.
4. The security policies and procedures for key management need to address
periodic key changes, key destruction, key distribution and encryption key backup in
accordance with defined standards</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_acc_mgmt_for_auth_users" name="Provide support of management of all accounts by authorized users" issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. individual, role-based, device-based, Service &amp;  default account management Policy.
2. Review of accounts.
3. Approvals for creating, disabling, removing or modifying accounts.
4.  On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="allocate_sufficient_audit_record_storage" name="The asset shall allocate sufficient audit record storage capacity according to commonly recognized recommendations for log management and system configuration. The asset shall provide auditing mechanisms to reduce the likelihood of such capacity being exceeded." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>The control system shall allocate sufficient audit record storage capacity according to
commonly recognized recommendations for log management and system configuration. The
control system shall provide auditing mechanisms to reduce the likelihood of such capacity
being exceeded</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.11" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="id_and_handle_error_conditions" name="The asset shall identify and handle error conditions in a manner such that effective remediation can occur. This shall be done in a manner which does not provide information that could be exploited by adversaries to attack the IACS unless revealing this information is necessary for the timely troubleshooting of problems." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Error messages generated by the control system should provide timely and useful information without revealing potentially harmful information.
2. Vulnerability Assessment &amp; Penetration Testing</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_auth_based_on_role_leas_priv" name="The asset shall provide authorization enforcement for all users based on their assigned responsibilities and least privilege" issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. enforce authorizations assigned to all human users.
2. Use control policies (for example, identity-based policies, role-based policies and rule-based policies) and associated read/write access enforcement mechanisms (for example, access control lists, access control matrices and cryptography).
2. check which roles are assigned to a verified user or asset and which privileges are assigned to these roles – if the requested operation is covered by the permissions, it is executed, otherwise rejected. Only qualified and authorized individuals should obtain the use of control system components for purposes of initiating changes, including upgrades and modifications. Authorization is granting of permissions based on authentication. 
3.All authorization decisions should be made on the server, not the client.  
4. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
5. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
6. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
7. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
8. Server side implementation and presentation layer representations of access control rules must match. 
9. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
10. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
11. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="role_to_define_and_modify_perm_mapping" name="The asset shall provide directly or through a compensating security mechanism, for an authorized role to define and modify the mapping of permissions to roles for all human users" issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>The control system shall provide the capability for an authorized user or role to define and
modify the mapping of permissions to roles for all human users.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="alert_personnel_prevent_svc_loss" name="The asset shall provide the capability to alert personnel and prevent the loss of essential services and functions in the event of an audit processing failure. The control system shall provide the capability to support appropriate actions in response to an audit processing failure according to commonly accepted industry practices and recommendations. " issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Audit generation typically occurs at the source of the event. Audit processing involves
transmission, possible augmentation (such as the addition of a timestamp) and persistent
storage of the audit records. Audit processing failures include, for example, software or
hardware errors, failures in the audit capturing mechanisms and audit storage capacity being
reached or exceeded
1.capability to alert personnel and prevent the loss of essential services and functions in the event of an audit processing failure.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.12" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_config_usage_restriction" name="The asset shall provide the capability to automatically enforce configurable usage restrictions" issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Authenticate &amp; Authorize devices before allowing connection.
2. Digital+E46 Signatures</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="deny_access_via_untrusted_netw_unless_approved" name="The asset shall provide the capability to deny access requests via untrusted networks unless approved by an assigned role." issueId="" platform="" cost="0" risk="74" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.15" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="deny_netw_traffic_allow_netw_traffic_exceptions" name="The asset shall provide the capability to deny network traffic by default and allow network traffic by exception (also termed deny all, permit by exception)." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>deny network traffic by default and allow network traffic by exception (also termed deny all, permit by exception).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="show_sys_use_notification" name="The asset shall provide the capability to display a system use notification message before authenticating. The system use notification message shall be configurable by authorized personnel." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. display a system use notification message or warning banners before authenticating &amp; configurable by authorized personnel.
2. Privacy and security policies and procedures need to be consistent with applicable laws,
directives, policies, regulations, standards and guidance.
3. Examples of elements for inclusion in the system use notification message are:
a) that the individual is accessing a specific control system;
b) that system usage may be monitored, recorded and subject to audit;
c) that unauthorized use of the system is prohibited and subject to criminal and/or civil
penalties; and
d) that use of the system indicates consent to monitoring and recording</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.14" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="employ_cypto_mechs_to_recognize_changes" name="The asset shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="employ_maware_protection" name="The asset shall provide the capability to employ malicious code protection mechanisms at all entry and exit points." issueId="" platform="" cost="0" risk="74" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>prevent, detect, mitigate and report instances of detected malicious code (for example, viruses, worms, Trojan horses and spyware) transported by electronic mail, electronic mail attachments, Internet access, removable media (for example, universal serial bus (USB) devices, diskettes or compact disks), PDF documents, web services, network connections and infected laptops or other
common means.
1. Detection Technique  - binary integrity and attributes monitoring, hashing and signature techniques.
2.Mitigation technique - file cleaning, quarantining, file deletion, host communication restriction and IPSs
3. Prevention Technique - application blacklisting and whitelisting techniques, removable media control, sandbox techniques and specific computing platforms mechanisms such as restricted firmware update capabilities, No Execute (NX) bit, data execution prevention (DEP), address space layout randomization (ASLR), stack corruption detection and mandatory access controls.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" name="The asset shall provide the capability to employ protection mechanisms to prevent, detect, report and mitigate the effects of malicious code or unauthorized software. The asset shall provide the capability to update the protection mechanisms." issueId="" platform="" cost="0" risk="74" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>prevent, detect, mitigate and report instances of detected malicious code (for example, viruses, worms, Trojan horses and spyware) transported by electronic mail, electronic mail attachments, Internet access, removable media (for example, universal serial bus (USB) devices, diskettes or compact disks), PDF documents, web services, network connections and infected laptops or other
common means.
1. Detection Technique  - binary integrity and attributes monitoring, hashing and signature techniques.
2.Mitigation technique - file cleaning, quarantining, file deletion, host communication restriction and IPSs
3. Prevention Technique - application blacklisting and whitelisting techniques, removable media control, sandbox techniques and specific computing platforms mechanisms such as restricted firmware update capabilities, No Execute (NX) bit, data execution prevention (DEP), address space layout randomization (ASLR), stack corruption detection and mandatory access controls.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="limit_invalid_attempts" name="The asset shall provide the capability to enforce a limit of a configurable number of consecutive invalid access attempts by any user (human, software process or device) during a configurable time period. The asset shall provide the capability to deny access for a specified period of time or until unlocked by an administrator when this limit has been exceeded." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. limit of a configurable number of consecutive invalid access attempts by any user (human, software process or device).
2. As per Policy.
3. For all invalid authentication attempts, the server should simply respond "invalid attempt, please retry" or similarly vague statement that does not imply partial success.  
Note: A service should employ one or more tactics to prevent or at least slow down a brute force attack, including: blacklisting an IP after 5 unsuccessful attempts, slowing down attempts with increasing timeout delays introduced after 5 unsuccessful attempts, locking out non-admin accounts after 3 unsuccessful attempts.  The account must be disabled for a period of time sufficient to discourage brute force guessing of credentials, but not so long as to allow for a denial-of-service attack to be performed.  Allow non-admin users to reset their own passwords to prevent administrative burden.  If users are allowed to reset their password, best practice is to email a new password to the users email account and require a reset upon next logon.  It is not best practice to simply reset and display the new password on the authentication screen as an attacker may trigger that reset and change the password without notice to the user.  If using a screen reveal of password, should be accompanied by both a known secret of user, such as mothers maiden name and also an email to notify the user of such a change.  Temporary passwords and links should have a short expiration time.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="restrict_mobile_code" name="The asset shall provide the capability to enforce usage restrictions for mobile code technologies based on the potential to cause damage to the asset." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Mobile code technologies include, but are not limited to, Java, JavaScript, ActiveX, portable
document format (PDF), Postscript, Shockwave movies, Flash animations and VBScript.
1. The control system shall provide the capability to enforce usage restrictions for mobile code technologies based on the potential to cause damage to the control system that include:
a) preventing the execution of mobile code;
b) requiring proper authentication and authorization for origin of the code;
c) restricting mobile code transfer to/from the control system; and
d) monitoring the use of mobile code.
2. verify integrity of the mobile code before allowing code execution with HASH/Codesigning technique.
3. both the selection and use of mobile code installed on servers and
mobile code downloaded and executed.
4. prevent the development, acquisition or introduction of unacceptable mobile code within the control system. For example, mobile code exchanges may be disallowed directly with the
control system, but may be allowed in a controlled adjacent environment.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" name="The asset shall provide the capability to generate audit records relevant to security for the following categories: access control, request errors, operating system events, asset events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Generate audit records relevant to security for the following categories: access control, request errors, operating system events, control system events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" name="The asset shall provide the capability to identify and authenticate all software processes and devices. This capability shall enforce such identification and authentication on all interfaces which provide access to the asset to support least privilege in accordance with applicable security policies and procedures." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. identity bound to the physical device
2. passwords, tokens or location (physical or logical)
3. role-based, group-based or entity-based,
4. Combination of 1) something you know (a secret) -like username and password; (2) something you have - such as a token device or smart phone; and (3) something you are - such as biometrics. 
5. Assign identifiers that uniquely identify users/devices
a. E.g., employ a unique username-password combination for the user
b. Reasoning: This will prevent user 1 from spoofing as user 2. This is a concern for users with different levels of access.
6. Uniquely identify and authenticate users and devices
c. Multi-factor authentication
d. Use of authentication protocols that require no password/multifactor authentication: e.g., OAuth, OpenID, SAML</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_auth_init" name="The asset shall provide the capability to: initialize authenticator content; change all default authenticators upon asset installation; change/refresh all authenticators; protect all authenticators from unauthorized disclosure and modification when stored and transmitted." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>&gt; initialize authenticator content;
&gt; change all default authenticators upon control system installation;
&gt; change/refresh all authenticators; and
&gt; protect all authenticators from unauthorized disclosure and modification when stored and
transmitted
2.  tokens, symmetric keys, private keys (part of a public/private key pair), biometrics,
passwords, physical keys and key card
3. Human users should take reasonable measures to safeguard authenticators, including maintaining possession of their individual authenticators, not loaning or sharing authenticators with others and reporting lost or compromised authenticators immediately.
4. cryptographic protections such as encryption or hashing or by handshake protocols which do not require transmission of the password. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.
5. Lockout or loss of control due to security measures is not acceptable. If the control system is required to have a high level of availability, measures should be taken to maintain this high
level of availability (such as compensating physical countermeasures, duplicate keys and
supervisory override).
6. Complex strength of the authentication mechanism</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="logically_segment_control_system" name="The asset shall provide the capability to logically segment asset networks from non-asset networks and to logically segment critical asset networks from other asset networks." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Access from the control system to the World Wide Web should be clearly justified based on
control system operational requirements.
2. Logical Segmentation.
3. Physical Segmentation.
4. capability to provide network services to control system networks, critical or otherwise, without a connection to non-control system networks.
5. capability to logically and physically isolate critical control system networks from non-critical control system networks.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="mitigate_info_effects_flooding_types" name="The asset shall provide the capability to manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. boundary protection
2. restricting the information flow to be unidirectional outbound
3. manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events.
4. restrict the ability of all users (humans, software processes and devices) to cause DoS events which affect other control systems or networks.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="monitor_control_access_methods" name="The asset shall provide the capability to monitor and control all methods of access to the asset via untrusted networks." issueId="" platform="" cost="0" risk="74" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Examples of access to the control system via untrusted networks typically include remote
access methods (such as dial-up, broadband and wireless) as well as connections from a
company’s office (non-control system) network.
1. restrict access achieved through dial-up connections (for example, limiting dial-up access based upon the source of the request).
2. protect against unauthorized connections or subversion of authorized connections (for example, using virtual private network technology).
3. Access via untrusted networks to geographically remote control system component locations (for example, control centers and field locations) should only be enabled when necessary and authenticated.
4. Multifactor authentication for remote user access to the control system.
5. Use of VPNs &amp; Firewalls.
6. Monitoring &amp; Logging of Access for control systems.
7. deny access requests via untrusted networks unless approved by an assigned role.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.15" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="monitor_control_comms_zone_boundaries" name="The asset shall provide the capability to monitor and control communications at zone boundaries to enforce the compartmentalization defined in the risk-based zones and conduits model." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Any connections to external networks or other control systems should occur through managed
interfaces consisting of appropriate boundary protection devices (for example, proxies,
gateways, routers, firewalls, unidirectional gateways, guards and encrypted tunnels) arranged
in an effective architecture (for example, firewalls protecting application gateways residing in
a DMZ).
1. capability to deny network traffic by default and allow network traffic by exception (also termed deny all, permit by exception).
2. capability to prevent any communication through the control system boundary (also termed island mode).
3. The control system shall provide the capability to prevent any communication through the
control system boundary when there is an operational failure of the boundary protection
mechanisms (also termed fail close). This ‘fail close’ functionality shall be designed such that
it does not interfere with the operation of a SIS or other safety-related functions.
4. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="physically_segment_control_system" name="The asset shall provide the capability to physically segment asset networks from non-asset networks and to physically segment critical asset networks from non-critical asset networks." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="prevent_further_access_init_seslock" name="The asset shall provide the capability to prevent further access by initiating a session lock after a configurable time period of inactivity or by manual initiation. The session lock shall remain in effect until the human user who owns the session or another authorized human user re-establishes access using appropriate identification and authentication procedures." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. activate session lock mechanisms automatically after a configurable time period.
2. In some cases, session lock for control system operator workstations or nodes is not advised (for example, sessions which are required for immediate operator responses in emergency situations).
3. In situations where the control system cannot support session lock, the responsible entity should employ appropriate compensating countermeasures (for example, providing increased physical security, personnel security and auditing measures).
Note: Use the server or framework’s session management controls. The application should only recognize these session identifiers as valid. Session identifier creation must always be done on a trusted system (e.g., The server). Session management controls should use well vetted algorithms that ensure sufficiently random session identifiers. Set the domain and path for cookies containing authenticated session identifiers to an appropriately restricted value for the site. Logout functionality should fully terminate the associated session or connection. Logout functionality should be available from all pages protected by authorization. Establish a session inactivity timeout that is as short as possible, based on balancing risk and business functional requirements. In most cases it should be no more than several hours. Disallow persistent logins and enforce periodic session terminations, even when the session is active. Especially for applications supporting rich network connections or connecting to critical systems. Termination times should support business requirements and the user should receive sufficient notification to mitigate negative impacts. If a session was established before login, close that session and establish a new session after a successful login. Generate a new session identifier on any re-authentication. Do not allow concurrent logins with the same user ID. Supplement standard session management for sensitive server-side operations, like account management, by utilizing per-session strong random tokens or parameters. This method can be used to prevent Cross Site Request Forgery attacks. Supplement standard session management for highly sensitive or critical operations by utilizing per-request, as opposed to per-session, strong random tokens or parameters. Set the "secure" attribute for cookies transmitted over an TLS connection. Set cookies with the HttpOnly attribute, unless you specifically require client-side scripts within your application to read or set a cookie's value</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_conf_of_info_traversing_netw" name="The asset shall provide the capability to protect the confidentiality of information at rest and remote access sessions traversing an untrusted network." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_conf_of_info_at_rest_remote_access" name="The asset shall provide the capability to protect the confidentiality of information for which explicit read authorization is supported, whether at rest or in transit." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. physical means, compartmentalization or encryption.
2. configuring explicit read authorizations in the control system.
3. Digital Certificates.
4. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_integrity_of_sessions" name="The asset shall provide the capability to protect the integrity of sessions. The asset shall reject any usage of invalid session IDs." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Use of session integrity mechanisms can have a significant overhead and therefore their use should be considered in light of requirements for real-time communications.
2. capability to invalidate session IDs upon user logout or other session termination (including browser sessions).
3. generate a unique session ID for each session and treat all unexpected session IDs as invalid.
4. generate unique session IDs with commonly accepted sources of randomness.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_integrity_transmitted_info" name="The asset shall provide the capability to protect the integrity of transmitted information." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_relevant_priv_keys" name="The asset shall provide the capability to protect the relevant private keys via hardware mechanisms according to commonly accepted security industry practices and recommendations." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Follow All below Steps:
l) validate certificates by checking the validity of the signature of a given certificate;
m) validate certificates by constructing a certification path to an accepted CA or in the case of
self-signed certificates by deploying leaf certificates to all hosts which communicate with
the subject to which the certificate is issued;
n) validate certificates by checking a given certificate’s revocation status;
o) establish user (human, software process or device) control of the corresponding private
key; and
p) map the authenticated identity to a user (human, software process or device).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.11" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="report_current_list_of_installed_assets" name="The asset shall provide the capability to report the current list of installed assets and their associated properties." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Usage of component ID, capability and revision level.
2. Formal process of configuration management should be deployed to keep control of the
changes in the component inventory baseline
3. The system requires all default passwords and pass phrases to be changed in order to complete the setup, prior to being operational.  This includes SSID passphrases, default accounts, admin accounts, etc.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_support_mgmt_id_by_user_group_role" name="The asset shall provide the capability to support the management of identifiers by user, group, role or asset interface." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Management of identifiers by group, role or  system interface.
2. Session ID, resource ID, secure cookie management policy.
3. On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.
NOTE: Use the server or framework’s session management controls. The application should only recognize these session identifiers as valid. Session identifier creation must always be done on a trusted system (e.g., The server). Session management controls should use well vetted algorithms that ensure sufficiently random session identifiers. Set the domain and path for cookies containing authenticated session identifiers to an appropriately restricted value for the site. Logout functionality should fully terminate the associated session or connection. Logout functionality should be available from all pages protected by authorization. Establish a session inactivity timeout that is as short as possible, based on balancing risk and business functional requirements. In most cases it should be no more than several hours. Disallow persistent logins and enforce periodic session terminations, even when the session is active. Especially for applications supporting rich network connections or connecting to critical systems. Termination times should support business requirements and the user should receive sufficient notification to mitigate negative impacts. If a session was established before login, close that session and establish a new session after a successful login. Generate a new session identifier on any re-authentication. Do not allow concurrent logins with the same user ID. Supplement standard session management for sensitive server-side operations, like account management, by utilizing per-session strong random tokens or parameters. This method can be used to prevent Cross Site Request Forgery attacks. Supplement standard session management for highly sensitive or critical operations by utilizing per-request, as opposed to per-session, strong random tokens or parameters. Set the "secure" attribute for cookies transmitted over an TLS connection. Set cookies with the HttpOnly attribute, unless you specifically require client-side scripts within your application to read or set a cookie's value
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="verify_intended_ops" name="The asset shall provide the capability to support verification of the intended operation of security functions and report when anomalies are discovered during FAT, SAT and scheduled maintenance. These security functions shall include all those necessary to support the security requirements specified in this standard." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Security verification functions include:
• Verification of antivirus measures by European Institute for Computer Antivirus Research
(EICAR) testing of the control system file system. Antivirus software should detect this and
appropriate incident handling procedures should be triggered.
• Verification of the identification, authentication and use control measures by attempting
access with an unauthorized account (for some functionality this could be automated).
• Verification of IDSs as a security control by including a rule in the IDS that triggers on
irregular, but known non-malicious traffic. The test could then be performed by introducing
traffic that triggers this rule and the appropriate IDS monitoring and incident handling
procedures.
• Confirmation that audit logging is occurring as required by security policies and
procedures and has not been disabled by an internal or external entity.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="switch_to_and_from_emergency_power_supply" name="The asset shall provide the capability to switch to and from an emergency power supply without affecting the existing security state or a documented degraded mode. " issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>There may be instances where compensating countermeasures such as physical door access
control or control system may be affected by loss of base power supply, in which case the emergency power supply should cover those associated systems.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="unique_id_human_users" name="The asset shall provide the capability to uniquely identify and authenticate all human users." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. passwords, tokens, biometrics, Certificates, geographic location
2. role-based or group-based
3. should be applied to both local and remote access to the control system.
4. Least Privilege 
5. Segregation of Duties
6. Authentication types (factors): (1) something you know (a secret) -like username and password; (2) something you have - such as a token device or smart phone; and (3) something you are - such as biometrics. 
7. On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.
8.  services should run as non-root accounts or use SUID accounts that release privilege after service start.  Non-root accounts used for services should not have a shell enabled, i.e. /dev/null should be shell in passwd file.  In cases where the application must run with elevated privileges, raise privileges as late as possible, and drop them as soon as possible.  For windows based services, it is preferred to run the service as SYSTEM, instead of an administrator account, which would have credentials which may be guessed and used in an attack.
9. Authorization is granting of permissions based on authentication. 
10.All authorization decisions should be made on the server, not the client.  
11. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
12. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
13. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
14. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
15. Server side implementation and presentation layer representations of access control rules must match. 
16. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
17. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
18. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources.
19. Assign identifiers that uniquely identify users/devices
a. E.g., employ a unique username-password combination for the user
b. Reasoning: This will prevent user 1 from spoofing as user 2. This is a concern for users with different levels of access.
20. Uniquely identify and authenticate users and devices
c. Multi-factor authentication
d. Use of authentication protocols that require no password/multifactor authentication: e.g., OAuth, OpenID, SAML
Note: system level forms of identification, such as IP or MAC address are easily spoofable and therefore do not qualify as a valid form of authentication. Establish and utilize standard, tested, authentication services whenever possible. Use a centralized implementation for all authentication controls, including libraries that call external authentication services. Segregate authentication logic from the resource being requested and use redirection to and from the centralized authentication control.  All authentication controls should fail securely. Enforce password complexity requirements established by policy or regulation. Authentication credentials should be sufficient to withstand attacks that are typical of the threats in the deployed environment. (e.g., requiring the use of alphabetic as well as numeric and/or special characters). Enforce password length requirements established by policy or regulation. Eight characters is commonly used, but 16 is better or consider the use of multi-word pass phrases. Password entry should be obscured on the user's screen. (e.g., on web forms use the input type "password")</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="validate_integrity_of_backup_info" name="The asset shall provide the capability to verify the reliability of backup mechanisms" issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>provide the capability to verify the reliability of backup mechanisms</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_participate_in_sys_level_backup" name="The identity and location of critical files and the ability to conduct backups of user-level and system-level information (including system state information) shall be supported by the asset without affecting the normal plant operations." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. availability of up-to-date backups.
2. verify the reliability of backup mechanisms.
3. automate the backup function based on a configurable frequency.
4. Review of Failed Backups.
5. Centralize Backup, backup media.
6. Encrypted backup storage</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="obscure_auth_feedback" name="When an asset provides an authentication capability, the asset shall provide the capability to obscure feedback of authenticator information during the authentication process." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. obscure feedback of authentication information during the authentication process by displaying asterisks or other random characters when a human user types in a password obscures feedback of authentication information.
2. entry of wired equivalent privacy (WEP) keys, secure socket shell (SSH) token entry and
RSA one-time passwords.
3. not provide any hint as to the reason for the authentication failure, such as “unknown user name”.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.12" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="if_pki_can_use_best_practices" name="Where PKI is utilized, the asset shall provide the capability to operate a PKI according to commonly accepted best practices or obtain public key certificates from an existing PKI." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Obtain public key certificates from an existing PKI.
2. organization’s certificate policy
3. agency should issue public key certificates under an appropriate certificate policy or obtains public key certificates under an appropriate certificate policy from an approved service provider.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="common-sl2-cr1-1" name="SL2 - Common - CR1.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-1-auth_access_token_exploit" name="An adversary exploits a weakness in authentication to create an access token to associate a process/thread" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-287">
                  <countermeasures>
                    <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                    <countermeasure ref="unique_id_human_users" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                <countermeasure ref="unique_id_human_users" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-1-unauth_human_sys_access" name="Unauthorized human access to the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                    <countermeasure ref="unique_id_human_users" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                <countermeasure ref="unique_id_human_users" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-1-unid-sys-user" name="Unidentified user of the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="50" availability="25" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-286">
                  <countermeasures>
                    <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                    <countermeasure ref="unique_id_human_users" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                <countermeasure ref="unique_id_human_users" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-10" name="SL2 - Common - CR1.10" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-10-adv_auth_feedback" name="An adversary receives authenticator feedback which helps him in user enumeration. E.g. invalid username. Invalid password." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-209">
                  <countermeasures>
                    <countermeasure ref="obscure_auth_feedback" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="obscure_auth_feedback" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-11" name="SL2 - Common - CR1.11" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-11-adv_bruteforce_auth_creds" name="And adversary can bruteforce authentication credentials" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-522">
                  <countermeasures>
                    <countermeasure ref="limit_invalid_attempts" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="limit_invalid_attempts" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-12" name="SL2 - Common - CR1.12" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-12-adv_no_motd" name="Adversaries who compromised the asset can dispute there was no message stating access was only for authorized personnel" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="show_sys_use_notification" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="show_sys_use_notification" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-13" name="SL2 - Common - CR1.13" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-13-adv_access_untrusted_netw" name="An adversary accesses the asset via an untrusted network" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="75" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="deny_access_via_untrusted_netw_unless_approved" mitigation="50"/>
                    <countermeasure ref="monitor_control_access_methods" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="deny_access_via_untrusted_netw_unless_approved" mitigation="50"/>
                <countermeasure ref="monitor_control_access_methods" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-14" name="SL2 - Common - CR1.14" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-14-rogue_employee_abuse_key" name="A rogue employee has unfettered access to a key and might use it for a malicious purpose or pass it onto someone else to the same end." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-322">
                  <countermeasures>
                    <countermeasure ref="protect_critical_long_lived_symmetric_keys" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_critical_long_lived_symmetric_keys" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-2" name="SL2 - Common - CR1.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-2-unid_sys_backdoor" name="Unidentified backdoor plugged in the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-2-unid_softw_arb_code_exec" name="Unidentified software that executes arbitrary code" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-123">
                  <countermeasures>
                    <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-3" name="SL2 - Common - CR1.3" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-3-adv_get_netw_info" name="An adversary that has previously obtained unauthorized access to certain device resources, uses that access to obtain information such as location and network information" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="provide_acc_mgmt_for_auth_users" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_acc_mgmt_for_auth_users" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-4" name="SL2 - Common - CR1.4" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-4-adv_guess_trusted_id" name="An adversary guesses, obtains, or &quot;rides&quot; a trusted identifier (e.g. session ID, resource ID, cookie, etc.) to perform authorized actions under the guise of an authenticated user or service." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-384">
                  <countermeasures>
                    <countermeasure ref="provide_support_mgmt_id_by_user_group_role" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_support_mgmt_id_by_user_group_role" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-5" name="SL2 - Common - CR1.5" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-5-adv_guess_default_pw" name="An adversary guesses the default password and user of an authenticator (e.g. admin:admin)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-521">
                  <countermeasures>
                    <countermeasure ref="provide_auth_init" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_auth_init" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-5-adv_retrieve_unencrypted_pw" name="An adversary is able to retrieve unencrypted passwords after a DBMS/DB -server breach" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-261">
                  <countermeasures>
                    <countermeasure ref="provide_auth_init" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_auth_init" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-7" name="SL2 - Common - CR1.7" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-7-adv_bruteforce_pw" name="An adversary is able to brute force the password" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-307">
                  <countermeasures>
                    <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-7-adv_guess_pw" name="An adversary is able to guess the password based on identifying an authenticator" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-521">
                  <countermeasures>
                    <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-8" name="SL2 - Common - CR1.8" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-8-adv_imposter_signed" name=" An attacker generates a message or datablock that causes the recipient to believe that the message or datablock was generated and cryptographically signed by an authoritative or reputable source, misleading a victim or victim operating system into performing malicious actions" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-347">
                  <countermeasures>
                    <countermeasure ref="if_pki_can_use_best_practices" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="if_pki_can_use_best_practices" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-9" name="SL2 - Common - CR1.9" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-9-adv_gen_certificate" name="An adversary exploits a weakness resulting from using a hashing algorithm with weak collision resistance to generate a certificate signing request (CSR) that contains collision blocks in the &quot;to be signed&quot; part" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-916">
                  <countermeasures>
                    <countermeasure ref="protect_relevant_priv_keys" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_relevant_priv_keys" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-1" name="SL2 - Common - CR2.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-1-adv_connect_with_compromised_acc_make_changes" name="An adversary is able to connect to the asset with a compromised account and is able to make changes to all content available on the asset. (no roles)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_auth_all_users_based_on_resp" mitigation="34"/>
                    <countermeasure ref="enforce_auth_based_on_role_leas_priv" mitigation="33"/>
                    <countermeasure ref="role_to_define_and_modify_perm_mapping" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_auth_all_users_based_on_resp" mitigation="34"/>
                <countermeasure ref="enforce_auth_based_on_role_leas_priv" mitigation="33"/>
                <countermeasure ref="role_to_define_and_modify_perm_mapping" mitigation="33"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-10" name="SL2 - Common - CR2.10" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-10-a_system_user_admin_is_not_notified_when_there_is_an_error_logging_the_system" name="A system user admin is not notified when there is an error logging the asset. Adversaries can use this by making the logging of the asset prone to errors by introducing a bug in the process. Now adversaries can compromise the system without it being logged." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="75" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="alert_personnel_prevent_svc_loss" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="alert_personnel_prevent_svc_loss" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-11" name="SL2 - Common - CR2.11" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-11-an_adversary_compromises_a_system_without_knowing_when_he_compromised_it" name="An adversary compromises a system without knowing when he compromised it." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                    <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-12" name="SL2 - Common - CR2.12" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-12-an_adversary_compromised_the_system_not_knowing_from_where_he_compromised_the_system" name="An adversary compromised the asset, not knowing from where he compromised the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="provide_human_user_interface_determine_user_took_action" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_human_user_interface_determine_user_took_action" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-2" name="SL2 - Common - CR2.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-2-adv_wifi_access" name="An adversary is able to get access to the asset via wireless protocols without authorization" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-3" name="SL2 - Common - CR2.3" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-3-adv_portable_dev_access" name="An adversary can access the asset using a portable device" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_config_usage_restriction" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_config_usage_restriction" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-4" name="SL2 - Common - CR2.4" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-4-an_adversary_can_execute_remote_code" name="An adversary can execute remote code" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-94">
                  <countermeasures>
                    <countermeasure ref="restrict_mobile_code" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="restrict_mobile_code" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-5" name="SL2 - Common - CR2.5" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-5-an_adversary_can_perform_a_dos_attack_by_making_consecutive_authorization_requests" name="An adversary can perform a DoS attack by making consecutive authorization requests" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-307">
                  <countermeasures>
                    <countermeasure ref="prevent_further_access_init_seslock" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="prevent_further_access_init_seslock" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-6" name="SL2 - Common - CR2.6" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-6-an_adversary_could_have_maintained_a_stored_session" name="An adversary could have maintained a stored session. By doing so he keeps access to the asset with the role identified with that corresponding session." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-384">
                  <countermeasures>
                    <countermeasure ref="terminate_remote_session_auto_or_manual" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="terminate_remote_session_auto_or_manual" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-8" name="SL2 - Common - CR2.8" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-8-an_aversary_could_have_compromised_the_sytem_without_you_knowing" name="An adversary could have compromised the system without you knowing what part in the asset was compromised or how he compromised the asset " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-9" name="SL2 - Common - CR2.9" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-9-logging_of_the_system_will_fail_when_allocated_storage_capacity_is_satisfied" name="Logging of the asset will fail when allocated storage capacity is satisfied. Attackers can take advantage of this by creating space-eater malware." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-117">
                  <countermeasures>
                    <countermeasure ref="allocate_sufficient_audit_record_storage" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="allocate_sufficient_audit_record_storage" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-1" name="SL2 - Common - CR3.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-1-adv_intercept_netw_traffic" name="An adversary can intercept network traffic" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="25" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-5">
                  <countermeasures>
                    <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                    <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-2" name="SL2 - Common - CR3.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-2-adv_phishing_mail" name="An adversary sends a phishing mail with a trojan as email attachment" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-507">
                  <countermeasures>
                    <countermeasure ref="employ_maware_protection" mitigation="50"/>
                    <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="employ_maware_protection" mitigation="50"/>
                <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-3" name="SL2 - Common - CR3.3" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-3-adv_plant_backdoor" name="An adversary could have planted a backdoor on the asset without the user ever knowing (no anti-virus)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-147">
                  <countermeasures>
                    <countermeasure ref="verify_intended_ops" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="verify_intended_ops" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-4" name="SL2 - Common - CR3.4" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-4-adv_tamper_software" name="An adversary is able to tamper with software running on a system. On the asset no integrity check is in place." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-354">
                  <countermeasures>
                    <countermeasure ref="integrity_check_software" mitigation="50"/>
                    <countermeasure ref="support_auth_check_on_software_config" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="integrity_check_software" mitigation="50"/>
                <countermeasure ref="support_auth_check_on_software_config" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-5" name="SL2 - Common - CR3.5" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-5-adv_xss" name="An adversary can perform cross site scripting when input is not validated" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-79">
                  <countermeasures>
                    <countermeasure ref="validate_syntax_length_content_of_any_input" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="validate_syntax_length_content_of_any_input" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-6" name="SL2 - Common - CR3.6" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-6-adv_fuzz_sensor" name="An adversary can fuzz a sensor connected to a PLC which will cause the controller to generate wrong output values which can cause big system failures (DoS)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="75" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-20">
                  <countermeasures>
                    <countermeasure ref="phys_logical_connect_to_automation_process" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="phys_logical_connect_to_automation_process" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-7" name="SL2 - Common - CR3.7" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-7-adv_disclose_info_via_error_msg" name="An adversary can use error messages that contain too much information, such as stack traces, to discover vulnerabilities in the running service." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-209">
                  <countermeasures>
                    <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-8" name="SL2 - Common - CR3.8" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-8-adv_mitm_random_sessionid" name="An adversary can perform a man in the middle attack when generating a session with a random session-ID." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="protect_integrity_of_sessions" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_integrity_of_sessions" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-9" name="SL2 - Common - CR3.9" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-9-adv_delete_audit_records_after_breach" name="An adversary is able to delete audit records after a system breach which can make investigations very difficult  " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-732">
                  <countermeasures>
                    <countermeasure ref="protect_audit_info_logs_tools" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_audit_info_logs_tools" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr4-1" name="SL2 - Common - CR4.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr4-1-adv_intercept_unecrypted_file_in_transit" name="An adversary is able to intercept an unencrypted file in transit" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="protect_conf_of_info_at_rest_remote_access" mitigation="50"/>
                    <countermeasure ref="protect_conf_of_info_traversing_netw" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_conf_of_info_at_rest_remote_access" mitigation="50"/>
                <countermeasure ref="protect_conf_of_info_traversing_netw" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr4-2" name="SL2 - Common - CR4.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr4-adv_access_file_unpurged_dev" name="An adversary can access files through a device which was released from active service and which was not purged" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-672">
                  <countermeasures>
                    <countermeasure ref="explicit_read_auth_protect_conf_info" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="explicit_read_auth_protect_conf_info" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr4-3" name="SL2 - Common - CR4.3" desc="" library="iec62443">
          <threats>
            <threat ref="cr4-3-adv_break_alg_weak_encryption" name="When a weak encryption algorithm is used an adversary is capable of breaking the algorithm with standard available tools" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-326">
                  <countermeasures>
                    <countermeasure ref="user_crypto_algs" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="user_crypto_algs" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr5-1" name="SL2 - Common - CR5.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr5-1-network_segmentation_exploit" name="An adversary is able to hop between internal networks since they are not segregated" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="logically_segment_control_system" mitigation="50"/>
                    <countermeasure ref="physically_segment_control_system" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="logically_segment_control_system" mitigation="50"/>
                <countermeasure ref="physically_segment_control_system" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr5-2" name="SL2 - Common - CR5.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr5-2-lateralmovement_exploit" name="An adversary can complete lateral movement within the asset when no protection is set up" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="deny_netw_traffic_allow_netw_traffic_exceptions" mitigation="50"/>
                    <countermeasure ref="monitor_control_comms_zone_boundaries" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="deny_netw_traffic_allow_netw_traffic_exceptions" mitigation="50"/>
                <countermeasure ref="monitor_control_comms_zone_boundaries" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr6-1" name="SL2 - Common - CR6.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr6-1-audit_log_exploit" name="An adversary may compromise the asset and edit the logfiles with non root privileges" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-532">
                  <countermeasures>
                    <countermeasure ref="auth_humans_tools_audit_logs" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="auth_humans_tools_audit_logs" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr6-2" name="SL2 - Common - CR6.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr6-2-continuous_monitoring_exploit" name="An adversary compromises a system  without it being timely notified and detected by for example a IDS" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-693">
                  <countermeasures>
                    <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-1" name="SL2 - Common - CR7.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-1-dos_no_protect" name="Assets might lose the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event.&#10;" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-1100">
                  <countermeasures>
                    <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                    <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-2" name="SL2 - Common - CR7.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-2-rsrc_exhaustion" name="Assets might lose the capability to maintain essential functions as a result of resource exhaustion." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-400">
                  <countermeasures>
                    <countermeasure ref="limit_rsrc_by_sec" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="limit_rsrc_by_sec" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-3" name="SL2 - Common - CR7.3" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-3-no_usr_sys_info_backup" name="Assets might not regain their state (user- and system-level information) due to storage failure." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="50" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-636">
                  <countermeasures>
                    <countermeasure ref="provide_participate_in_sys_level_backup" mitigation="50"/>
                    <countermeasure ref="validate_integrity_of_backup_info" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_participate_in_sys_level_backup" mitigation="50"/>
                <countermeasure ref="validate_integrity_of_backup_info" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-4" name="SL2 - Common - CR7.4" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-4-no_usr_sys_info_backup" name="Assets might not regain their state (user- and system-level information) due to storage failure." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="50" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-636">
                  <countermeasures>
                    <countermeasure ref="cap_to_be_recovered_to_known_secure_state" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="cap_to_be_recovered_to_known_secure_state" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-5" name="SL2 - Common - CR7.5" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-5-emergency_power" name="An adversary can cause a power outage of a security system which will give an adversary to compromise the asset." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="switch_to_and_from_emergency_power_supply" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="switch_to_and_from_emergency_power_supply" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-6" name="SL2 - Common - CR7.6" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-6-unauth_access_default_creds" name="Unauthorized component access might occur as a result of not being able to change default access credentials" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-798">
                  <countermeasures>
                    <countermeasure ref="config_according_to_recommended_netw_and_security" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="config_according_to_recommended_netw_and_security" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-7" name="SL2 - Common - CR7.7" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-7-unauth_access_unnecessary_func" name="Unauthorized component access might occur as a result of not being able to restrict unnecessary functions, ports, protocols and/or services." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-8" name="SL2 - Common - CR7.8" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-8-rogue_assets" name="Rogue assets might enter the network as a result of not being able to verify component identities." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="6ba7a279-4fc4-4f8b-ab0e-39047efedd79" diagramComponentId="0b4cc118-3b99-4686-b5ff-cf27b7f22120" ref="a8d847b4-1cbd-4dd1-80da-f4380ecf35c0" name="Ethernet" desc="" library="iec62443" parentComponentRef="" componentDefinitionRef="ethernet">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="iec62443-sl2"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-300" name="Channel Accessible by Non-Endpoint ('Man-in-the-Middle')" state="0" impact="100" issueId="">
          <desc>The product does not adequately verify the identity of actors at both ends of a communication channel, or does not adequately ensure the integrity of the channel, in a way that allows the channel to be accessed or influenced by an actor that is not an endpoint.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-284" name="Improper Access Control" state="0" impact="100" issueId="">
          <desc>The software does not restrict or incorrectly restricts access to a resource from an unauthorized actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-354" name="Improper Validation of Integrity Check Value" state="0" impact="100" issueId="">
          <desc>The software does not validate or incorrectly validates the integrity check values or "checksums" of a message. This may prevent it from detecting if the data has been modified or corrupted in transmission.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-347" name="Improper Verification of Cryptographic Signature" state="0" impact="100" issueId="">
          <desc>The software does not verify, or incorrectly verifies, the cryptographic signature for data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-326" name="Inadequate Encryption Strength" state="0" impact="100" issueId="">
          <desc>The software stores or transmits sensitive data using an encryption scheme that is theoretically sound, but is not strong enough for the level of protection required.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-532" name="Inclusion of Sensitive Information in Log Files" state="0" impact="100" issueId="">
          <desc>Information written to log files can be of a sensitive nature and give valuable guidance to an attacker or expose sensitive user information.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-1100" name="Insufficient Isolation of System-Dependent Functions" state="0" impact="100" issueId="">
          <desc>The product or code does not isolate system-dependent
					functionality into separate stand-alone modules.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="">
          <desc>When a security-critical event occurs, the software either does not record the event or omits important details about the event when logging it.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-5" name="J2EE Misconfiguration: Data Transmission Without Encryption" state="0" impact="100" issueId="">
          <desc>Information sent over a network can be compromised while in transit. An attacker may be able to read or modify the contents if the data are sent in plaintext or are weakly encrypted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-322" name="Key Exchange without Entity Authentication" state="0" impact="100" issueId="">
          <desc>The software performs a key exchange with an actor without verifying the identity of that actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-311" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="">
          <desc>The software does not encrypt sensitive or critical information before storage or transmission.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-636" name="Not Failing Securely ('Failing Open')" state="0" impact="100" issueId="">
          <desc>When the product encounters an error condition or failure, its design requires it to fall back to a state that is less secure than other options that are available, such as selecting the weakest encryption algorithm or using the most permissive access control restrictions.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-693" name="Protection Mechanism Failure" state="0" impact="100" issueId="">
          <desc>The product does not use or incorrectly uses a protection mechanism that provides sufficient defence against directed attacks against the product.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-384" name="Session Fixation" state="0" impact="100" issueId="">
          <desc>Authenticating a user, or otherwise establishing a new user session, without invalidating any existing session identifier gives an attacker the opportunity to steal authenticated sessions.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-507" name="Trojan Horse" state="0" impact="100" issueId="">
          <desc>The software appears to contain benign or useful functionality, but it also contains code that is hidden from normal operation that violates the intended security policy of the user or the system administrator.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-400" name="Uncontrolled Resource Consumption" state="0" impact="100" issueId="">
          <desc>The software does not properly control the allocation and maintenance of a limited resource thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-798" name="Use of Hard-coded Credentials" state="0" impact="100" issueId="">
          <desc>The software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-916" name="Use of Password Hash With Insufficient Computational Effort" state="0" impact="100" issueId="">
          <desc>The software generates a hash for a password, but it uses a scheme that does not provide a sufficient level of computational effort that would make password cracking attacks infeasible or expensive.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-261" name="Weak Cryptography for Passwords" state="0" impact="100" issueId="">
          <desc>Obscuring a password with a trivial encoding does not protect the password.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-521" name="Weak Password Requirements" state="0" impact="100" issueId="">
          <desc>The product does not require that users should have strong passwords, which makes it easier for attackers to compromise user accounts.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="auth_humans_tools_audit_logs" name="Assets shall provide the capability for authorized humans and/or tools to access audit logs on a read-only basis." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Access Control - Authorize members
2. Least Privilege &amp; Need to Know Basis
3. Review of access </desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="config_according_to_recommended_netw_and_security" name="Assets shall provide the capability to be configured according to recommended network and security configurations as described in guidelines provided by the asset supplier. The asset shall provide an interface to the currently deployed network and security configuration settings." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Devices with network connectivity are capable of being updated from the network.
2. provide the capability to generate a report listing the currently deployed security settings in a machine-readable format.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="continuous_monitor_accepted_sec" name="Assets shall provide the capability to be continuously monitored using commonly accepted security industry practices and recommendations to detect, characterize and report security breaches in a timely manner." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Control system monitoring capability can be achieved through a variety of tools and
techniques (for example, IDS, IPS, malicious code protection mechanisms and network monitoring mechanisms).
2. Monitoring devices should be strategically deployed within the control system (for example, at
selected perimeter locations and near server farms supporting critical applications) to collect
essential information. Monitoring mechanisms may also be deployed at ad hoc locations
within the control system to track specific transactions
3. SIEM Implementation</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="cap_to_be_recovered_to_known_secure_state" name="Assets shall provide the capability to be recovered and reconstituted to a known secure state after a disruption or failure." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Control system recovery and reconstitution to a known secure state means that all system
parameters (either default or configurable) are set to secure values, security-critical patches
are reinstalled, security-related configuration settings are reestablished, system documentation and operating procedures are available, application and system software is reinstalled and configured with secure settings, information from the most recent, known secure backups is loaded and the system is fully tested and functional.
1. Roll back procedure.
2. Secure storage of previous version</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_for_audit_records" name="Assets shall provide the capability to create timestamps (including date and time) for use in audit records." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Timestamps (including date and time) of audit records should be generated using internal
system clocks.
1. provide timestamps for use in audit record generation.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" name="Assets shall provide the capability to create timestamps that are synchronized with a system wide time source." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>to synchronize internal system clocks at a configurable frequency.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="limit_rsrc_by_sec" name="Assets shall provide the capability to limit the use of resources by security functions to protect against resource exhaustion." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Resource management (for example, network segmentation or priority schemes) prevents a
lower-priority software process from delaying or interfering with the control system servicing
any higher-priority software process.
1. initiating network scans, patching and/or antivirus checks on an operating system.
2. Traffic rate limiting schemes should be considered as a mitigation technique.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="maintain_essential_functions" name="Assets shall provide the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>provide the capability to manage communication loads (such as
using rate limiting) to mitigate the effects of information flooding types of DoS events.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="support_auth_check_on_software_config" name="Assets shall provide the capability to perform or support authenticity checks on software, configuration and other information as well as the recording and reporting of the results of these checks or be integrated into a system that can perform or support authenticity checks." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Integrity verification methods are employed to detect, record, report and protect against software and information tampering.
1. cryptographic hashes
2. Notification of unauthorize changes
Integrity verification methods are employed to detect, record, report and protect against software and information tampering that may occur if other protection mechanisms (such as authorization enforcement) have been circumvented. The control system should employ formal or recommended integrity mechanisms (such as cryptographic hashes).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="integrity_check_software" name="Assets shall provide the capability to perform or support integrity checks on software, configuration and other information as well as the recording and reporting of the results of these checks or be integrated into a system that can perform or support integrity checks." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Integrity verification methods are employed to detect, record, report and protect against software and information tampering.
1. cryptographic hashes
2. Notification of unauthorize changes
Integrity verification methods are employed to detect, record, report and protect against software and information tampering that may occur if other protection mechanisms (such as authorization enforcement) have been circumvented. The control system should employ formal or recommended integrity mechanisms (such as cryptographic hashes).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_critical_long_lived_symmetric_keys" name="Assets shall provide the capability to protect critical, long lived symmetric keys via hardware mechanisms." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. establish the mutual trust using the symmetric key; store securely the shared secret (the authentication is valid as long as the shared secret remains secret); restrict access to the shared secret; ensure that the algorithms and keys used for the symmetric key authentication</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.16" supportedStandardRef="iec-62443-4-2:2019"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" name="Assets shall provide the capability to specifically restrict the use of unnecessary functions, ports, protocols and/or services." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc> 1. capability to specifically prohibit and/or restrict the use of unnecessary functions, ports, protocols and/or services.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="user_crypto_algs" name="If cryptography is required, the asset shall use cryptographic algorithms, key sizes and mechanisms for key establishment and management according to commonly accepted security industry practices and recommendations." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. document the practices and procedures relating to cryptographic key establishment and management.
2. utilize established and tested encryption and hash algorithms, such as the advanced
encryption standard (AES) and the secure hash algorithm (SHA) series, and key sizes based
on an assigned standard.
3. Key generation needs to be performed using an effective random number generator.
4. The security policies and procedures for key management need to address
periodic key changes, key destruction, key distribution and encryption key backup in
accordance with defined standards</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="alert_personnel_prevent_svc_loss" name="The asset shall provide the capability to alert personnel and prevent the loss of essential services and functions in the event of an audit processing failure. The control system shall provide the capability to support appropriate actions in response to an audit processing failure according to commonly accepted industry practices and recommendations. " issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Audit generation typically occurs at the source of the event. Audit processing involves
transmission, possible augmentation (such as the addition of a timestamp) and persistent
storage of the audit records. Audit processing failures include, for example, software or
hardware errors, failures in the audit capturing mechanisms and audit storage capacity being
reached or exceeded
1.capability to alert personnel and prevent the loss of essential services and functions in the event of an audit processing failure.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.12" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="show_sys_use_notification" name="The asset shall provide the capability to display a system use notification message before authenticating. The system use notification message shall be configurable by authorized personnel." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. display a system use notification message or warning banners before authenticating &amp; configurable by authorized personnel.
2. Privacy and security policies and procedures need to be consistent with applicable laws,
directives, policies, regulations, standards and guidance.
3. Examples of elements for inclusion in the system use notification message are:
a) that the individual is accessing a specific control system;
b) that system usage may be monitored, recorded and subject to audit;
c) that unauthorized use of the system is prohibited and subject to criminal and/or civil
penalties; and
d) that use of the system indicates consent to monitoring and recording</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.14" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="employ_cypto_mechs_to_recognize_changes" name="The asset shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="employ_maware_protection" name="The asset shall provide the capability to employ malicious code protection mechanisms at all entry and exit points." issueId="" platform="" cost="0" risk="74" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>prevent, detect, mitigate and report instances of detected malicious code (for example, viruses, worms, Trojan horses and spyware) transported by electronic mail, electronic mail attachments, Internet access, removable media (for example, universal serial bus (USB) devices, diskettes or compact disks), PDF documents, web services, network connections and infected laptops or other
common means.
1. Detection Technique  - binary integrity and attributes monitoring, hashing and signature techniques.
2.Mitigation technique - file cleaning, quarantining, file deletion, host communication restriction and IPSs
3. Prevention Technique - application blacklisting and whitelisting techniques, removable media control, sandbox techniques and specific computing platforms mechanisms such as restricted firmware update capabilities, No Execute (NX) bit, data execution prevention (DEP), address space layout randomization (ASLR), stack corruption detection and mandatory access controls.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" name="The asset shall provide the capability to employ protection mechanisms to prevent, detect, report and mitigate the effects of malicious code or unauthorized software. The asset shall provide the capability to update the protection mechanisms." issueId="" platform="" cost="0" risk="74" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>prevent, detect, mitigate and report instances of detected malicious code (for example, viruses, worms, Trojan horses and spyware) transported by electronic mail, electronic mail attachments, Internet access, removable media (for example, universal serial bus (USB) devices, diskettes or compact disks), PDF documents, web services, network connections and infected laptops or other
common means.
1. Detection Technique  - binary integrity and attributes monitoring, hashing and signature techniques.
2.Mitigation technique - file cleaning, quarantining, file deletion, host communication restriction and IPSs
3. Prevention Technique - application blacklisting and whitelisting techniques, removable media control, sandbox techniques and specific computing platforms mechanisms such as restricted firmware update capabilities, No Execute (NX) bit, data execution prevention (DEP), address space layout randomization (ASLR), stack corruption detection and mandatory access controls.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" name="The asset shall provide the capability to generate audit records relevant to security for the following categories: access control, request errors, operating system events, asset events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Generate audit records relevant to security for the following categories: access control, request errors, operating system events, control system events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_auth_init" name="The asset shall provide the capability to: initialize authenticator content; change all default authenticators upon asset installation; change/refresh all authenticators; protect all authenticators from unauthorized disclosure and modification when stored and transmitted." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>&gt; initialize authenticator content;
&gt; change all default authenticators upon control system installation;
&gt; change/refresh all authenticators; and
&gt; protect all authenticators from unauthorized disclosure and modification when stored and
transmitted
2.  tokens, symmetric keys, private keys (part of a public/private key pair), biometrics,
passwords, physical keys and key card
3. Human users should take reasonable measures to safeguard authenticators, including maintaining possession of their individual authenticators, not loaning or sharing authenticators with others and reporting lost or compromised authenticators immediately.
4. cryptographic protections such as encryption or hashing or by handshake protocols which do not require transmission of the password. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.
5. Lockout or loss of control due to security measures is not acceptable. If the control system is required to have a high level of availability, measures should be taken to maintain this high
level of availability (such as compensating physical countermeasures, duplicate keys and
supervisory override).
6. Complex strength of the authentication mechanism</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="logically_segment_control_system" name="The asset shall provide the capability to logically segment asset networks from non-asset networks and to logically segment critical asset networks from other asset networks." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Access from the control system to the World Wide Web should be clearly justified based on
control system operational requirements.
2. Logical Segmentation.
3. Physical Segmentation.
4. capability to provide network services to control system networks, critical or otherwise, without a connection to non-control system networks.
5. capability to logically and physically isolate critical control system networks from non-critical control system networks.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="mitigate_info_effects_flooding_types" name="The asset shall provide the capability to manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. boundary protection
2. restricting the information flow to be unidirectional outbound
3. manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events.
4. restrict the ability of all users (humans, software processes and devices) to cause DoS events which affect other control systems or networks.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="physically_segment_control_system" name="The asset shall provide the capability to physically segment asset networks from non-asset networks and to physically segment critical asset networks from non-critical asset networks." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_conf_of_info_traversing_netw" name="The asset shall provide the capability to protect the confidentiality of information at rest and remote access sessions traversing an untrusted network." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_conf_of_info_at_rest_remote_access" name="The asset shall provide the capability to protect the confidentiality of information for which explicit read authorization is supported, whether at rest or in transit." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. physical means, compartmentalization or encryption.
2. configuring explicit read authorizations in the control system.
3. Digital Certificates.
4. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_integrity_transmitted_info" name="The asset shall provide the capability to protect the integrity of transmitted information." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_relevant_priv_keys" name="The asset shall provide the capability to protect the relevant private keys via hardware mechanisms according to commonly accepted security industry practices and recommendations." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Follow All below Steps:
l) validate certificates by checking the validity of the signature of a given certificate;
m) validate certificates by constructing a certification path to an accepted CA or in the case of
self-signed certificates by deploying leaf certificates to all hosts which communicate with
the subject to which the certificate is issued;
n) validate certificates by checking a given certificate’s revocation status;
o) establish user (human, software process or device) control of the corresponding private
key; and
p) map the authenticated identity to a user (human, software process or device).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.11" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="report_current_list_of_installed_assets" name="The asset shall provide the capability to report the current list of installed assets and their associated properties." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Usage of component ID, capability and revision level.
2. Formal process of configuration management should be deployed to keep control of the
changes in the component inventory baseline
3. The system requires all default passwords and pass phrases to be changed in order to complete the setup, prior to being operational.  This includes SSID passphrases, default accounts, admin accounts, etc.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_support_mgmt_id_by_user_group_role" name="The asset shall provide the capability to support the management of identifiers by user, group, role or asset interface." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Management of identifiers by group, role or  system interface.
2. Session ID, resource ID, secure cookie management policy.
3. On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.
NOTE: Use the server or framework’s session management controls. The application should only recognize these session identifiers as valid. Session identifier creation must always be done on a trusted system (e.g., The server). Session management controls should use well vetted algorithms that ensure sufficiently random session identifiers. Set the domain and path for cookies containing authenticated session identifiers to an appropriately restricted value for the site. Logout functionality should fully terminate the associated session or connection. Logout functionality should be available from all pages protected by authorization. Establish a session inactivity timeout that is as short as possible, based on balancing risk and business functional requirements. In most cases it should be no more than several hours. Disallow persistent logins and enforce periodic session terminations, even when the session is active. Especially for applications supporting rich network connections or connecting to critical systems. Termination times should support business requirements and the user should receive sufficient notification to mitigate negative impacts. If a session was established before login, close that session and establish a new session after a successful login. Generate a new session identifier on any re-authentication. Do not allow concurrent logins with the same user ID. Supplement standard session management for sensitive server-side operations, like account management, by utilizing per-session strong random tokens or parameters. This method can be used to prevent Cross Site Request Forgery attacks. Supplement standard session management for highly sensitive or critical operations by utilizing per-request, as opposed to per-session, strong random tokens or parameters. Set the "secure" attribute for cookies transmitted over an TLS connection. Set cookies with the HttpOnly attribute, unless you specifically require client-side scripts within your application to read or set a cookie's value
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="if_pki_can_use_best_practices" name="Where PKI is utilized, the asset shall provide the capability to operate a PKI according to commonly accepted best practices or obtain public key certificates from an existing PKI." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Obtain public key certificates from an existing PKI.
2. organization’s certificate policy
3. agency should issue public key certificates under an appropriate certificate policy or obtains public key certificates under an appropriate certificate policy from an approved service provider.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="common-sl2-cr1-12" name="SL2 - Common - CR1.12" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-12-adv_no_motd" name="Adversaries who compromised the asset can dispute there was no message stating access was only for authorized personnel" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="show_sys_use_notification" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="show_sys_use_notification" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-14" name="SL2 - Common - CR1.14" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-14-rogue_employee_abuse_key" name="A rogue employee has unfettered access to a key and might use it for a malicious purpose or pass it onto someone else to the same end." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-322">
                  <countermeasures>
                    <countermeasure ref="protect_critical_long_lived_symmetric_keys" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_critical_long_lived_symmetric_keys" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-4" name="SL2 - Common - CR1.4" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-4-adv_guess_trusted_id" name="An adversary guesses, obtains, or &quot;rides&quot; a trusted identifier (e.g. session ID, resource ID, cookie, etc.) to perform authorized actions under the guise of an authenticated user or service." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-384">
                  <countermeasures>
                    <countermeasure ref="provide_support_mgmt_id_by_user_group_role" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_support_mgmt_id_by_user_group_role" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-5" name="SL2 - Common - CR1.5" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-5-adv_guess_default_pw" name="An adversary guesses the default password and user of an authenticator (e.g. admin:admin)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-521">
                  <countermeasures>
                    <countermeasure ref="provide_auth_init" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_auth_init" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-5-adv_retrieve_unencrypted_pw" name="An adversary is able to retrieve unencrypted passwords after a DBMS/DB -server breach" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-261">
                  <countermeasures>
                    <countermeasure ref="provide_auth_init" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_auth_init" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-8" name="SL2 - Common - CR1.8" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-8-adv_imposter_signed" name=" An attacker generates a message or datablock that causes the recipient to believe that the message or datablock was generated and cryptographically signed by an authoritative or reputable source, misleading a victim or victim operating system into performing malicious actions" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-347">
                  <countermeasures>
                    <countermeasure ref="if_pki_can_use_best_practices" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="if_pki_can_use_best_practices" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-9" name="SL2 - Common - CR1.9" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-9-adv_gen_certificate" name="An adversary exploits a weakness resulting from using a hashing algorithm with weak collision resistance to generate a certificate signing request (CSR) that contains collision blocks in the &quot;to be signed&quot; part" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-916">
                  <countermeasures>
                    <countermeasure ref="protect_relevant_priv_keys" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_relevant_priv_keys" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-10" name="SL2 - Common - CR2.10" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-10-a_system_user_admin_is_not_notified_when_there_is_an_error_logging_the_system" name="A system user admin is not notified when there is an error logging the asset. Adversaries can use this by making the logging of the asset prone to errors by introducing a bug in the process. Now adversaries can compromise the system without it being logged." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="75" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="alert_personnel_prevent_svc_loss" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="alert_personnel_prevent_svc_loss" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-11" name="SL2 - Common - CR2.11" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-11-an_adversary_compromises_a_system_without_knowing_when_he_compromised_it" name="An adversary compromises a system without knowing when he compromised it." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                    <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-8" name="SL2 - Common - CR2.8" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-8-an_aversary_could_have_compromised_the_sytem_without_you_knowing" name="An adversary could have compromised the system without you knowing what part in the asset was compromised or how he compromised the asset " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-1" name="SL2 - Common - CR3.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-1-adv_intercept_netw_traffic" name="An adversary can intercept network traffic" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="25" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-5">
                  <countermeasures>
                    <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                    <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-2" name="SL2 - Common - CR3.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-2-adv_phishing_mail" name="An adversary sends a phishing mail with a trojan as email attachment" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-507">
                  <countermeasures>
                    <countermeasure ref="employ_maware_protection" mitigation="50"/>
                    <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="employ_maware_protection" mitigation="50"/>
                <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-4" name="SL2 - Common - CR3.4" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-4-adv_tamper_software" name="An adversary is able to tamper with software running on a system. On the asset no integrity check is in place." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-354">
                  <countermeasures>
                    <countermeasure ref="integrity_check_software" mitigation="50"/>
                    <countermeasure ref="support_auth_check_on_software_config" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="integrity_check_software" mitigation="50"/>
                <countermeasure ref="support_auth_check_on_software_config" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr4-1" name="SL2 - Common - CR4.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr4-1-adv_intercept_unecrypted_file_in_transit" name="An adversary is able to intercept an unencrypted file in transit" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="protect_conf_of_info_at_rest_remote_access" mitigation="50"/>
                    <countermeasure ref="protect_conf_of_info_traversing_netw" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_conf_of_info_at_rest_remote_access" mitigation="50"/>
                <countermeasure ref="protect_conf_of_info_traversing_netw" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr4-3" name="SL2 - Common - CR4.3" desc="" library="iec62443">
          <threats>
            <threat ref="cr4-3-adv_break_alg_weak_encryption" name="When a weak encryption algorithm is used an adversary is capable of breaking the algorithm with standard available tools" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-326">
                  <countermeasures>
                    <countermeasure ref="user_crypto_algs" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="user_crypto_algs" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr5-1" name="SL2 - Common - CR5.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr5-1-network_segmentation_exploit" name="An adversary is able to hop between internal networks since they are not segregated" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="logically_segment_control_system" mitigation="50"/>
                    <countermeasure ref="physically_segment_control_system" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="logically_segment_control_system" mitigation="50"/>
                <countermeasure ref="physically_segment_control_system" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr6-1" name="SL2 - Common - CR6.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr6-1-audit_log_exploit" name="An adversary may compromise the asset and edit the logfiles with non root privileges" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-532">
                  <countermeasures>
                    <countermeasure ref="auth_humans_tools_audit_logs" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="auth_humans_tools_audit_logs" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr6-2" name="SL2 - Common - CR6.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr6-2-continuous_monitoring_exploit" name="An adversary compromises a system  without it being timely notified and detected by for example a IDS" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-693">
                  <countermeasures>
                    <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-1" name="SL2 - Common - CR7.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-1-dos_no_protect" name="Assets might lose the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event.&#10;" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-1100">
                  <countermeasures>
                    <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                    <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-2" name="SL2 - Common - CR7.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-2-rsrc_exhaustion" name="Assets might lose the capability to maintain essential functions as a result of resource exhaustion." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-400">
                  <countermeasures>
                    <countermeasure ref="limit_rsrc_by_sec" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="limit_rsrc_by_sec" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-4" name="SL2 - Common - CR7.4" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-4-no_usr_sys_info_backup" name="Assets might not regain their state (user- and system-level information) due to storage failure." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="50" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-636">
                  <countermeasures>
                    <countermeasure ref="cap_to_be_recovered_to_known_secure_state" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="cap_to_be_recovered_to_known_secure_state" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-6" name="SL2 - Common - CR7.6" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-6-unauth_access_default_creds" name="Unauthorized component access might occur as a result of not being able to change default access credentials" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-798">
                  <countermeasures>
                    <countermeasure ref="config_according_to_recommended_netw_and_security" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="config_according_to_recommended_netw_and_security" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-7" name="SL2 - Common - CR7.7" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-7-unauth_access_unnecessary_func" name="Unauthorized component access might occur as a result of not being able to restrict unnecessary functions, ports, protocols and/or services." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-8" name="SL2 - Common - CR7.8" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-8-rogue_assets" name="Rogue assets might enter the network as a result of not being able to verify component identities." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="322d9bf0-d864-4eaa-b38d-7d513355a60c" diagramComponentId="cd7186ba-bb9b-4c1a-9d2c-e830132234ec" ref="a2761ef9-1085-4360-98aa-b438f55ac73b" name="RF Interface - 802.11 Wifi" desc="" library="iec62443" parentComponentRef="" componentDefinitionRef="rf-interface-802-11-wifi">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="iec62443-sl2"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-300" name="Channel Accessible by Non-Endpoint ('Man-in-the-Middle')" state="0" impact="100" issueId="">
          <desc>The product does not adequately verify the identity of actors at both ends of a communication channel, or does not adequately ensure the integrity of the channel, in a way that allows the channel to be accessed or influenced by an actor that is not an endpoint.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-284" name="Improper Access Control" state="0" impact="100" issueId="">
          <desc>The software does not restrict or incorrectly restricts access to a resource from an unauthorized actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-94" name="Improper Control of Generation of Code ('Code Injection')" state="0" impact="100" issueId="">
          <desc>The software constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behaviour of the intended code segment.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-307" name="Improper Restriction of Excessive Authentication Attempts" state="0" impact="100" issueId="">
          <desc>The software does not implement sufficient measures to prevent multiple failed authentication attempts within in a short time frame, making it more susceptible to brute force attacks.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-354" name="Improper Validation of Integrity Check Value" state="0" impact="100" issueId="">
          <desc>The software does not validate or incorrectly validates the integrity check values or "checksums" of a message. This may prevent it from detecting if the data has been modified or corrupted in transmission.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-347" name="Improper Verification of Cryptographic Signature" state="0" impact="100" issueId="">
          <desc>The software does not verify, or incorrectly verifies, the cryptographic signature for data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-326" name="Inadequate Encryption Strength" state="0" impact="100" issueId="">
          <desc>The software stores or transmits sensitive data using an encryption scheme that is theoretically sound, but is not strong enough for the level of protection required.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-532" name="Inclusion of Sensitive Information in Log Files" state="0" impact="100" issueId="">
          <desc>Information written to log files can be of a sensitive nature and give valuable guidance to an attacker or expose sensitive user information.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-209" name="Information Exposure Through an Error Message" state="0" impact="100" issueId="">
          <desc>The software generates an error message that includes sensitive information about its environment, users, or associated data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-1100" name="Insufficient Isolation of System-Dependent Functions" state="0" impact="100" issueId="">
          <desc>The product or code does not isolate system-dependent
					functionality into separate stand-alone modules.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="">
          <desc>When a security-critical event occurs, the software either does not record the event or omits important details about the event when logging it.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-522" name="Insufficiently Protected Credentials" state="0" impact="100" issueId="">
          <desc>This weakness occurs when the application transmits or stores authentication credentials and uses an insecure method that is susceptible to unauthorized interception and/or retrieval.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-5" name="J2EE Misconfiguration: Data Transmission Without Encryption" state="0" impact="100" issueId="">
          <desc>Information sent over a network can be compromised while in transit. An attacker may be able to read or modify the contents if the data are sent in plaintext or are weakly encrypted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-322" name="Key Exchange without Entity Authentication" state="0" impact="100" issueId="">
          <desc>The software performs a key exchange with an actor without verifying the identity of that actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-636" name="Not Failing Securely ('Failing Open')" state="0" impact="100" issueId="">
          <desc>When the product encounters an error condition or failure, its design requires it to fall back to a state that is less secure than other options that are available, such as selecting the weakest encryption algorithm or using the most permissive access control restrictions.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-672" name="Operation on a Resource after Expiration or Release" state="0" impact="100" issueId="">
          <desc>The software uses, accesses, or otherwise operates on a resource after that resource has been expired, released, or revoked.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-693" name="Protection Mechanism Failure" state="0" impact="100" issueId="">
          <desc>The product does not use or incorrectly uses a protection mechanism that provides sufficient defence against directed attacks against the product.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-384" name="Session Fixation" state="0" impact="100" issueId="">
          <desc>Authenticating a user, or otherwise establishing a new user session, without invalidating any existing session identifier gives an attacker the opportunity to steal authenticated sessions.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-507" name="Trojan Horse" state="0" impact="100" issueId="">
          <desc>The software appears to contain benign or useful functionality, but it also contains code that is hidden from normal operation that violates the intended security policy of the user or the system administrator.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-601" name="URL Redirection to Untrusted Site ('Open Redirect')" state="0" impact="100" issueId="">
          <desc>A web application accepts a user-controlled input that specifies a link to an external site, and uses that link in a Redirect. This simplifies phishing attacks.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-798" name="Use of Hard-coded Credentials" state="0" impact="100" issueId="">
          <desc>The software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-916" name="Use of Password Hash With Insufficient Computational Effort" state="0" impact="100" issueId="">
          <desc>The software generates a hash for a password, but it uses a scheme that does not provide a sufficient level of computational effort that would make password cracking attacks infeasible or expensive.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-521" name="Weak Password Requirements" state="0" impact="100" issueId="">
          <desc>The product does not require that users should have strong passwords, which makes it easier for attackers to compromise user accounts.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-123" name="Write-what-where Condition" state="0" impact="100" issueId="">
          <desc>Any condition where the attacker has the ability to write an arbitrary value to an arbitrary location, often as the result of a buffer overflow.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="enforce_auth_all_users_based_on_resp" name="Assets shall provide an authorization enforcement mechanism for all identified and authenticated users based on their assigned responsibilities." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. On all interfaces, the control system shall provide the capability to enforce authorizations assigned to all users (humans, software processes and devices) for controlling use of the control system to support segregation of duties and least privilege.
2. Authorization is granting of permissions based on authentication. 
3.All authorization decisions should be made on the server, not the client.  
4. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
5. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
6. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
7. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
8. Server side implementation and presentation layer representations of access control rules must match. 
9. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
10. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
11. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="auth_humans_tools_audit_logs" name="Assets shall provide the capability for authorized humans and/or tools to access audit logs on a read-only basis." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Access Control - Authorize members
2. Least Privilege &amp; Need to Know Basis
3. Review of access </desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="config_according_to_recommended_netw_and_security" name="Assets shall provide the capability to be configured according to recommended network and security configurations as described in guidelines provided by the asset supplier. The asset shall provide an interface to the currently deployed network and security configuration settings." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Devices with network connectivity are capable of being updated from the network.
2. provide the capability to generate a report listing the currently deployed security settings in a machine-readable format.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="continuous_monitor_accepted_sec" name="Assets shall provide the capability to be continuously monitored using commonly accepted security industry practices and recommendations to detect, characterize and report security breaches in a timely manner." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Control system monitoring capability can be achieved through a variety of tools and
techniques (for example, IDS, IPS, malicious code protection mechanisms and network monitoring mechanisms).
2. Monitoring devices should be strategically deployed within the control system (for example, at
selected perimeter locations and near server farms supporting critical applications) to collect
essential information. Monitoring mechanisms may also be deployed at ad hoc locations
within the control system to track specific transactions
3. SIEM Implementation</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="cap_to_be_recovered_to_known_secure_state" name="Assets shall provide the capability to be recovered and reconstituted to a known secure state after a disruption or failure." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Control system recovery and reconstitution to a known secure state means that all system
parameters (either default or configurable) are set to secure values, security-critical patches
are reinstalled, security-related configuration settings are reestablished, system documentation and operating procedures are available, application and system software is reinstalled and configured with secure settings, information from the most recent, known secure backups is loaded and the system is fully tested and functional.
1. Roll back procedure.
2. Secure storage of previous version</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_for_audit_records" name="Assets shall provide the capability to create timestamps (including date and time) for use in audit records." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Timestamps (including date and time) of audit records should be generated using internal
system clocks.
1. provide timestamps for use in audit record generation.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" name="Assets shall provide the capability to create timestamps that are synchronized with a system wide time source." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>to synchronize internal system clocks at a configurable frequency.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="explicit_read_auth_protect_conf_info" name="Assets shall provide the capability to erase all information, for which explicit read authorization is supported, from assets to be released from active service and/or decommissioned." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Removal of a control system component from active service should not provide the
opportunity for unintentional release of information for which explicit read authorization is
supported.
1. Information produced by the actions of a user or role (or the actions of a software process
acting on behalf of a user or role) should not be disclosed to a different user or role in an
uncontrolled fashion.
2. Purging of all information from volatile memory, active service or decommissioned system.
3. Ensure purging successfully occurs
NOTE Volatile memory resources are those that typically do not retain information after being released to memory management. However, there are attacks against random access memory (RAM) that have the potential to extract key material or other confidential data before it is actually over-written. Therefore, it is a commonly accepted practice to purge all unique data and connections to unique data from volatile shared memory when that memory is released back to the control system for use by a different user, such that this data is not visible or accessible to the new user.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="maintain_essential_functions" name="Assets shall provide the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>provide the capability to manage communication loads (such as
using rate limiting) to mitigate the effects of information flooding types of DoS events.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="support_auth_check_on_software_config" name="Assets shall provide the capability to perform or support authenticity checks on software, configuration and other information as well as the recording and reporting of the results of these checks or be integrated into a system that can perform or support authenticity checks." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Integrity verification methods are employed to detect, record, report and protect against software and information tampering.
1. cryptographic hashes
2. Notification of unauthorize changes
Integrity verification methods are employed to detect, record, report and protect against software and information tampering that may occur if other protection mechanisms (such as authorization enforcement) have been circumvented. The control system should employ formal or recommended integrity mechanisms (such as cryptographic hashes).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="integrity_check_software" name="Assets shall provide the capability to perform or support integrity checks on software, configuration and other information as well as the recording and reporting of the results of these checks or be integrated into a system that can perform or support integrity checks." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Integrity verification methods are employed to detect, record, report and protect against software and information tampering.
1. cryptographic hashes
2. Notification of unauthorize changes
Integrity verification methods are employed to detect, record, report and protect against software and information tampering that may occur if other protection mechanisms (such as authorization enforcement) have been circumvented. The control system should employ formal or recommended integrity mechanisms (such as cryptographic hashes).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_critical_long_lived_symmetric_keys" name="Assets shall provide the capability to protect critical, long lived symmetric keys via hardware mechanisms." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. establish the mutual trust using the symmetric key; store securely the shared secret (the authentication is valid as long as the shared secret remains secret); restrict access to the shared secret; ensure that the algorithms and keys used for the symmetric key authentication</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.16" supportedStandardRef="iec-62443-4-2:2019"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" name="Assets shall provide the capability to specifically restrict the use of unnecessary functions, ports, protocols and/or services." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc> 1. capability to specifically prohibit and/or restrict the use of unnecessary functions, ports, protocols and/or services.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_pw_policy_enforce" name="For assets utilizing password-based authentication, the asset shall provide the capability to enforce configurable password strength based on minimum length and variety of character types. " issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.
Note: A service should employ one or more tactics to prevent or at least slow down a brute force attack, including: blacklisting an IP after 5 unsuccessful attempts, slowing down attempts with increasing timeout delays introduced after 5 unsuccessful attempts, locking out non-admin accounts after 3 unsuccessful attempts.  The account must be disabled for a period of time sufficient to discourage brute force guessing of credentials, but not so long as to allow for a denial-of-service attack to be performed.  Allow non-admin users to reset their own passwords to prevent administrative burden.  If users are allowed to reset their password, best practice is to email a new password to the users email account and require a reset upon next logon.  It is not best practice to simply reset and display the new password on the authentication screen as an attacker may trigger that reset and change the password without notice to the user.  If using a screen reveal of password, should be accompanied by both a known secret of user, such as mothers maiden name and also an email to notify the user of such a change.  Temporary passwords and links should have a short expiration time.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_human_user_interface_determine_user_took_action" name="If an asset provides a human user interface, the asset shall provide the capability to determine whether a given human user took a particular action. Control elements that are not able to support such capability shall be listed in component documents." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Examples of particular actions taken by a user include performing operator actions, changing
control system configurations, creating information, sending a message, approving
information (such as indicating concurrence) and receiving a message.
1. digital signatures, digital message receipts and timestamps</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.14" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="terminate_remote_session_auto_or_manual" name="If an asset supports remote sessions, the asset shall provide the capability to terminate a remote session either automatically after a configurable time period of inactivity, manually by a local authority, or manually by the user (human, software process or device) who initiated the session." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Terminate a remote session either automatically after a configurable time period of inactivity, manually by a local authority, or manually by the user (human, software process or device) who initiated the session.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" name="If an asset supports usage through wireless interfaces it shall provide the capability to integrate into the asset that supports usage authorization, monitoring and restrictions according to commonly accepted industry practices." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>provide the capability to authorize, monitor and enforce usage restrictions for wireless connectivity to the control system.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="user_crypto_algs" name="If cryptography is required, the asset shall use cryptographic algorithms, key sizes and mechanisms for key establishment and management according to commonly accepted security industry practices and recommendations." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. document the practices and procedures relating to cryptographic key establishment and management.
2. utilize established and tested encryption and hash algorithms, such as the advanced
encryption standard (AES) and the secure hash algorithm (SHA) series, and key sizes based
on an assigned standard.
3. Key generation needs to be performed using an effective random number generator.
4. The security policies and procedures for key management need to address
periodic key changes, key destruction, key distribution and encryption key backup in
accordance with defined standards</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_auth_based_on_role_leas_priv" name="The asset shall provide authorization enforcement for all users based on their assigned responsibilities and least privilege" issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. enforce authorizations assigned to all human users.
2. Use control policies (for example, identity-based policies, role-based policies and rule-based policies) and associated read/write access enforcement mechanisms (for example, access control lists, access control matrices and cryptography).
2. check which roles are assigned to a verified user or asset and which privileges are assigned to these roles – if the requested operation is covered by the permissions, it is executed, otherwise rejected. Only qualified and authorized individuals should obtain the use of control system components for purposes of initiating changes, including upgrades and modifications. Authorization is granting of permissions based on authentication. 
3.All authorization decisions should be made on the server, not the client.  
4. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
5. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
6. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
7. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
8. Server side implementation and presentation layer representations of access control rules must match. 
9. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
10. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
11. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="role_to_define_and_modify_perm_mapping" name="The asset shall provide directly or through a compensating security mechanism, for an authorized role to define and modify the mapping of permissions to roles for all human users" issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>The control system shall provide the capability for an authorized user or role to define and
modify the mapping of permissions to roles for all human users.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_config_usage_restriction" name="The asset shall provide the capability to automatically enforce configurable usage restrictions" issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Authenticate &amp; Authorize devices before allowing connection.
2. Digital+E46 Signatures</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="deny_netw_traffic_allow_netw_traffic_exceptions" name="The asset shall provide the capability to deny network traffic by default and allow network traffic by exception (also termed deny all, permit by exception)." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>deny network traffic by default and allow network traffic by exception (also termed deny all, permit by exception).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="show_sys_use_notification" name="The asset shall provide the capability to display a system use notification message before authenticating. The system use notification message shall be configurable by authorized personnel." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. display a system use notification message or warning banners before authenticating &amp; configurable by authorized personnel.
2. Privacy and security policies and procedures need to be consistent with applicable laws,
directives, policies, regulations, standards and guidance.
3. Examples of elements for inclusion in the system use notification message are:
a) that the individual is accessing a specific control system;
b) that system usage may be monitored, recorded and subject to audit;
c) that unauthorized use of the system is prohibited and subject to criminal and/or civil
penalties; and
d) that use of the system indicates consent to monitoring and recording</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.14" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="employ_cypto_mechs_to_recognize_changes" name="The asset shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="employ_maware_protection" name="The asset shall provide the capability to employ malicious code protection mechanisms at all entry and exit points." issueId="" platform="" cost="0" risk="74" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>prevent, detect, mitigate and report instances of detected malicious code (for example, viruses, worms, Trojan horses and spyware) transported by electronic mail, electronic mail attachments, Internet access, removable media (for example, universal serial bus (USB) devices, diskettes or compact disks), PDF documents, web services, network connections and infected laptops or other
common means.
1. Detection Technique  - binary integrity and attributes monitoring, hashing and signature techniques.
2.Mitigation technique - file cleaning, quarantining, file deletion, host communication restriction and IPSs
3. Prevention Technique - application blacklisting and whitelisting techniques, removable media control, sandbox techniques and specific computing platforms mechanisms such as restricted firmware update capabilities, No Execute (NX) bit, data execution prevention (DEP), address space layout randomization (ASLR), stack corruption detection and mandatory access controls.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" name="The asset shall provide the capability to employ protection mechanisms to prevent, detect, report and mitigate the effects of malicious code or unauthorized software. The asset shall provide the capability to update the protection mechanisms." issueId="" platform="" cost="0" risk="74" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>prevent, detect, mitigate and report instances of detected malicious code (for example, viruses, worms, Trojan horses and spyware) transported by electronic mail, electronic mail attachments, Internet access, removable media (for example, universal serial bus (USB) devices, diskettes or compact disks), PDF documents, web services, network connections and infected laptops or other
common means.
1. Detection Technique  - binary integrity and attributes monitoring, hashing and signature techniques.
2.Mitigation technique - file cleaning, quarantining, file deletion, host communication restriction and IPSs
3. Prevention Technique - application blacklisting and whitelisting techniques, removable media control, sandbox techniques and specific computing platforms mechanisms such as restricted firmware update capabilities, No Execute (NX) bit, data execution prevention (DEP), address space layout randomization (ASLR), stack corruption detection and mandatory access controls.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="limit_invalid_attempts" name="The asset shall provide the capability to enforce a limit of a configurable number of consecutive invalid access attempts by any user (human, software process or device) during a configurable time period. The asset shall provide the capability to deny access for a specified period of time or until unlocked by an administrator when this limit has been exceeded." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. limit of a configurable number of consecutive invalid access attempts by any user (human, software process or device).
2. As per Policy.
3. For all invalid authentication attempts, the server should simply respond "invalid attempt, please retry" or similarly vague statement that does not imply partial success.  
Note: A service should employ one or more tactics to prevent or at least slow down a brute force attack, including: blacklisting an IP after 5 unsuccessful attempts, slowing down attempts with increasing timeout delays introduced after 5 unsuccessful attempts, locking out non-admin accounts after 3 unsuccessful attempts.  The account must be disabled for a period of time sufficient to discourage brute force guessing of credentials, but not so long as to allow for a denial-of-service attack to be performed.  Allow non-admin users to reset their own passwords to prevent administrative burden.  If users are allowed to reset their password, best practice is to email a new password to the users email account and require a reset upon next logon.  It is not best practice to simply reset and display the new password on the authentication screen as an attacker may trigger that reset and change the password without notice to the user.  If using a screen reveal of password, should be accompanied by both a known secret of user, such as mothers maiden name and also an email to notify the user of such a change.  Temporary passwords and links should have a short expiration time.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="restrict_mobile_code" name="The asset shall provide the capability to enforce usage restrictions for mobile code technologies based on the potential to cause damage to the asset." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Mobile code technologies include, but are not limited to, Java, JavaScript, ActiveX, portable
document format (PDF), Postscript, Shockwave movies, Flash animations and VBScript.
1. The control system shall provide the capability to enforce usage restrictions for mobile code technologies based on the potential to cause damage to the control system that include:
a) preventing the execution of mobile code;
b) requiring proper authentication and authorization for origin of the code;
c) restricting mobile code transfer to/from the control system; and
d) monitoring the use of mobile code.
2. verify integrity of the mobile code before allowing code execution with HASH/Codesigning technique.
3. both the selection and use of mobile code installed on servers and
mobile code downloaded and executed.
4. prevent the development, acquisition or introduction of unacceptable mobile code within the control system. For example, mobile code exchanges may be disallowed directly with the
control system, but may be allowed in a controlled adjacent environment.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" name="The asset shall provide the capability to generate audit records relevant to security for the following categories: access control, request errors, operating system events, asset events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Generate audit records relevant to security for the following categories: access control, request errors, operating system events, control system events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" name="The asset shall provide the capability to identify and authenticate all software processes and devices. This capability shall enforce such identification and authentication on all interfaces which provide access to the asset to support least privilege in accordance with applicable security policies and procedures." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. identity bound to the physical device
2. passwords, tokens or location (physical or logical)
3. role-based, group-based or entity-based,
4. Combination of 1) something you know (a secret) -like username and password; (2) something you have - such as a token device or smart phone; and (3) something you are - such as biometrics. 
5. Assign identifiers that uniquely identify users/devices
a. E.g., employ a unique username-password combination for the user
b. Reasoning: This will prevent user 1 from spoofing as user 2. This is a concern for users with different levels of access.
6. Uniquely identify and authenticate users and devices
c. Multi-factor authentication
d. Use of authentication protocols that require no password/multifactor authentication: e.g., OAuth, OpenID, SAML</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="logically_segment_control_system" name="The asset shall provide the capability to logically segment asset networks from non-asset networks and to logically segment critical asset networks from other asset networks." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Access from the control system to the World Wide Web should be clearly justified based on
control system operational requirements.
2. Logical Segmentation.
3. Physical Segmentation.
4. capability to provide network services to control system networks, critical or otherwise, without a connection to non-control system networks.
5. capability to logically and physically isolate critical control system networks from non-critical control system networks.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="mitigate_info_effects_flooding_types" name="The asset shall provide the capability to manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. boundary protection
2. restricting the information flow to be unidirectional outbound
3. manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events.
4. restrict the ability of all users (humans, software processes and devices) to cause DoS events which affect other control systems or networks.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="monitor_control_comms_zone_boundaries" name="The asset shall provide the capability to monitor and control communications at zone boundaries to enforce the compartmentalization defined in the risk-based zones and conduits model." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Any connections to external networks or other control systems should occur through managed
interfaces consisting of appropriate boundary protection devices (for example, proxies,
gateways, routers, firewalls, unidirectional gateways, guards and encrypted tunnels) arranged
in an effective architecture (for example, firewalls protecting application gateways residing in
a DMZ).
1. capability to deny network traffic by default and allow network traffic by exception (also termed deny all, permit by exception).
2. capability to prevent any communication through the control system boundary (also termed island mode).
3. The control system shall provide the capability to prevent any communication through the
control system boundary when there is an operational failure of the boundary protection
mechanisms (also termed fail close). This ‘fail close’ functionality shall be designed such that
it does not interfere with the operation of a SIS or other safety-related functions.
4. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="physically_segment_control_system" name="The asset shall provide the capability to physically segment asset networks from non-asset networks and to physically segment critical asset networks from non-critical asset networks." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="prevent_further_access_init_seslock" name="The asset shall provide the capability to prevent further access by initiating a session lock after a configurable time period of inactivity or by manual initiation. The session lock shall remain in effect until the human user who owns the session or another authorized human user re-establishes access using appropriate identification and authentication procedures." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. activate session lock mechanisms automatically after a configurable time period.
2. In some cases, session lock for control system operator workstations or nodes is not advised (for example, sessions which are required for immediate operator responses in emergency situations).
3. In situations where the control system cannot support session lock, the responsible entity should employ appropriate compensating countermeasures (for example, providing increased physical security, personnel security and auditing measures).
Note: Use the server or framework’s session management controls. The application should only recognize these session identifiers as valid. Session identifier creation must always be done on a trusted system (e.g., The server). Session management controls should use well vetted algorithms that ensure sufficiently random session identifiers. Set the domain and path for cookies containing authenticated session identifiers to an appropriately restricted value for the site. Logout functionality should fully terminate the associated session or connection. Logout functionality should be available from all pages protected by authorization. Establish a session inactivity timeout that is as short as possible, based on balancing risk and business functional requirements. In most cases it should be no more than several hours. Disallow persistent logins and enforce periodic session terminations, even when the session is active. Especially for applications supporting rich network connections or connecting to critical systems. Termination times should support business requirements and the user should receive sufficient notification to mitigate negative impacts. If a session was established before login, close that session and establish a new session after a successful login. Generate a new session identifier on any re-authentication. Do not allow concurrent logins with the same user ID. Supplement standard session management for sensitive server-side operations, like account management, by utilizing per-session strong random tokens or parameters. This method can be used to prevent Cross Site Request Forgery attacks. Supplement standard session management for highly sensitive or critical operations by utilizing per-request, as opposed to per-session, strong random tokens or parameters. Set the "secure" attribute for cookies transmitted over an TLS connection. Set cookies with the HttpOnly attribute, unless you specifically require client-side scripts within your application to read or set a cookie's value</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="prevent_general_purpose_person2person_msg" name="The asset shall provide the capability to prevent general purpose person-to-person messages from being received from users or systems external to the asset." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>General purpose person-to-person communications systems include but are not limited to:
email systems, forms of social media (Twitter, Facebook, picture galleries, etc.) or any
message systems that permit the transmission of any type of executable file.
1. restrictions and limiting data flow as described elsewhere in this standard to general purpose
person-to-person communication systems
2. restrict email or other messaging solutions that provide internal computer-to-external computer communications using outbound messages.
3. Users may not be given the ability to attach files or other information to these outbound-only messages at the time the messages are created by the system.
4. capability to prevent both transmission and receipt of general purpose person-to-person messages.
5. support partitioning of data, applications and services based on criticality to facilitate implementing a zoning model.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_integrity_transmitted_info" name="The asset shall provide the capability to protect the integrity of transmitted information." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_relevant_priv_keys" name="The asset shall provide the capability to protect the relevant private keys via hardware mechanisms according to commonly accepted security industry practices and recommendations." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Follow All below Steps:
l) validate certificates by checking the validity of the signature of a given certificate;
m) validate certificates by constructing a certification path to an accepted CA or in the case of
self-signed certificates by deploying leaf certificates to all hosts which communicate with
the subject to which the certificate is issued;
n) validate certificates by checking a given certificate’s revocation status;
o) establish user (human, software process or device) control of the corresponding private
key; and
p) map the authenticated identity to a user (human, software process or device).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.11" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="report_current_list_of_installed_assets" name="The asset shall provide the capability to report the current list of installed assets and their associated properties." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Usage of component ID, capability and revision level.
2. Formal process of configuration management should be deployed to keep control of the
changes in the component inventory baseline
3. The system requires all default passwords and pass phrases to be changed in order to complete the setup, prior to being operational.  This includes SSID passphrases, default accounts, admin accounts, etc.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_support_mgmt_id_by_user_group_role" name="The asset shall provide the capability to support the management of identifiers by user, group, role or asset interface." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Management of identifiers by group, role or  system interface.
2. Session ID, resource ID, secure cookie management policy.
3. On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.
NOTE: Use the server or framework’s session management controls. The application should only recognize these session identifiers as valid. Session identifier creation must always be done on a trusted system (e.g., The server). Session management controls should use well vetted algorithms that ensure sufficiently random session identifiers. Set the domain and path for cookies containing authenticated session identifiers to an appropriately restricted value for the site. Logout functionality should fully terminate the associated session or connection. Logout functionality should be available from all pages protected by authorization. Establish a session inactivity timeout that is as short as possible, based on balancing risk and business functional requirements. In most cases it should be no more than several hours. Disallow persistent logins and enforce periodic session terminations, even when the session is active. Especially for applications supporting rich network connections or connecting to critical systems. Termination times should support business requirements and the user should receive sufficient notification to mitigate negative impacts. If a session was established before login, close that session and establish a new session after a successful login. Generate a new session identifier on any re-authentication. Do not allow concurrent logins with the same user ID. Supplement standard session management for sensitive server-side operations, like account management, by utilizing per-session strong random tokens or parameters. This method can be used to prevent Cross Site Request Forgery attacks. Supplement standard session management for highly sensitive or critical operations by utilizing per-request, as opposed to per-session, strong random tokens or parameters. Set the "secure" attribute for cookies transmitted over an TLS connection. Set cookies with the HttpOnly attribute, unless you specifically require client-side scripts within your application to read or set a cookie's value
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="id_auth_all_users_engaged_in_wireless_comms" name="The controls system shall provide the capability to identify and authenticate all users (humans, software processes or devices) engaged in wireless communication." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Identification of Wireless technologies include, but are not limited to, microwave, satellite, packet radio, Institute of Electrical and Electronics Engineers (IEEE) 802.11x, IEEE 802.15.4 (ZigBee,IEC 62591 – WirelessHART®, ISA-100.11a), IEEE 802.15.1 (Bluetooth), wireless LAN mobile routers, mobile phones with tethering and various infrared technologies.
1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="uniquely_id_auth_all_users_engaged_in_wireless_comms" name="The controls system shall provide the capability to uniquely identify and authenticate all users (humans, software processes or devices) engaged in wireless communication." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Identification of Wireless technologies include, but are not limited to, microwave, satellite, packet radio, Institute of Electrical and Electronics Engineers (IEEE) 802.11x, IEEE 802.15.4 (ZigBee,IEC 62591 – WirelessHART®, ISA-100.11a), IEEE 802.15.1 (Bluetooth), wireless LAN mobile routers, mobile phones with tethering and various infrared technologies.
1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="obscure_auth_feedback" name="When an asset provides an authentication capability, the asset shall provide the capability to obscure feedback of authenticator information during the authentication process." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. obscure feedback of authentication information during the authentication process by displaying asterisks or other random characters when a human user types in a password obscures feedback of authentication information.
2. entry of wired equivalent privacy (WEP) keys, secure socket shell (SSH) token entry and
RSA one-time passwords.
3. not provide any hint as to the reason for the authentication failure, such as “unknown user name”.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.12" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="if_pki_can_use_best_practices" name="Where PKI is utilized, the asset shall provide the capability to operate a PKI according to commonly accepted best practices or obtain public key certificates from an existing PKI." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Obtain public key certificates from an existing PKI.
2. organization’s certificate policy
3. agency should issue public key certificates under an appropriate certificate policy or obtains public key certificates under an appropriate certificate policy from an approved service provider.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="common-sl2-cr1-10" name="SL2 - Common - CR1.10" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-10-adv_auth_feedback" name="An adversary receives authenticator feedback which helps him in user enumeration. E.g. invalid username. Invalid password." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-209">
                  <countermeasures>
                    <countermeasure ref="obscure_auth_feedback" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="obscure_auth_feedback" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-11" name="SL2 - Common - CR1.11" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-11-adv_bruteforce_auth_creds" name="And adversary can bruteforce authentication credentials" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-522">
                  <countermeasures>
                    <countermeasure ref="limit_invalid_attempts" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="limit_invalid_attempts" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-12" name="SL2 - Common - CR1.12" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-12-adv_no_motd" name="Adversaries who compromised the asset can dispute there was no message stating access was only for authorized personnel" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="show_sys_use_notification" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="show_sys_use_notification" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-14" name="SL2 - Common - CR1.14" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-14-rogue_employee_abuse_key" name="A rogue employee has unfettered access to a key and might use it for a malicious purpose or pass it onto someone else to the same end." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-322">
                  <countermeasures>
                    <countermeasure ref="protect_critical_long_lived_symmetric_keys" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_critical_long_lived_symmetric_keys" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-2" name="SL2 - Common - CR1.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-2-unid_sys_backdoor" name="Unidentified backdoor plugged in the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-2-unid_softw_arb_code_exec" name="Unidentified software that executes arbitrary code" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-123">
                  <countermeasures>
                    <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-4" name="SL2 - Common - CR1.4" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-4-adv_guess_trusted_id" name="An adversary guesses, obtains, or &quot;rides&quot; a trusted identifier (e.g. session ID, resource ID, cookie, etc.) to perform authorized actions under the guise of an authenticated user or service." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-384">
                  <countermeasures>
                    <countermeasure ref="provide_support_mgmt_id_by_user_group_role" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_support_mgmt_id_by_user_group_role" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-6" name="SL2 - Common - CR1.6" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-6-adv_rogue_dev_mitm" name="An adversary can plant a rogue device to perform man-in-the-middle attacks" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
                    <countermeasure ref="uniquely_id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
                <countermeasure ref="uniquely_id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-7" name="SL2 - Common - CR1.7" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-7-adv_bruteforce_pw" name="An adversary is able to brute force the password" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-307">
                  <countermeasures>
                    <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-7-adv_guess_pw" name="An adversary is able to guess the password based on identifying an authenticator" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-521">
                  <countermeasures>
                    <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-8" name="SL2 - Common - CR1.8" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-8-adv_imposter_signed" name=" An attacker generates a message or datablock that causes the recipient to believe that the message or datablock was generated and cryptographically signed by an authoritative or reputable source, misleading a victim or victim operating system into performing malicious actions" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-347">
                  <countermeasures>
                    <countermeasure ref="if_pki_can_use_best_practices" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="if_pki_can_use_best_practices" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-9" name="SL2 - Common - CR1.9" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-9-adv_gen_certificate" name="An adversary exploits a weakness resulting from using a hashing algorithm with weak collision resistance to generate a certificate signing request (CSR) that contains collision blocks in the &quot;to be signed&quot; part" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-916">
                  <countermeasures>
                    <countermeasure ref="protect_relevant_priv_keys" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_relevant_priv_keys" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-1" name="SL2 - Common - CR2.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-1-adv_connect_with_compromised_acc_make_changes" name="An adversary is able to connect to the asset with a compromised account and is able to make changes to all content available on the asset. (no roles)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_auth_all_users_based_on_resp" mitigation="34"/>
                    <countermeasure ref="enforce_auth_based_on_role_leas_priv" mitigation="33"/>
                    <countermeasure ref="role_to_define_and_modify_perm_mapping" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_auth_all_users_based_on_resp" mitigation="34"/>
                <countermeasure ref="enforce_auth_based_on_role_leas_priv" mitigation="33"/>
                <countermeasure ref="role_to_define_and_modify_perm_mapping" mitigation="33"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-11" name="SL2 - Common - CR2.11" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-11-an_adversary_compromises_a_system_without_knowing_when_he_compromised_it" name="An adversary compromises a system without knowing when he compromised it." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                    <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-12" name="SL2 - Common - CR2.12" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-12-an_adversary_compromised_the_system_not_knowing_from_where_he_compromised_the_system" name="An adversary compromised the asset, not knowing from where he compromised the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="provide_human_user_interface_determine_user_took_action" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_human_user_interface_determine_user_took_action" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-2" name="SL2 - Common - CR2.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-2-adv_wifi_access" name="An adversary is able to get access to the asset via wireless protocols without authorization" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-3" name="SL2 - Common - CR2.3" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-3-adv_portable_dev_access" name="An adversary can access the asset using a portable device" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_config_usage_restriction" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_config_usage_restriction" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-4" name="SL2 - Common - CR2.4" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-4-an_adversary_can_execute_remote_code" name="An adversary can execute remote code" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-94">
                  <countermeasures>
                    <countermeasure ref="restrict_mobile_code" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="restrict_mobile_code" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-5" name="SL2 - Common - CR2.5" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-5-an_adversary_can_perform_a_dos_attack_by_making_consecutive_authorization_requests" name="An adversary can perform a DoS attack by making consecutive authorization requests" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-307">
                  <countermeasures>
                    <countermeasure ref="prevent_further_access_init_seslock" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="prevent_further_access_init_seslock" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-6" name="SL2 - Common - CR2.6" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-6-an_adversary_could_have_maintained_a_stored_session" name="An adversary could have maintained a stored session. By doing so he keeps access to the asset with the role identified with that corresponding session." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-384">
                  <countermeasures>
                    <countermeasure ref="terminate_remote_session_auto_or_manual" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="terminate_remote_session_auto_or_manual" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-8" name="SL2 - Common - CR2.8" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-8-an_aversary_could_have_compromised_the_sytem_without_you_knowing" name="An adversary could have compromised the system without you knowing what part in the asset was compromised or how he compromised the asset " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-1" name="SL2 - Common - CR3.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-1-adv_intercept_netw_traffic" name="An adversary can intercept network traffic" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="25" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-5">
                  <countermeasures>
                    <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                    <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-2" name="SL2 - Common - CR3.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-2-adv_phishing_mail" name="An adversary sends a phishing mail with a trojan as email attachment" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-507">
                  <countermeasures>
                    <countermeasure ref="employ_maware_protection" mitigation="50"/>
                    <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="employ_maware_protection" mitigation="50"/>
                <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-4" name="SL2 - Common - CR3.4" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-4-adv_tamper_software" name="An adversary is able to tamper with software running on a system. On the asset no integrity check is in place." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-354">
                  <countermeasures>
                    <countermeasure ref="integrity_check_software" mitigation="50"/>
                    <countermeasure ref="support_auth_check_on_software_config" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="integrity_check_software" mitigation="50"/>
                <countermeasure ref="support_auth_check_on_software_config" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr4-2" name="SL2 - Common - CR4.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr4-adv_access_file_unpurged_dev" name="An adversary can access files through a device which was released from active service and which was not purged" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-672">
                  <countermeasures>
                    <countermeasure ref="explicit_read_auth_protect_conf_info" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="explicit_read_auth_protect_conf_info" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr4-3" name="SL2 - Common - CR4.3" desc="" library="iec62443">
          <threats>
            <threat ref="cr4-3-adv_break_alg_weak_encryption" name="When a weak encryption algorithm is used an adversary is capable of breaking the algorithm with standard available tools" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-326">
                  <countermeasures>
                    <countermeasure ref="user_crypto_algs" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="user_crypto_algs" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr5-1" name="SL2 - Common - CR5.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr5-1-network_segmentation_exploit" name="An adversary is able to hop between internal networks since they are not segregated" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="logically_segment_control_system" mitigation="50"/>
                    <countermeasure ref="physically_segment_control_system" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="logically_segment_control_system" mitigation="50"/>
                <countermeasure ref="physically_segment_control_system" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr5-2" name="SL2 - Common - CR5.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr5-2-lateralmovement_exploit" name="An adversary can complete lateral movement within the asset when no protection is set up" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="deny_netw_traffic_allow_netw_traffic_exceptions" mitigation="50"/>
                    <countermeasure ref="monitor_control_comms_zone_boundaries" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="deny_netw_traffic_allow_netw_traffic_exceptions" mitigation="50"/>
                <countermeasure ref="monitor_control_comms_zone_boundaries" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr5-3" name="SL2 - Common - CR5.3" desc="" library="iec62443">
          <threats>
            <threat ref="cr5-3-social_engineering_exploit" name="An adversary may introduce malware into the asset by phishing (email,facebook,...)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-601">
                  <countermeasures>
                    <countermeasure ref="prevent_general_purpose_person2person_msg" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="prevent_general_purpose_person2person_msg" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr6-1" name="SL2 - Common - CR6.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr6-1-audit_log_exploit" name="An adversary may compromise the asset and edit the logfiles with non root privileges" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-532">
                  <countermeasures>
                    <countermeasure ref="auth_humans_tools_audit_logs" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="auth_humans_tools_audit_logs" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr6-2" name="SL2 - Common - CR6.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr6-2-continuous_monitoring_exploit" name="An adversary compromises a system  without it being timely notified and detected by for example a IDS" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-693">
                  <countermeasures>
                    <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-1" name="SL2 - Common - CR7.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-1-dos_no_protect" name="Assets might lose the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event.&#10;" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-1100">
                  <countermeasures>
                    <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                    <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-4" name="SL2 - Common - CR7.4" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-4-no_usr_sys_info_backup" name="Assets might not regain their state (user- and system-level information) due to storage failure." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="50" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-636">
                  <countermeasures>
                    <countermeasure ref="cap_to_be_recovered_to_known_secure_state" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="cap_to_be_recovered_to_known_secure_state" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-6" name="SL2 - Common - CR7.6" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-6-unauth_access_default_creds" name="Unauthorized component access might occur as a result of not being able to change default access credentials" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-798">
                  <countermeasures>
                    <countermeasure ref="config_according_to_recommended_netw_and_security" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="config_according_to_recommended_netw_and_security" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-7" name="SL2 - Common - CR7.7" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-7-unauth_access_unnecessary_func" name="Unauthorized component access might occur as a result of not being able to restrict unnecessary functions, ports, protocols and/or services." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-8" name="SL2 - Common - CR7.8" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-8-rogue_assets" name="Rogue assets might enter the network as a result of not being able to verify component identities." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="a7cb19c0-22ee-4c37-9f88-d49079405f37" diagramComponentId="bf4258b4-71c8-41d7-8043-48c28a604dce" ref="a717994f-4cf5-4591-8a2b-e13da8c48558" name="Sensor - Meters" desc="" library="iec62443" parentComponentRef="" componentDefinitionRef="sensor-meters-valves">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="iec62443-sl2"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-300" name="Channel Accessible by Non-Endpoint ('Man-in-the-Middle')" state="0" impact="100" issueId="">
          <desc>The product does not adequately verify the identity of actors at both ends of a communication channel, or does not adequately ensure the integrity of the channel, in a way that allows the channel to be accessed or influenced by an actor that is not an endpoint.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-284" name="Improper Access Control" state="0" impact="100" issueId="">
          <desc>The software does not restrict or incorrectly restricts access to a resource from an unauthorized actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-79" name="Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')" state="0" impact="100" issueId="">
          <desc>The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-307" name="Improper Restriction of Excessive Authentication Attempts" state="0" impact="100" issueId="">
          <desc>The software does not implement sufficient measures to prevent multiple failed authentication attempts within in a short time frame, making it more susceptible to brute force attacks.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-732" name="Incorrect Permission Assignment for Critical Resource" state="0" impact="100" issueId="">
          <desc>The software specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-209" name="Information Exposure Through an Error Message" state="0" impact="100" issueId="">
          <desc>The software generates an error message that includes sensitive information about its environment, users, or associated data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-1100" name="Insufficient Isolation of System-Dependent Functions" state="0" impact="100" issueId="">
          <desc>The product or code does not isolate system-dependent
					functionality into separate stand-alone modules.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="">
          <desc>When a security-critical event occurs, the software either does not record the event or omits important details about the event when logging it.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-522" name="Insufficiently Protected Credentials" state="0" impact="100" issueId="">
          <desc>This weakness occurs when the application transmits or stores authentication credentials and uses an insecure method that is susceptible to unauthorized interception and/or retrieval.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-5" name="J2EE Misconfiguration: Data Transmission Without Encryption" state="0" impact="100" issueId="">
          <desc>Information sent over a network can be compromised while in transit. An attacker may be able to read or modify the contents if the data are sent in plaintext or are weakly encrypted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-311" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="">
          <desc>The software does not encrypt sensitive or critical information before storage or transmission.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-693" name="Protection Mechanism Failure" state="0" impact="100" issueId="">
          <desc>The product does not use or incorrectly uses a protection mechanism that provides sufficient defence against directed attacks against the product.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-521" name="Weak Password Requirements" state="0" impact="100" issueId="">
          <desc>The product does not require that users should have strong passwords, which makes it easier for attackers to compromise user accounts.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="protect_audit_info_logs_tools" name="Assets shall protect audit information, audit logs, and audit tools (if present) from unauthorized access, modification and deletion." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. the storage of audit information to hardware-enforced write-once media.
2. Access Management Process</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.11" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_auth_all_users_based_on_resp" name="Assets shall provide an authorization enforcement mechanism for all identified and authenticated users based on their assigned responsibilities." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. On all interfaces, the control system shall provide the capability to enforce authorizations assigned to all users (humans, software processes and devices) for controlling use of the control system to support segregation of duties and least privilege.
2. Authorization is granting of permissions based on authentication. 
3.All authorization decisions should be made on the server, not the client.  
4. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
5. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
6. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
7. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
8. Server side implementation and presentation layer representations of access control rules must match. 
9. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
10. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
11. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="continuous_monitor_accepted_sec" name="Assets shall provide the capability to be continuously monitored using commonly accepted security industry practices and recommendations to detect, characterize and report security breaches in a timely manner." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Control system monitoring capability can be achieved through a variety of tools and
techniques (for example, IDS, IPS, malicious code protection mechanisms and network monitoring mechanisms).
2. Monitoring devices should be strategically deployed within the control system (for example, at
selected perimeter locations and near server farms supporting critical applications) to collect
essential information. Monitoring mechanisms may also be deployed at ad hoc locations
within the control system to track specific transactions
3. SIEM Implementation</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_for_audit_records" name="Assets shall provide the capability to create timestamps (including date and time) for use in audit records." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Timestamps (including date and time) of audit records should be generated using internal
system clocks.
1. provide timestamps for use in audit record generation.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" name="Assets shall provide the capability to create timestamps that are synchronized with a system wide time source." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>to synchronize internal system clocks at a configurable frequency.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="maintain_essential_functions" name="Assets shall provide the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>provide the capability to manage communication loads (such as
using rate limiting) to mitigate the effects of information flooding types of DoS events.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" name="Assets shall provide the capability to specifically restrict the use of unnecessary functions, ports, protocols and/or services." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc> 1. capability to specifically prohibit and/or restrict the use of unnecessary functions, ports, protocols and/or services.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="validate_syntax_length_content_of_any_input" name="Assets shall validate the syntax, length and content of any input data that is used as an industrial process control input or input via external interfaces that directly impacts the action of the asset." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. input data validation include out-of-range values for a defined field type, invalid characters in data fields, missing or incomplete data and buffer overflow.
2. SAST &amp; DAST
3. Data from external sources are sanitized based on acceptable formats and lengths.  It is preferred to use white listing, over black listing.
4. Data is validated when crossing API boundaries</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_pw_policy_enforce" name="For assets utilizing password-based authentication, the asset shall provide the capability to enforce configurable password strength based on minimum length and variety of character types. " issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.
Note: A service should employ one or more tactics to prevent or at least slow down a brute force attack, including: blacklisting an IP after 5 unsuccessful attempts, slowing down attempts with increasing timeout delays introduced after 5 unsuccessful attempts, locking out non-admin accounts after 3 unsuccessful attempts.  The account must be disabled for a period of time sufficient to discourage brute force guessing of credentials, but not so long as to allow for a denial-of-service attack to be performed.  Allow non-admin users to reset their own passwords to prevent administrative burden.  If users are allowed to reset their password, best practice is to email a new password to the users email account and require a reset upon next logon.  It is not best practice to simply reset and display the new password on the authentication screen as an attacker may trigger that reset and change the password without notice to the user.  If using a screen reveal of password, should be accompanied by both a known secret of user, such as mothers maiden name and also an email to notify the user of such a change.  Temporary passwords and links should have a short expiration time.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_human_user_interface_determine_user_took_action" name="If an asset provides a human user interface, the asset shall provide the capability to determine whether a given human user took a particular action. Control elements that are not able to support such capability shall be listed in component documents." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Examples of particular actions taken by a user include performing operator actions, changing
control system configurations, creating information, sending a message, approving
information (such as indicating concurrence) and receiving a message.
1. digital signatures, digital message receipts and timestamps</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.14" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" name="If an asset supports usage through wireless interfaces it shall provide the capability to integrate into the asset that supports usage authorization, monitoring and restrictions according to commonly accepted industry practices." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>provide the capability to authorize, monitor and enforce usage restrictions for wireless connectivity to the control system.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="id_and_handle_error_conditions" name="The asset shall identify and handle error conditions in a manner such that effective remediation can occur. This shall be done in a manner which does not provide information that could be exploited by adversaries to attack the IACS unless revealing this information is necessary for the timely troubleshooting of problems." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Error messages generated by the control system should provide timely and useful information without revealing potentially harmful information.
2. Vulnerability Assessment &amp; Penetration Testing</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_auth_based_on_role_leas_priv" name="The asset shall provide authorization enforcement for all users based on their assigned responsibilities and least privilege" issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. enforce authorizations assigned to all human users.
2. Use control policies (for example, identity-based policies, role-based policies and rule-based policies) and associated read/write access enforcement mechanisms (for example, access control lists, access control matrices and cryptography).
2. check which roles are assigned to a verified user or asset and which privileges are assigned to these roles – if the requested operation is covered by the permissions, it is executed, otherwise rejected. Only qualified and authorized individuals should obtain the use of control system components for purposes of initiating changes, including upgrades and modifications. Authorization is granting of permissions based on authentication. 
3.All authorization decisions should be made on the server, not the client.  
4. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
5. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
6. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
7. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
8. Server side implementation and presentation layer representations of access control rules must match. 
9. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
10. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
11. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="role_to_define_and_modify_perm_mapping" name="The asset shall provide directly or through a compensating security mechanism, for an authorized role to define and modify the mapping of permissions to roles for all human users" issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>The control system shall provide the capability for an authorized user or role to define and
modify the mapping of permissions to roles for all human users.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_config_usage_restriction" name="The asset shall provide the capability to automatically enforce configurable usage restrictions" issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Authenticate &amp; Authorize devices before allowing connection.
2. Digital+E46 Signatures</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="employ_cypto_mechs_to_recognize_changes" name="The asset shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="limit_invalid_attempts" name="The asset shall provide the capability to enforce a limit of a configurable number of consecutive invalid access attempts by any user (human, software process or device) during a configurable time period. The asset shall provide the capability to deny access for a specified period of time or until unlocked by an administrator when this limit has been exceeded." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. limit of a configurable number of consecutive invalid access attempts by any user (human, software process or device).
2. As per Policy.
3. For all invalid authentication attempts, the server should simply respond "invalid attempt, please retry" or similarly vague statement that does not imply partial success.  
Note: A service should employ one or more tactics to prevent or at least slow down a brute force attack, including: blacklisting an IP after 5 unsuccessful attempts, slowing down attempts with increasing timeout delays introduced after 5 unsuccessful attempts, locking out non-admin accounts after 3 unsuccessful attempts.  The account must be disabled for a period of time sufficient to discourage brute force guessing of credentials, but not so long as to allow for a denial-of-service attack to be performed.  Allow non-admin users to reset their own passwords to prevent administrative burden.  If users are allowed to reset their password, best practice is to email a new password to the users email account and require a reset upon next logon.  It is not best practice to simply reset and display the new password on the authentication screen as an attacker may trigger that reset and change the password without notice to the user.  If using a screen reveal of password, should be accompanied by both a known secret of user, such as mothers maiden name and also an email to notify the user of such a change.  Temporary passwords and links should have a short expiration time.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" name="The asset shall provide the capability to generate audit records relevant to security for the following categories: access control, request errors, operating system events, asset events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Generate audit records relevant to security for the following categories: access control, request errors, operating system events, control system events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="logically_segment_control_system" name="The asset shall provide the capability to logically segment asset networks from non-asset networks and to logically segment critical asset networks from other asset networks." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Access from the control system to the World Wide Web should be clearly justified based on
control system operational requirements.
2. Logical Segmentation.
3. Physical Segmentation.
4. capability to provide network services to control system networks, critical or otherwise, without a connection to non-control system networks.
5. capability to logically and physically isolate critical control system networks from non-critical control system networks.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="mitigate_info_effects_flooding_types" name="The asset shall provide the capability to manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. boundary protection
2. restricting the information flow to be unidirectional outbound
3. manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events.
4. restrict the ability of all users (humans, software processes and devices) to cause DoS events which affect other control systems or networks.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="physically_segment_control_system" name="The asset shall provide the capability to physically segment asset networks from non-asset networks and to physically segment critical asset networks from non-critical asset networks." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="prevent_further_access_init_seslock" name="The asset shall provide the capability to prevent further access by initiating a session lock after a configurable time period of inactivity or by manual initiation. The session lock shall remain in effect until the human user who owns the session or another authorized human user re-establishes access using appropriate identification and authentication procedures." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. activate session lock mechanisms automatically after a configurable time period.
2. In some cases, session lock for control system operator workstations or nodes is not advised (for example, sessions which are required for immediate operator responses in emergency situations).
3. In situations where the control system cannot support session lock, the responsible entity should employ appropriate compensating countermeasures (for example, providing increased physical security, personnel security and auditing measures).
Note: Use the server or framework’s session management controls. The application should only recognize these session identifiers as valid. Session identifier creation must always be done on a trusted system (e.g., The server). Session management controls should use well vetted algorithms that ensure sufficiently random session identifiers. Set the domain and path for cookies containing authenticated session identifiers to an appropriately restricted value for the site. Logout functionality should fully terminate the associated session or connection. Logout functionality should be available from all pages protected by authorization. Establish a session inactivity timeout that is as short as possible, based on balancing risk and business functional requirements. In most cases it should be no more than several hours. Disallow persistent logins and enforce periodic session terminations, even when the session is active. Especially for applications supporting rich network connections or connecting to critical systems. Termination times should support business requirements and the user should receive sufficient notification to mitigate negative impacts. If a session was established before login, close that session and establish a new session after a successful login. Generate a new session identifier on any re-authentication. Do not allow concurrent logins with the same user ID. Supplement standard session management for sensitive server-side operations, like account management, by utilizing per-session strong random tokens or parameters. This method can be used to prevent Cross Site Request Forgery attacks. Supplement standard session management for highly sensitive or critical operations by utilizing per-request, as opposed to per-session, strong random tokens or parameters. Set the "secure" attribute for cookies transmitted over an TLS connection. Set cookies with the HttpOnly attribute, unless you specifically require client-side scripts within your application to read or set a cookie's value</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_conf_of_info_traversing_netw" name="The asset shall provide the capability to protect the confidentiality of information at rest and remote access sessions traversing an untrusted network." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_conf_of_info_at_rest_remote_access" name="The asset shall provide the capability to protect the confidentiality of information for which explicit read authorization is supported, whether at rest or in transit." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. physical means, compartmentalization or encryption.
2. configuring explicit read authorizations in the control system.
3. Digital Certificates.
4. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_integrity_transmitted_info" name="The asset shall provide the capability to protect the integrity of transmitted information." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="report_current_list_of_installed_assets" name="The asset shall provide the capability to report the current list of installed assets and their associated properties." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Usage of component ID, capability and revision level.
2. Formal process of configuration management should be deployed to keep control of the
changes in the component inventory baseline
3. The system requires all default passwords and pass phrases to be changed in order to complete the setup, prior to being operational.  This includes SSID passphrases, default accounts, admin accounts, etc.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="switch_to_and_from_emergency_power_supply" name="The asset shall provide the capability to switch to and from an emergency power supply without affecting the existing security state or a documented degraded mode. " issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>There may be instances where compensating countermeasures such as physical door access
control or control system may be affected by loss of base power supply, in which case the emergency power supply should cover those associated systems.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="common-sl2-cr1-11" name="SL2 - Common - CR1.11" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-11-adv_bruteforce_auth_creds" name="And adversary can bruteforce authentication credentials" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-522">
                  <countermeasures>
                    <countermeasure ref="limit_invalid_attempts" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="limit_invalid_attempts" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-7" name="SL2 - Common - CR1.7" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-7-adv_bruteforce_pw" name="An adversary is able to brute force the password" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-307">
                  <countermeasures>
                    <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-7-adv_guess_pw" name="An adversary is able to guess the password based on identifying an authenticator" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-521">
                  <countermeasures>
                    <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-1" name="SL2 - Common - CR2.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-1-adv_connect_with_compromised_acc_make_changes" name="An adversary is able to connect to the asset with a compromised account and is able to make changes to all content available on the asset. (no roles)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_auth_all_users_based_on_resp" mitigation="34"/>
                    <countermeasure ref="enforce_auth_based_on_role_leas_priv" mitigation="33"/>
                    <countermeasure ref="role_to_define_and_modify_perm_mapping" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_auth_all_users_based_on_resp" mitigation="34"/>
                <countermeasure ref="enforce_auth_based_on_role_leas_priv" mitigation="33"/>
                <countermeasure ref="role_to_define_and_modify_perm_mapping" mitigation="33"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-11" name="SL2 - Common - CR2.11" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-11-an_adversary_compromises_a_system_without_knowing_when_he_compromised_it" name="An adversary compromises a system without knowing when he compromised it." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                    <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-12" name="SL2 - Common - CR2.12" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-12-an_adversary_compromised_the_system_not_knowing_from_where_he_compromised_the_system" name="An adversary compromised the asset, not knowing from where he compromised the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="provide_human_user_interface_determine_user_took_action" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_human_user_interface_determine_user_took_action" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-2" name="SL2 - Common - CR2.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-2-adv_wifi_access" name="An adversary is able to get access to the asset via wireless protocols without authorization" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-3" name="SL2 - Common - CR2.3" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-3-adv_portable_dev_access" name="An adversary can access the asset using a portable device" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_config_usage_restriction" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_config_usage_restriction" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-5" name="SL2 - Common - CR2.5" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-5-an_adversary_can_perform_a_dos_attack_by_making_consecutive_authorization_requests" name="An adversary can perform a DoS attack by making consecutive authorization requests" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-307">
                  <countermeasures>
                    <countermeasure ref="prevent_further_access_init_seslock" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="prevent_further_access_init_seslock" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-8" name="SL2 - Common - CR2.8" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-8-an_aversary_could_have_compromised_the_sytem_without_you_knowing" name="An adversary could have compromised the system without you knowing what part in the asset was compromised or how he compromised the asset " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-1" name="SL2 - Common - CR3.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-1-adv_intercept_netw_traffic" name="An adversary can intercept network traffic" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="25" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-5">
                  <countermeasures>
                    <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                    <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-5" name="SL2 - Common - CR3.5" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-5-adv_xss" name="An adversary can perform cross site scripting when input is not validated" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-79">
                  <countermeasures>
                    <countermeasure ref="validate_syntax_length_content_of_any_input" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="validate_syntax_length_content_of_any_input" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-7" name="SL2 - Common - CR3.7" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-7-adv_disclose_info_via_error_msg" name="An adversary can use error messages that contain too much information, such as stack traces, to discover vulnerabilities in the running service." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-209">
                  <countermeasures>
                    <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-9" name="SL2 - Common - CR3.9" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-9-adv_delete_audit_records_after_breach" name="An adversary is able to delete audit records after a system breach which can make investigations very difficult  " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-732">
                  <countermeasures>
                    <countermeasure ref="protect_audit_info_logs_tools" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_audit_info_logs_tools" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr4-1" name="SL2 - Common - CR4.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr4-1-adv_intercept_unecrypted_file_in_transit" name="An adversary is able to intercept an unencrypted file in transit" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="protect_conf_of_info_at_rest_remote_access" mitigation="50"/>
                    <countermeasure ref="protect_conf_of_info_traversing_netw" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_conf_of_info_at_rest_remote_access" mitigation="50"/>
                <countermeasure ref="protect_conf_of_info_traversing_netw" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr5-1" name="SL2 - Common - CR5.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr5-1-network_segmentation_exploit" name="An adversary is able to hop between internal networks since they are not segregated" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="logically_segment_control_system" mitigation="50"/>
                    <countermeasure ref="physically_segment_control_system" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="logically_segment_control_system" mitigation="50"/>
                <countermeasure ref="physically_segment_control_system" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr6-2" name="SL2 - Common - CR6.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr6-2-continuous_monitoring_exploit" name="An adversary compromises a system  without it being timely notified and detected by for example a IDS" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-693">
                  <countermeasures>
                    <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-1" name="SL2 - Common - CR7.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-1-dos_no_protect" name="Assets might lose the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event.&#10;" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-1100">
                  <countermeasures>
                    <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                    <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-5" name="SL2 - Common - CR7.5" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-5-emergency_power" name="An adversary can cause a power outage of a security system which will give an adversary to compromise the asset." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="switch_to_and_from_emergency_power_supply" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="switch_to_and_from_emergency_power_supply" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-7" name="SL2 - Common - CR7.7" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-7-unauth_access_unnecessary_func" name="Unauthorized component access might occur as a result of not being able to restrict unnecessary functions, ports, protocols and/or services." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-8" name="SL2 - Common - CR7.8" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-8-rogue_assets" name="Rogue assets might enter the network as a result of not being able to verify component identities." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="6728499a-6bad-44d5-a78b-0356127f5ed5" diagramComponentId="67570389-4a6a-49b3-98df-9b70a70fcef2" ref="03fa4983-ee16-4367-8393-0d31900bc300" name="Sensor" desc="" library="iec62443" parentComponentRef="" componentDefinitionRef="sensor-meters-valves">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="iec62443-sl2"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-300" name="Channel Accessible by Non-Endpoint ('Man-in-the-Middle')" state="0" impact="100" issueId="">
          <desc>The product does not adequately verify the identity of actors at both ends of a communication channel, or does not adequately ensure the integrity of the channel, in a way that allows the channel to be accessed or influenced by an actor that is not an endpoint.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-284" name="Improper Access Control" state="0" impact="100" issueId="">
          <desc>The software does not restrict or incorrectly restricts access to a resource from an unauthorized actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-79" name="Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')" state="0" impact="100" issueId="">
          <desc>The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-307" name="Improper Restriction of Excessive Authentication Attempts" state="0" impact="100" issueId="">
          <desc>The software does not implement sufficient measures to prevent multiple failed authentication attempts within in a short time frame, making it more susceptible to brute force attacks.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-732" name="Incorrect Permission Assignment for Critical Resource" state="0" impact="100" issueId="">
          <desc>The software specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-209" name="Information Exposure Through an Error Message" state="0" impact="100" issueId="">
          <desc>The software generates an error message that includes sensitive information about its environment, users, or associated data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-1100" name="Insufficient Isolation of System-Dependent Functions" state="0" impact="100" issueId="">
          <desc>The product or code does not isolate system-dependent
					functionality into separate stand-alone modules.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="">
          <desc>When a security-critical event occurs, the software either does not record the event or omits important details about the event when logging it.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-522" name="Insufficiently Protected Credentials" state="0" impact="100" issueId="">
          <desc>This weakness occurs when the application transmits or stores authentication credentials and uses an insecure method that is susceptible to unauthorized interception and/or retrieval.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-5" name="J2EE Misconfiguration: Data Transmission Without Encryption" state="0" impact="100" issueId="">
          <desc>Information sent over a network can be compromised while in transit. An attacker may be able to read or modify the contents if the data are sent in plaintext or are weakly encrypted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-311" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="">
          <desc>The software does not encrypt sensitive or critical information before storage or transmission.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-693" name="Protection Mechanism Failure" state="0" impact="100" issueId="">
          <desc>The product does not use or incorrectly uses a protection mechanism that provides sufficient defence against directed attacks against the product.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-521" name="Weak Password Requirements" state="0" impact="100" issueId="">
          <desc>The product does not require that users should have strong passwords, which makes it easier for attackers to compromise user accounts.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="protect_audit_info_logs_tools" name="Assets shall protect audit information, audit logs, and audit tools (if present) from unauthorized access, modification and deletion." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. the storage of audit information to hardware-enforced write-once media.
2. Access Management Process</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.11" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_auth_all_users_based_on_resp" name="Assets shall provide an authorization enforcement mechanism for all identified and authenticated users based on their assigned responsibilities." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. On all interfaces, the control system shall provide the capability to enforce authorizations assigned to all users (humans, software processes and devices) for controlling use of the control system to support segregation of duties and least privilege.
2. Authorization is granting of permissions based on authentication. 
3.All authorization decisions should be made on the server, not the client.  
4. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
5. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
6. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
7. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
8. Server side implementation and presentation layer representations of access control rules must match. 
9. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
10. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
11. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="continuous_monitor_accepted_sec" name="Assets shall provide the capability to be continuously monitored using commonly accepted security industry practices and recommendations to detect, characterize and report security breaches in a timely manner." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Control system monitoring capability can be achieved through a variety of tools and
techniques (for example, IDS, IPS, malicious code protection mechanisms and network monitoring mechanisms).
2. Monitoring devices should be strategically deployed within the control system (for example, at
selected perimeter locations and near server farms supporting critical applications) to collect
essential information. Monitoring mechanisms may also be deployed at ad hoc locations
within the control system to track specific transactions
3. SIEM Implementation</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_for_audit_records" name="Assets shall provide the capability to create timestamps (including date and time) for use in audit records." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Timestamps (including date and time) of audit records should be generated using internal
system clocks.
1. provide timestamps for use in audit record generation.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" name="Assets shall provide the capability to create timestamps that are synchronized with a system wide time source." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>to synchronize internal system clocks at a configurable frequency.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="maintain_essential_functions" name="Assets shall provide the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>provide the capability to manage communication loads (such as
using rate limiting) to mitigate the effects of information flooding types of DoS events.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" name="Assets shall provide the capability to specifically restrict the use of unnecessary functions, ports, protocols and/or services." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc> 1. capability to specifically prohibit and/or restrict the use of unnecessary functions, ports, protocols and/or services.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="validate_syntax_length_content_of_any_input" name="Assets shall validate the syntax, length and content of any input data that is used as an industrial process control input or input via external interfaces that directly impacts the action of the asset." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. input data validation include out-of-range values for a defined field type, invalid characters in data fields, missing or incomplete data and buffer overflow.
2. SAST &amp; DAST
3. Data from external sources are sanitized based on acceptable formats and lengths.  It is preferred to use white listing, over black listing.
4. Data is validated when crossing API boundaries</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_pw_policy_enforce" name="For assets utilizing password-based authentication, the asset shall provide the capability to enforce configurable password strength based on minimum length and variety of character types. " issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.
Note: A service should employ one or more tactics to prevent or at least slow down a brute force attack, including: blacklisting an IP after 5 unsuccessful attempts, slowing down attempts with increasing timeout delays introduced after 5 unsuccessful attempts, locking out non-admin accounts after 3 unsuccessful attempts.  The account must be disabled for a period of time sufficient to discourage brute force guessing of credentials, but not so long as to allow for a denial-of-service attack to be performed.  Allow non-admin users to reset their own passwords to prevent administrative burden.  If users are allowed to reset their password, best practice is to email a new password to the users email account and require a reset upon next logon.  It is not best practice to simply reset and display the new password on the authentication screen as an attacker may trigger that reset and change the password without notice to the user.  If using a screen reveal of password, should be accompanied by both a known secret of user, such as mothers maiden name and also an email to notify the user of such a change.  Temporary passwords and links should have a short expiration time.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_human_user_interface_determine_user_took_action" name="If an asset provides a human user interface, the asset shall provide the capability to determine whether a given human user took a particular action. Control elements that are not able to support such capability shall be listed in component documents." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Examples of particular actions taken by a user include performing operator actions, changing
control system configurations, creating information, sending a message, approving
information (such as indicating concurrence) and receiving a message.
1. digital signatures, digital message receipts and timestamps</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.14" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" name="If an asset supports usage through wireless interfaces it shall provide the capability to integrate into the asset that supports usage authorization, monitoring and restrictions according to commonly accepted industry practices." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>provide the capability to authorize, monitor and enforce usage restrictions for wireless connectivity to the control system.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="id_and_handle_error_conditions" name="The asset shall identify and handle error conditions in a manner such that effective remediation can occur. This shall be done in a manner which does not provide information that could be exploited by adversaries to attack the IACS unless revealing this information is necessary for the timely troubleshooting of problems." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Error messages generated by the control system should provide timely and useful information without revealing potentially harmful information.
2. Vulnerability Assessment &amp; Penetration Testing</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_auth_based_on_role_leas_priv" name="The asset shall provide authorization enforcement for all users based on their assigned responsibilities and least privilege" issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. enforce authorizations assigned to all human users.
2. Use control policies (for example, identity-based policies, role-based policies and rule-based policies) and associated read/write access enforcement mechanisms (for example, access control lists, access control matrices and cryptography).
2. check which roles are assigned to a verified user or asset and which privileges are assigned to these roles – if the requested operation is covered by the permissions, it is executed, otherwise rejected. Only qualified and authorized individuals should obtain the use of control system components for purposes of initiating changes, including upgrades and modifications. Authorization is granting of permissions based on authentication. 
3.All authorization decisions should be made on the server, not the client.  
4. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
5. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
6. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
7. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
8. Server side implementation and presentation layer representations of access control rules must match. 
9. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
10. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
11. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="role_to_define_and_modify_perm_mapping" name="The asset shall provide directly or through a compensating security mechanism, for an authorized role to define and modify the mapping of permissions to roles for all human users" issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>The control system shall provide the capability for an authorized user or role to define and
modify the mapping of permissions to roles for all human users.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_config_usage_restriction" name="The asset shall provide the capability to automatically enforce configurable usage restrictions" issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Authenticate &amp; Authorize devices before allowing connection.
2. Digital+E46 Signatures</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="employ_cypto_mechs_to_recognize_changes" name="The asset shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="limit_invalid_attempts" name="The asset shall provide the capability to enforce a limit of a configurable number of consecutive invalid access attempts by any user (human, software process or device) during a configurable time period. The asset shall provide the capability to deny access for a specified period of time or until unlocked by an administrator when this limit has been exceeded." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. limit of a configurable number of consecutive invalid access attempts by any user (human, software process or device).
2. As per Policy.
3. For all invalid authentication attempts, the server should simply respond "invalid attempt, please retry" or similarly vague statement that does not imply partial success.  
Note: A service should employ one or more tactics to prevent or at least slow down a brute force attack, including: blacklisting an IP after 5 unsuccessful attempts, slowing down attempts with increasing timeout delays introduced after 5 unsuccessful attempts, locking out non-admin accounts after 3 unsuccessful attempts.  The account must be disabled for a period of time sufficient to discourage brute force guessing of credentials, but not so long as to allow for a denial-of-service attack to be performed.  Allow non-admin users to reset their own passwords to prevent administrative burden.  If users are allowed to reset their password, best practice is to email a new password to the users email account and require a reset upon next logon.  It is not best practice to simply reset and display the new password on the authentication screen as an attacker may trigger that reset and change the password without notice to the user.  If using a screen reveal of password, should be accompanied by both a known secret of user, such as mothers maiden name and also an email to notify the user of such a change.  Temporary passwords and links should have a short expiration time.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" name="The asset shall provide the capability to generate audit records relevant to security for the following categories: access control, request errors, operating system events, asset events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Generate audit records relevant to security for the following categories: access control, request errors, operating system events, control system events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="logically_segment_control_system" name="The asset shall provide the capability to logically segment asset networks from non-asset networks and to logically segment critical asset networks from other asset networks." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Access from the control system to the World Wide Web should be clearly justified based on
control system operational requirements.
2. Logical Segmentation.
3. Physical Segmentation.
4. capability to provide network services to control system networks, critical or otherwise, without a connection to non-control system networks.
5. capability to logically and physically isolate critical control system networks from non-critical control system networks.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="mitigate_info_effects_flooding_types" name="The asset shall provide the capability to manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. boundary protection
2. restricting the information flow to be unidirectional outbound
3. manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events.
4. restrict the ability of all users (humans, software processes and devices) to cause DoS events which affect other control systems or networks.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="physically_segment_control_system" name="The asset shall provide the capability to physically segment asset networks from non-asset networks and to physically segment critical asset networks from non-critical asset networks." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="prevent_further_access_init_seslock" name="The asset shall provide the capability to prevent further access by initiating a session lock after a configurable time period of inactivity or by manual initiation. The session lock shall remain in effect until the human user who owns the session or another authorized human user re-establishes access using appropriate identification and authentication procedures." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. activate session lock mechanisms automatically after a configurable time period.
2. In some cases, session lock for control system operator workstations or nodes is not advised (for example, sessions which are required for immediate operator responses in emergency situations).
3. In situations where the control system cannot support session lock, the responsible entity should employ appropriate compensating countermeasures (for example, providing increased physical security, personnel security and auditing measures).
Note: Use the server or framework’s session management controls. The application should only recognize these session identifiers as valid. Session identifier creation must always be done on a trusted system (e.g., The server). Session management controls should use well vetted algorithms that ensure sufficiently random session identifiers. Set the domain and path for cookies containing authenticated session identifiers to an appropriately restricted value for the site. Logout functionality should fully terminate the associated session or connection. Logout functionality should be available from all pages protected by authorization. Establish a session inactivity timeout that is as short as possible, based on balancing risk and business functional requirements. In most cases it should be no more than several hours. Disallow persistent logins and enforce periodic session terminations, even when the session is active. Especially for applications supporting rich network connections or connecting to critical systems. Termination times should support business requirements and the user should receive sufficient notification to mitigate negative impacts. If a session was established before login, close that session and establish a new session after a successful login. Generate a new session identifier on any re-authentication. Do not allow concurrent logins with the same user ID. Supplement standard session management for sensitive server-side operations, like account management, by utilizing per-session strong random tokens or parameters. This method can be used to prevent Cross Site Request Forgery attacks. Supplement standard session management for highly sensitive or critical operations by utilizing per-request, as opposed to per-session, strong random tokens or parameters. Set the "secure" attribute for cookies transmitted over an TLS connection. Set cookies with the HttpOnly attribute, unless you specifically require client-side scripts within your application to read or set a cookie's value</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_conf_of_info_traversing_netw" name="The asset shall provide the capability to protect the confidentiality of information at rest and remote access sessions traversing an untrusted network." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_conf_of_info_at_rest_remote_access" name="The asset shall provide the capability to protect the confidentiality of information for which explicit read authorization is supported, whether at rest or in transit." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. physical means, compartmentalization or encryption.
2. configuring explicit read authorizations in the control system.
3. Digital Certificates.
4. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_integrity_transmitted_info" name="The asset shall provide the capability to protect the integrity of transmitted information." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="report_current_list_of_installed_assets" name="The asset shall provide the capability to report the current list of installed assets and their associated properties." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Usage of component ID, capability and revision level.
2. Formal process of configuration management should be deployed to keep control of the
changes in the component inventory baseline
3. The system requires all default passwords and pass phrases to be changed in order to complete the setup, prior to being operational.  This includes SSID passphrases, default accounts, admin accounts, etc.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="switch_to_and_from_emergency_power_supply" name="The asset shall provide the capability to switch to and from an emergency power supply without affecting the existing security state or a documented degraded mode. " issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>There may be instances where compensating countermeasures such as physical door access
control or control system may be affected by loss of base power supply, in which case the emergency power supply should cover those associated systems.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="common-sl2-cr1-11" name="SL2 - Common - CR1.11" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-11-adv_bruteforce_auth_creds" name="And adversary can bruteforce authentication credentials" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-522">
                  <countermeasures>
                    <countermeasure ref="limit_invalid_attempts" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="limit_invalid_attempts" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-7" name="SL2 - Common - CR1.7" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-7-adv_bruteforce_pw" name="An adversary is able to brute force the password" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-307">
                  <countermeasures>
                    <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-7-adv_guess_pw" name="An adversary is able to guess the password based on identifying an authenticator" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-521">
                  <countermeasures>
                    <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-1" name="SL2 - Common - CR2.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-1-adv_connect_with_compromised_acc_make_changes" name="An adversary is able to connect to the asset with a compromised account and is able to make changes to all content available on the asset. (no roles)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_auth_all_users_based_on_resp" mitigation="34"/>
                    <countermeasure ref="enforce_auth_based_on_role_leas_priv" mitigation="33"/>
                    <countermeasure ref="role_to_define_and_modify_perm_mapping" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_auth_all_users_based_on_resp" mitigation="34"/>
                <countermeasure ref="enforce_auth_based_on_role_leas_priv" mitigation="33"/>
                <countermeasure ref="role_to_define_and_modify_perm_mapping" mitigation="33"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-11" name="SL2 - Common - CR2.11" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-11-an_adversary_compromises_a_system_without_knowing_when_he_compromised_it" name="An adversary compromises a system without knowing when he compromised it." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                    <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-12" name="SL2 - Common - CR2.12" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-12-an_adversary_compromised_the_system_not_knowing_from_where_he_compromised_the_system" name="An adversary compromised the asset, not knowing from where he compromised the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="provide_human_user_interface_determine_user_took_action" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_human_user_interface_determine_user_took_action" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-2" name="SL2 - Common - CR2.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-2-adv_wifi_access" name="An adversary is able to get access to the asset via wireless protocols without authorization" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-3" name="SL2 - Common - CR2.3" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-3-adv_portable_dev_access" name="An adversary can access the asset using a portable device" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_config_usage_restriction" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_config_usage_restriction" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-5" name="SL2 - Common - CR2.5" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-5-an_adversary_can_perform_a_dos_attack_by_making_consecutive_authorization_requests" name="An adversary can perform a DoS attack by making consecutive authorization requests" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-307">
                  <countermeasures>
                    <countermeasure ref="prevent_further_access_init_seslock" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="prevent_further_access_init_seslock" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-8" name="SL2 - Common - CR2.8" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-8-an_aversary_could_have_compromised_the_sytem_without_you_knowing" name="An adversary could have compromised the system without you knowing what part in the asset was compromised or how he compromised the asset " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-1" name="SL2 - Common - CR3.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-1-adv_intercept_netw_traffic" name="An adversary can intercept network traffic" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="25" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-5">
                  <countermeasures>
                    <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                    <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-5" name="SL2 - Common - CR3.5" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-5-adv_xss" name="An adversary can perform cross site scripting when input is not validated" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-79">
                  <countermeasures>
                    <countermeasure ref="validate_syntax_length_content_of_any_input" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="validate_syntax_length_content_of_any_input" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-7" name="SL2 - Common - CR3.7" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-7-adv_disclose_info_via_error_msg" name="An adversary can use error messages that contain too much information, such as stack traces, to discover vulnerabilities in the running service." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-209">
                  <countermeasures>
                    <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-9" name="SL2 - Common - CR3.9" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-9-adv_delete_audit_records_after_breach" name="An adversary is able to delete audit records after a system breach which can make investigations very difficult  " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-732">
                  <countermeasures>
                    <countermeasure ref="protect_audit_info_logs_tools" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_audit_info_logs_tools" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr4-1" name="SL2 - Common - CR4.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr4-1-adv_intercept_unecrypted_file_in_transit" name="An adversary is able to intercept an unencrypted file in transit" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="protect_conf_of_info_at_rest_remote_access" mitigation="50"/>
                    <countermeasure ref="protect_conf_of_info_traversing_netw" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_conf_of_info_at_rest_remote_access" mitigation="50"/>
                <countermeasure ref="protect_conf_of_info_traversing_netw" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr5-1" name="SL2 - Common - CR5.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr5-1-network_segmentation_exploit" name="An adversary is able to hop between internal networks since they are not segregated" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="logically_segment_control_system" mitigation="50"/>
                    <countermeasure ref="physically_segment_control_system" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="logically_segment_control_system" mitigation="50"/>
                <countermeasure ref="physically_segment_control_system" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr6-2" name="SL2 - Common - CR6.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr6-2-continuous_monitoring_exploit" name="An adversary compromises a system  without it being timely notified and detected by for example a IDS" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-693">
                  <countermeasures>
                    <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-1" name="SL2 - Common - CR7.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-1-dos_no_protect" name="Assets might lose the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event.&#10;" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-1100">
                  <countermeasures>
                    <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                    <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-5" name="SL2 - Common - CR7.5" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-5-emergency_power" name="An adversary can cause a power outage of a security system which will give an adversary to compromise the asset." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="switch_to_and_from_emergency_power_supply" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="switch_to_and_from_emergency_power_supply" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-7" name="SL2 - Common - CR7.7" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-7-unauth_access_unnecessary_func" name="Unauthorized component access might occur as a result of not being able to restrict unnecessary functions, ports, protocols and/or services." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-8" name="SL2 - Common - CR7.8" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-8-rogue_assets" name="Rogue assets might enter the network as a result of not being able to verify component identities." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="93614e83-4aee-4766-a248-80c062603944" diagramComponentId="503884c5-9464-4700-b99f-3312d9f93911" ref="1f6d947b-e729-4b29-8274-8234bd42b429" name="Gateway,Router" desc="" library="iec62443" parentComponentRef="" componentDefinitionRef="gateway-router">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="iec62443-sl2"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-300" name="Channel Accessible by Non-Endpoint ('Man-in-the-Middle')" state="0" impact="100" issueId="">
          <desc>The product does not adequately verify the identity of actors at both ends of a communication channel, or does not adequately ensure the integrity of the channel, in a way that allows the channel to be accessed or influenced by an actor that is not an endpoint.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-284" name="Improper Access Control" state="0" impact="100" issueId="">
          <desc>The software does not restrict or incorrectly restricts access to a resource from an unauthorized actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-287" name="Improper Authentication" state="0" impact="100" issueId="">
          <desc>When an actor claims to have a given identity, the software does not prove or insufficiently proves that the claim is correct.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-94" name="Improper Control of Generation of Code ('Code Injection')" state="0" impact="100" issueId="">
          <desc>The software constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behaviour of the intended code segment.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-20" name="Improper Input Validation" state="0" impact="100" issueId="">
          <desc>The product does not validate or incorrectly validates input that can affect the control flow or data flow of a program.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-79" name="Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')" state="0" impact="100" issueId="">
          <desc>The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-147" name="Improper Neutralization of Input Terminators" state="0" impact="100" issueId="">
          <desc>The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as input terminators when they are sent to a downstream component.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-117" name="Improper Output Neutralization for Logs" state="0" impact="100" issueId="">
          <desc>The software does not neutralize or incorrectly neutralizes output that is written to logs.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-307" name="Improper Restriction of Excessive Authentication Attempts" state="0" impact="100" issueId="">
          <desc>The software does not implement sufficient measures to prevent multiple failed authentication attempts within in a short time frame, making it more susceptible to brute force attacks.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-354" name="Improper Validation of Integrity Check Value" state="0" impact="100" issueId="">
          <desc>The software does not validate or incorrectly validates the integrity check values or "checksums" of a message. This may prevent it from detecting if the data has been modified or corrupted in transmission.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-347" name="Improper Verification of Cryptographic Signature" state="0" impact="100" issueId="">
          <desc>The software does not verify, or incorrectly verifies, the cryptographic signature for data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-326" name="Inadequate Encryption Strength" state="0" impact="100" issueId="">
          <desc>The software stores or transmits sensitive data using an encryption scheme that is theoretically sound, but is not strong enough for the level of protection required.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-532" name="Inclusion of Sensitive Information in Log Files" state="0" impact="100" issueId="">
          <desc>Information written to log files can be of a sensitive nature and give valuable guidance to an attacker or expose sensitive user information.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-732" name="Incorrect Permission Assignment for Critical Resource" state="0" impact="100" issueId="">
          <desc>The software specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-286" name="Incorrect User Management" state="0" impact="100" issueId="">
          <desc>The software does not properly manage a user within its environment.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-209" name="Information Exposure Through an Error Message" state="0" impact="100" issueId="">
          <desc>The software generates an error message that includes sensitive information about its environment, users, or associated data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-1100" name="Insufficient Isolation of System-Dependent Functions" state="0" impact="100" issueId="">
          <desc>The product or code does not isolate system-dependent
					functionality into separate stand-alone modules.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="">
          <desc>When a security-critical event occurs, the software either does not record the event or omits important details about the event when logging it.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-522" name="Insufficiently Protected Credentials" state="0" impact="100" issueId="">
          <desc>This weakness occurs when the application transmits or stores authentication credentials and uses an insecure method that is susceptible to unauthorized interception and/or retrieval.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-5" name="J2EE Misconfiguration: Data Transmission Without Encryption" state="0" impact="100" issueId="">
          <desc>Information sent over a network can be compromised while in transit. An attacker may be able to read or modify the contents if the data are sent in plaintext or are weakly encrypted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-322" name="Key Exchange without Entity Authentication" state="0" impact="100" issueId="">
          <desc>The software performs a key exchange with an actor without verifying the identity of that actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-311" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="">
          <desc>The software does not encrypt sensitive or critical information before storage or transmission.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-636" name="Not Failing Securely ('Failing Open')" state="0" impact="100" issueId="">
          <desc>When the product encounters an error condition or failure, its design requires it to fall back to a state that is less secure than other options that are available, such as selecting the weakest encryption algorithm or using the most permissive access control restrictions.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-672" name="Operation on a Resource after Expiration or Release" state="0" impact="100" issueId="">
          <desc>The software uses, accesses, or otherwise operates on a resource after that resource has been expired, released, or revoked.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-693" name="Protection Mechanism Failure" state="0" impact="100" issueId="">
          <desc>The product does not use or incorrectly uses a protection mechanism that provides sufficient defence against directed attacks against the product.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-384" name="Session Fixation" state="0" impact="100" issueId="">
          <desc>Authenticating a user, or otherwise establishing a new user session, without invalidating any existing session identifier gives an attacker the opportunity to steal authenticated sessions.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-507" name="Trojan Horse" state="0" impact="100" issueId="">
          <desc>The software appears to contain benign or useful functionality, but it also contains code that is hidden from normal operation that violates the intended security policy of the user or the system administrator.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-400" name="Uncontrolled Resource Consumption" state="0" impact="100" issueId="">
          <desc>The software does not properly control the allocation and maintenance of a limited resource thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-798" name="Use of Hard-coded Credentials" state="0" impact="100" issueId="">
          <desc>The software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-916" name="Use of Password Hash With Insufficient Computational Effort" state="0" impact="100" issueId="">
          <desc>The software generates a hash for a password, but it uses a scheme that does not provide a sufficient level of computational effort that would make password cracking attacks infeasible or expensive.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-261" name="Weak Cryptography for Passwords" state="0" impact="100" issueId="">
          <desc>Obscuring a password with a trivial encoding does not protect the password.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-521" name="Weak Password Requirements" state="0" impact="100" issueId="">
          <desc>The product does not require that users should have strong passwords, which makes it easier for attackers to compromise user accounts.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-123" name="Write-what-where Condition" state="0" impact="100" issueId="">
          <desc>Any condition where the attacker has the ability to write an arbitrary value to an arbitrary location, often as the result of a buffer overflow.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="protect_audit_info_logs_tools" name="Assets shall protect audit information, audit logs, and audit tools (if present) from unauthorized access, modification and deletion." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. the storage of audit information to hardware-enforced write-once media.
2. Access Management Process</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.11" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_auth_all_users_based_on_resp" name="Assets shall provide an authorization enforcement mechanism for all identified and authenticated users based on their assigned responsibilities." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. On all interfaces, the control system shall provide the capability to enforce authorizations assigned to all users (humans, software processes and devices) for controlling use of the control system to support segregation of duties and least privilege.
2. Authorization is granting of permissions based on authentication. 
3.All authorization decisions should be made on the server, not the client.  
4. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
5. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
6. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
7. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
8. Server side implementation and presentation layer representations of access control rules must match. 
9. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
10. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
11. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="auth_humans_tools_audit_logs" name="Assets shall provide the capability for authorized humans and/or tools to access audit logs on a read-only basis." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Access Control - Authorize members
2. Least Privilege &amp; Need to Know Basis
3. Review of access </desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="config_according_to_recommended_netw_and_security" name="Assets shall provide the capability to be configured according to recommended network and security configurations as described in guidelines provided by the asset supplier. The asset shall provide an interface to the currently deployed network and security configuration settings." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Devices with network connectivity are capable of being updated from the network.
2. provide the capability to generate a report listing the currently deployed security settings in a machine-readable format.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="continuous_monitor_accepted_sec" name="Assets shall provide the capability to be continuously monitored using commonly accepted security industry practices and recommendations to detect, characterize and report security breaches in a timely manner." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Control system monitoring capability can be achieved through a variety of tools and
techniques (for example, IDS, IPS, malicious code protection mechanisms and network monitoring mechanisms).
2. Monitoring devices should be strategically deployed within the control system (for example, at
selected perimeter locations and near server farms supporting critical applications) to collect
essential information. Monitoring mechanisms may also be deployed at ad hoc locations
within the control system to track specific transactions
3. SIEM Implementation</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="cap_to_be_recovered_to_known_secure_state" name="Assets shall provide the capability to be recovered and reconstituted to a known secure state after a disruption or failure." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Control system recovery and reconstitution to a known secure state means that all system
parameters (either default or configurable) are set to secure values, security-critical patches
are reinstalled, security-related configuration settings are reestablished, system documentation and operating procedures are available, application and system software is reinstalled and configured with secure settings, information from the most recent, known secure backups is loaded and the system is fully tested and functional.
1. Roll back procedure.
2. Secure storage of previous version</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_for_audit_records" name="Assets shall provide the capability to create timestamps (including date and time) for use in audit records." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Timestamps (including date and time) of audit records should be generated using internal
system clocks.
1. provide timestamps for use in audit record generation.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" name="Assets shall provide the capability to create timestamps that are synchronized with a system wide time source." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>to synchronize internal system clocks at a configurable frequency.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="explicit_read_auth_protect_conf_info" name="Assets shall provide the capability to erase all information, for which explicit read authorization is supported, from assets to be released from active service and/or decommissioned." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Removal of a control system component from active service should not provide the
opportunity for unintentional release of information for which explicit read authorization is
supported.
1. Information produced by the actions of a user or role (or the actions of a software process
acting on behalf of a user or role) should not be disclosed to a different user or role in an
uncontrolled fashion.
2. Purging of all information from volatile memory, active service or decommissioned system.
3. Ensure purging successfully occurs
NOTE Volatile memory resources are those that typically do not retain information after being released to memory management. However, there are attacks against random access memory (RAM) that have the potential to extract key material or other confidential data before it is actually over-written. Therefore, it is a commonly accepted practice to purge all unique data and connections to unique data from volatile shared memory when that memory is released back to the control system for use by a different user, such that this data is not visible or accessible to the new user.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="limit_rsrc_by_sec" name="Assets shall provide the capability to limit the use of resources by security functions to protect against resource exhaustion." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Resource management (for example, network segmentation or priority schemes) prevents a
lower-priority software process from delaying or interfering with the control system servicing
any higher-priority software process.
1. initiating network scans, patching and/or antivirus checks on an operating system.
2. Traffic rate limiting schemes should be considered as a mitigation technique.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="maintain_essential_functions" name="Assets shall provide the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>provide the capability to manage communication loads (such as
using rate limiting) to mitigate the effects of information flooding types of DoS events.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="support_auth_check_on_software_config" name="Assets shall provide the capability to perform or support authenticity checks on software, configuration and other information as well as the recording and reporting of the results of these checks or be integrated into a system that can perform or support authenticity checks." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Integrity verification methods are employed to detect, record, report and protect against software and information tampering.
1. cryptographic hashes
2. Notification of unauthorize changes
Integrity verification methods are employed to detect, record, report and protect against software and information tampering that may occur if other protection mechanisms (such as authorization enforcement) have been circumvented. The control system should employ formal or recommended integrity mechanisms (such as cryptographic hashes).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="integrity_check_software" name="Assets shall provide the capability to perform or support integrity checks on software, configuration and other information as well as the recording and reporting of the results of these checks or be integrated into a system that can perform or support integrity checks." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Integrity verification methods are employed to detect, record, report and protect against software and information tampering.
1. cryptographic hashes
2. Notification of unauthorize changes
Integrity verification methods are employed to detect, record, report and protect against software and information tampering that may occur if other protection mechanisms (such as authorization enforcement) have been circumvented. The control system should employ formal or recommended integrity mechanisms (such as cryptographic hashes).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_critical_long_lived_symmetric_keys" name="Assets shall provide the capability to protect critical, long lived symmetric keys via hardware mechanisms." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. establish the mutual trust using the symmetric key; store securely the shared secret (the authentication is valid as long as the shared secret remains secret); restrict access to the shared secret; ensure that the algorithms and keys used for the symmetric key authentication</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.16" supportedStandardRef="iec-62443-4-2:2019"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" name="Assets shall provide the capability to specifically restrict the use of unnecessary functions, ports, protocols and/or services." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc> 1. capability to specifically prohibit and/or restrict the use of unnecessary functions, ports, protocols and/or services.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="validate_syntax_length_content_of_any_input" name="Assets shall validate the syntax, length and content of any input data that is used as an industrial process control input or input via external interfaces that directly impacts the action of the asset." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. input data validation include out-of-range values for a defined field type, invalid characters in data fields, missing or incomplete data and buffer overflow.
2. SAST &amp; DAST
3. Data from external sources are sanitized based on acceptable formats and lengths.  It is preferred to use white listing, over black listing.
4. Data is validated when crossing API boundaries</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="phys_logical_connect_to_automation_process" name="Assets that physically or logically connect to an automation process shall provide the capability to set outputs to a predetermined state if normal operation as defined by the asset supplier cannot be maintained." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. The appropriate predetermined state of control system outputs is application dependent and could be one of the following user configurable options:
• Unpowered – the outputs fail to the unpowered state
• Hold – the outputs fail to the last-known good value
• Fixed – the outputs fail to a fixed value that is determined by the asset owner or an
application
2. All user supplied data is encoded prior to output. (i.e.. Html encoding, special character encoding).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_pw_policy_enforce" name="For assets utilizing password-based authentication, the asset shall provide the capability to enforce configurable password strength based on minimum length and variety of character types. " issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.
Note: A service should employ one or more tactics to prevent or at least slow down a brute force attack, including: blacklisting an IP after 5 unsuccessful attempts, slowing down attempts with increasing timeout delays introduced after 5 unsuccessful attempts, locking out non-admin accounts after 3 unsuccessful attempts.  The account must be disabled for a period of time sufficient to discourage brute force guessing of credentials, but not so long as to allow for a denial-of-service attack to be performed.  Allow non-admin users to reset their own passwords to prevent administrative burden.  If users are allowed to reset their password, best practice is to email a new password to the users email account and require a reset upon next logon.  It is not best practice to simply reset and display the new password on the authentication screen as an attacker may trigger that reset and change the password without notice to the user.  If using a screen reveal of password, should be accompanied by both a known secret of user, such as mothers maiden name and also an email to notify the user of such a change.  Temporary passwords and links should have a short expiration time.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_id_and_auth_for_human_users" name="Identify and authenticate all human users" issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. passwords, tokens, biometrics, Certificates, geographic location
2. role-based or group-based
3. should be applied to both local and remote access to the control system.
4. Least Privilege 
5. Segregation of Duties
6. Authentication types (factors): (1) something you know (a secret) -like username and password; (2) something you have - such as a token device or smart phone; and (3) something you are - such as biometrics. 
7. On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.
8.  services should run as non-root accounts or use SUID accounts that release privilege after service start.  Non-root accounts used for services should not have a shell enabled, i.e. /dev/null should be shell in passwd file.  In cases where the application must run with elevated privileges, raise privileges as late as possible, and drop them as soon as possible.  For windows based services, it is preferred to run the service as SYSTEM, instead of an administrator account, which would have credentials which may be guessed and used in an attack.
9. Authorization is granting of permissions based on authentication. 
10.All authorization decisions should be made on the server, not the client.  
11. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
12. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
13. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
14. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
15. Server side implementation and presentation layer representations of access control rules must match. 
16. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
17. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
18. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources
Note: system level forms of identification, such as IP or MAC address are easily spoofable and therefore do not qualify as a valid form of authentication. Establish and utilize standard, tested, authentication services whenever possible. Use a centralized implementation for all authentication controls, including libraries that call external authentication services. Segregate authentication logic from the resource being requested and use redirection to and from the centralized authentication control.  All authentication controls should fail securely. Enforce password complexity requirements established by policy or regulation. Authentication credentials should be sufficient to withstand attacks that are typical of the threats in the deployed environment. (e.g., requiring the use of alphabetic as well as numeric and/or special characters). Enforce password length requirements established by policy or regulation. Eight characters is commonly used, but 16 is better or consider the use of multi-word pass phrases. Password entry should be obscured on the user's screen. (e.g., on web forms use the input type "password")</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_human_user_interface_determine_user_took_action" name="If an asset provides a human user interface, the asset shall provide the capability to determine whether a given human user took a particular action. Control elements that are not able to support such capability shall be listed in component documents." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Examples of particular actions taken by a user include performing operator actions, changing
control system configurations, creating information, sending a message, approving
information (such as indicating concurrence) and receiving a message.
1. digital signatures, digital message receipts and timestamps</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.14" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="terminate_remote_session_auto_or_manual" name="If an asset supports remote sessions, the asset shall provide the capability to terminate a remote session either automatically after a configurable time period of inactivity, manually by a local authority, or manually by the user (human, software process or device) who initiated the session." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Terminate a remote session either automatically after a configurable time period of inactivity, manually by a local authority, or manually by the user (human, software process or device) who initiated the session.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" name="If an asset supports usage through wireless interfaces it shall provide the capability to integrate into the asset that supports usage authorization, monitoring and restrictions according to commonly accepted industry practices." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>provide the capability to authorize, monitor and enforce usage restrictions for wireless connectivity to the control system.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="user_crypto_algs" name="If cryptography is required, the asset shall use cryptographic algorithms, key sizes and mechanisms for key establishment and management according to commonly accepted security industry practices and recommendations." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. document the practices and procedures relating to cryptographic key establishment and management.
2. utilize established and tested encryption and hash algorithms, such as the advanced
encryption standard (AES) and the secure hash algorithm (SHA) series, and key sizes based
on an assigned standard.
3. Key generation needs to be performed using an effective random number generator.
4. The security policies and procedures for key management need to address
periodic key changes, key destruction, key distribution and encryption key backup in
accordance with defined standards</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_acc_mgmt_for_auth_users" name="Provide support of management of all accounts by authorized users" issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. individual, role-based, device-based, Service &amp;  default account management Policy.
2. Review of accounts.
3. Approvals for creating, disabling, removing or modifying accounts.
4.  On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="allocate_sufficient_audit_record_storage" name="The asset shall allocate sufficient audit record storage capacity according to commonly recognized recommendations for log management and system configuration. The asset shall provide auditing mechanisms to reduce the likelihood of such capacity being exceeded." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>The control system shall allocate sufficient audit record storage capacity according to
commonly recognized recommendations for log management and system configuration. The
control system shall provide auditing mechanisms to reduce the likelihood of such capacity
being exceeded</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.11" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="id_and_handle_error_conditions" name="The asset shall identify and handle error conditions in a manner such that effective remediation can occur. This shall be done in a manner which does not provide information that could be exploited by adversaries to attack the IACS unless revealing this information is necessary for the timely troubleshooting of problems." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Error messages generated by the control system should provide timely and useful information without revealing potentially harmful information.
2. Vulnerability Assessment &amp; Penetration Testing</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_auth_based_on_role_leas_priv" name="The asset shall provide authorization enforcement for all users based on their assigned responsibilities and least privilege" issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. enforce authorizations assigned to all human users.
2. Use control policies (for example, identity-based policies, role-based policies and rule-based policies) and associated read/write access enforcement mechanisms (for example, access control lists, access control matrices and cryptography).
2. check which roles are assigned to a verified user or asset and which privileges are assigned to these roles – if the requested operation is covered by the permissions, it is executed, otherwise rejected. Only qualified and authorized individuals should obtain the use of control system components for purposes of initiating changes, including upgrades and modifications. Authorization is granting of permissions based on authentication. 
3.All authorization decisions should be made on the server, not the client.  
4. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
5. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
6. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
7. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
8. Server side implementation and presentation layer representations of access control rules must match. 
9. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
10. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
11. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="role_to_define_and_modify_perm_mapping" name="The asset shall provide directly or through a compensating security mechanism, for an authorized role to define and modify the mapping of permissions to roles for all human users" issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>The control system shall provide the capability for an authorized user or role to define and
modify the mapping of permissions to roles for all human users.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="alert_personnel_prevent_svc_loss" name="The asset shall provide the capability to alert personnel and prevent the loss of essential services and functions in the event of an audit processing failure. The control system shall provide the capability to support appropriate actions in response to an audit processing failure according to commonly accepted industry practices and recommendations. " issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Audit generation typically occurs at the source of the event. Audit processing involves
transmission, possible augmentation (such as the addition of a timestamp) and persistent
storage of the audit records. Audit processing failures include, for example, software or
hardware errors, failures in the audit capturing mechanisms and audit storage capacity being
reached or exceeded
1.capability to alert personnel and prevent the loss of essential services and functions in the event of an audit processing failure.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.12" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_config_usage_restriction" name="The asset shall provide the capability to automatically enforce configurable usage restrictions" issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Authenticate &amp; Authorize devices before allowing connection.
2. Digital+E46 Signatures</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="deny_access_via_untrusted_netw_unless_approved" name="The asset shall provide the capability to deny access requests via untrusted networks unless approved by an assigned role." issueId="" platform="" cost="0" risk="74" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.15" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="deny_netw_traffic_allow_netw_traffic_exceptions" name="The asset shall provide the capability to deny network traffic by default and allow network traffic by exception (also termed deny all, permit by exception)." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>deny network traffic by default and allow network traffic by exception (also termed deny all, permit by exception).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="show_sys_use_notification" name="The asset shall provide the capability to display a system use notification message before authenticating. The system use notification message shall be configurable by authorized personnel." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. display a system use notification message or warning banners before authenticating &amp; configurable by authorized personnel.
2. Privacy and security policies and procedures need to be consistent with applicable laws,
directives, policies, regulations, standards and guidance.
3. Examples of elements for inclusion in the system use notification message are:
a) that the individual is accessing a specific control system;
b) that system usage may be monitored, recorded and subject to audit;
c) that unauthorized use of the system is prohibited and subject to criminal and/or civil
penalties; and
d) that use of the system indicates consent to monitoring and recording</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.14" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="employ_cypto_mechs_to_recognize_changes" name="The asset shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="employ_maware_protection" name="The asset shall provide the capability to employ malicious code protection mechanisms at all entry and exit points." issueId="" platform="" cost="0" risk="74" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>prevent, detect, mitigate and report instances of detected malicious code (for example, viruses, worms, Trojan horses and spyware) transported by electronic mail, electronic mail attachments, Internet access, removable media (for example, universal serial bus (USB) devices, diskettes or compact disks), PDF documents, web services, network connections and infected laptops or other
common means.
1. Detection Technique  - binary integrity and attributes monitoring, hashing and signature techniques.
2.Mitigation technique - file cleaning, quarantining, file deletion, host communication restriction and IPSs
3. Prevention Technique - application blacklisting and whitelisting techniques, removable media control, sandbox techniques and specific computing platforms mechanisms such as restricted firmware update capabilities, No Execute (NX) bit, data execution prevention (DEP), address space layout randomization (ASLR), stack corruption detection and mandatory access controls.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" name="The asset shall provide the capability to employ protection mechanisms to prevent, detect, report and mitigate the effects of malicious code or unauthorized software. The asset shall provide the capability to update the protection mechanisms." issueId="" platform="" cost="0" risk="74" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>prevent, detect, mitigate and report instances of detected malicious code (for example, viruses, worms, Trojan horses and spyware) transported by electronic mail, electronic mail attachments, Internet access, removable media (for example, universal serial bus (USB) devices, diskettes or compact disks), PDF documents, web services, network connections and infected laptops or other
common means.
1. Detection Technique  - binary integrity and attributes monitoring, hashing and signature techniques.
2.Mitigation technique - file cleaning, quarantining, file deletion, host communication restriction and IPSs
3. Prevention Technique - application blacklisting and whitelisting techniques, removable media control, sandbox techniques and specific computing platforms mechanisms such as restricted firmware update capabilities, No Execute (NX) bit, data execution prevention (DEP), address space layout randomization (ASLR), stack corruption detection and mandatory access controls.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="limit_invalid_attempts" name="The asset shall provide the capability to enforce a limit of a configurable number of consecutive invalid access attempts by any user (human, software process or device) during a configurable time period. The asset shall provide the capability to deny access for a specified period of time or until unlocked by an administrator when this limit has been exceeded." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. limit of a configurable number of consecutive invalid access attempts by any user (human, software process or device).
2. As per Policy.
3. For all invalid authentication attempts, the server should simply respond "invalid attempt, please retry" or similarly vague statement that does not imply partial success.  
Note: A service should employ one or more tactics to prevent or at least slow down a brute force attack, including: blacklisting an IP after 5 unsuccessful attempts, slowing down attempts with increasing timeout delays introduced after 5 unsuccessful attempts, locking out non-admin accounts after 3 unsuccessful attempts.  The account must be disabled for a period of time sufficient to discourage brute force guessing of credentials, but not so long as to allow for a denial-of-service attack to be performed.  Allow non-admin users to reset their own passwords to prevent administrative burden.  If users are allowed to reset their password, best practice is to email a new password to the users email account and require a reset upon next logon.  It is not best practice to simply reset and display the new password on the authentication screen as an attacker may trigger that reset and change the password without notice to the user.  If using a screen reveal of password, should be accompanied by both a known secret of user, such as mothers maiden name and also an email to notify the user of such a change.  Temporary passwords and links should have a short expiration time.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="restrict_mobile_code" name="The asset shall provide the capability to enforce usage restrictions for mobile code technologies based on the potential to cause damage to the asset." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Mobile code technologies include, but are not limited to, Java, JavaScript, ActiveX, portable
document format (PDF), Postscript, Shockwave movies, Flash animations and VBScript.
1. The control system shall provide the capability to enforce usage restrictions for mobile code technologies based on the potential to cause damage to the control system that include:
a) preventing the execution of mobile code;
b) requiring proper authentication and authorization for origin of the code;
c) restricting mobile code transfer to/from the control system; and
d) monitoring the use of mobile code.
2. verify integrity of the mobile code before allowing code execution with HASH/Codesigning technique.
3. both the selection and use of mobile code installed on servers and
mobile code downloaded and executed.
4. prevent the development, acquisition or introduction of unacceptable mobile code within the control system. For example, mobile code exchanges may be disallowed directly with the
control system, but may be allowed in a controlled adjacent environment.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" name="The asset shall provide the capability to generate audit records relevant to security for the following categories: access control, request errors, operating system events, asset events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Generate audit records relevant to security for the following categories: access control, request errors, operating system events, control system events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" name="The asset shall provide the capability to identify and authenticate all software processes and devices. This capability shall enforce such identification and authentication on all interfaces which provide access to the asset to support least privilege in accordance with applicable security policies and procedures." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. identity bound to the physical device
2. passwords, tokens or location (physical or logical)
3. role-based, group-based or entity-based,
4. Combination of 1) something you know (a secret) -like username and password; (2) something you have - such as a token device or smart phone; and (3) something you are - such as biometrics. 
5. Assign identifiers that uniquely identify users/devices
a. E.g., employ a unique username-password combination for the user
b. Reasoning: This will prevent user 1 from spoofing as user 2. This is a concern for users with different levels of access.
6. Uniquely identify and authenticate users and devices
c. Multi-factor authentication
d. Use of authentication protocols that require no password/multifactor authentication: e.g., OAuth, OpenID, SAML</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_auth_init" name="The asset shall provide the capability to: initialize authenticator content; change all default authenticators upon asset installation; change/refresh all authenticators; protect all authenticators from unauthorized disclosure and modification when stored and transmitted." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>&gt; initialize authenticator content;
&gt; change all default authenticators upon control system installation;
&gt; change/refresh all authenticators; and
&gt; protect all authenticators from unauthorized disclosure and modification when stored and
transmitted
2.  tokens, symmetric keys, private keys (part of a public/private key pair), biometrics,
passwords, physical keys and key card
3. Human users should take reasonable measures to safeguard authenticators, including maintaining possession of their individual authenticators, not loaning or sharing authenticators with others and reporting lost or compromised authenticators immediately.
4. cryptographic protections such as encryption or hashing or by handshake protocols which do not require transmission of the password. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.
5. Lockout or loss of control due to security measures is not acceptable. If the control system is required to have a high level of availability, measures should be taken to maintain this high
level of availability (such as compensating physical countermeasures, duplicate keys and
supervisory override).
6. Complex strength of the authentication mechanism</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="logically_segment_control_system" name="The asset shall provide the capability to logically segment asset networks from non-asset networks and to logically segment critical asset networks from other asset networks." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Access from the control system to the World Wide Web should be clearly justified based on
control system operational requirements.
2. Logical Segmentation.
3. Physical Segmentation.
4. capability to provide network services to control system networks, critical or otherwise, without a connection to non-control system networks.
5. capability to logically and physically isolate critical control system networks from non-critical control system networks.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="mitigate_info_effects_flooding_types" name="The asset shall provide the capability to manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. boundary protection
2. restricting the information flow to be unidirectional outbound
3. manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events.
4. restrict the ability of all users (humans, software processes and devices) to cause DoS events which affect other control systems or networks.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="monitor_control_access_methods" name="The asset shall provide the capability to monitor and control all methods of access to the asset via untrusted networks." issueId="" platform="" cost="0" risk="74" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Examples of access to the control system via untrusted networks typically include remote
access methods (such as dial-up, broadband and wireless) as well as connections from a
company’s office (non-control system) network.
1. restrict access achieved through dial-up connections (for example, limiting dial-up access based upon the source of the request).
2. protect against unauthorized connections or subversion of authorized connections (for example, using virtual private network technology).
3. Access via untrusted networks to geographically remote control system component locations (for example, control centers and field locations) should only be enabled when necessary and authenticated.
4. Multifactor authentication for remote user access to the control system.
5. Use of VPNs &amp; Firewalls.
6. Monitoring &amp; Logging of Access for control systems.
7. deny access requests via untrusted networks unless approved by an assigned role.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.15" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="monitor_control_comms_zone_boundaries" name="The asset shall provide the capability to monitor and control communications at zone boundaries to enforce the compartmentalization defined in the risk-based zones and conduits model." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Any connections to external networks or other control systems should occur through managed
interfaces consisting of appropriate boundary protection devices (for example, proxies,
gateways, routers, firewalls, unidirectional gateways, guards and encrypted tunnels) arranged
in an effective architecture (for example, firewalls protecting application gateways residing in
a DMZ).
1. capability to deny network traffic by default and allow network traffic by exception (also termed deny all, permit by exception).
2. capability to prevent any communication through the control system boundary (also termed island mode).
3. The control system shall provide the capability to prevent any communication through the
control system boundary when there is an operational failure of the boundary protection
mechanisms (also termed fail close). This ‘fail close’ functionality shall be designed such that
it does not interfere with the operation of a SIS or other safety-related functions.
4. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="physically_segment_control_system" name="The asset shall provide the capability to physically segment asset networks from non-asset networks and to physically segment critical asset networks from non-critical asset networks." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="prevent_further_access_init_seslock" name="The asset shall provide the capability to prevent further access by initiating a session lock after a configurable time period of inactivity or by manual initiation. The session lock shall remain in effect until the human user who owns the session or another authorized human user re-establishes access using appropriate identification and authentication procedures." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. activate session lock mechanisms automatically after a configurable time period.
2. In some cases, session lock for control system operator workstations or nodes is not advised (for example, sessions which are required for immediate operator responses in emergency situations).
3. In situations where the control system cannot support session lock, the responsible entity should employ appropriate compensating countermeasures (for example, providing increased physical security, personnel security and auditing measures).
Note: Use the server or framework’s session management controls. The application should only recognize these session identifiers as valid. Session identifier creation must always be done on a trusted system (e.g., The server). Session management controls should use well vetted algorithms that ensure sufficiently random session identifiers. Set the domain and path for cookies containing authenticated session identifiers to an appropriately restricted value for the site. Logout functionality should fully terminate the associated session or connection. Logout functionality should be available from all pages protected by authorization. Establish a session inactivity timeout that is as short as possible, based on balancing risk and business functional requirements. In most cases it should be no more than several hours. Disallow persistent logins and enforce periodic session terminations, even when the session is active. Especially for applications supporting rich network connections or connecting to critical systems. Termination times should support business requirements and the user should receive sufficient notification to mitigate negative impacts. If a session was established before login, close that session and establish a new session after a successful login. Generate a new session identifier on any re-authentication. Do not allow concurrent logins with the same user ID. Supplement standard session management for sensitive server-side operations, like account management, by utilizing per-session strong random tokens or parameters. This method can be used to prevent Cross Site Request Forgery attacks. Supplement standard session management for highly sensitive or critical operations by utilizing per-request, as opposed to per-session, strong random tokens or parameters. Set the "secure" attribute for cookies transmitted over an TLS connection. Set cookies with the HttpOnly attribute, unless you specifically require client-side scripts within your application to read or set a cookie's value</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_conf_of_info_traversing_netw" name="The asset shall provide the capability to protect the confidentiality of information at rest and remote access sessions traversing an untrusted network." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_conf_of_info_at_rest_remote_access" name="The asset shall provide the capability to protect the confidentiality of information for which explicit read authorization is supported, whether at rest or in transit." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. physical means, compartmentalization or encryption.
2. configuring explicit read authorizations in the control system.
3. Digital Certificates.
4. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_integrity_of_sessions" name="The asset shall provide the capability to protect the integrity of sessions. The asset shall reject any usage of invalid session IDs." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Use of session integrity mechanisms can have a significant overhead and therefore their use should be considered in light of requirements for real-time communications.
2. capability to invalidate session IDs upon user logout or other session termination (including browser sessions).
3. generate a unique session ID for each session and treat all unexpected session IDs as invalid.
4. generate unique session IDs with commonly accepted sources of randomness.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_integrity_transmitted_info" name="The asset shall provide the capability to protect the integrity of transmitted information." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_relevant_priv_keys" name="The asset shall provide the capability to protect the relevant private keys via hardware mechanisms according to commonly accepted security industry practices and recommendations." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Follow All below Steps:
l) validate certificates by checking the validity of the signature of a given certificate;
m) validate certificates by constructing a certification path to an accepted CA or in the case of
self-signed certificates by deploying leaf certificates to all hosts which communicate with
the subject to which the certificate is issued;
n) validate certificates by checking a given certificate’s revocation status;
o) establish user (human, software process or device) control of the corresponding private
key; and
p) map the authenticated identity to a user (human, software process or device).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.11" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="report_current_list_of_installed_assets" name="The asset shall provide the capability to report the current list of installed assets and their associated properties." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Usage of component ID, capability and revision level.
2. Formal process of configuration management should be deployed to keep control of the
changes in the component inventory baseline
3. The system requires all default passwords and pass phrases to be changed in order to complete the setup, prior to being operational.  This includes SSID passphrases, default accounts, admin accounts, etc.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_support_mgmt_id_by_user_group_role" name="The asset shall provide the capability to support the management of identifiers by user, group, role or asset interface." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Management of identifiers by group, role or  system interface.
2. Session ID, resource ID, secure cookie management policy.
3. On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.
NOTE: Use the server or framework’s session management controls. The application should only recognize these session identifiers as valid. Session identifier creation must always be done on a trusted system (e.g., The server). Session management controls should use well vetted algorithms that ensure sufficiently random session identifiers. Set the domain and path for cookies containing authenticated session identifiers to an appropriately restricted value for the site. Logout functionality should fully terminate the associated session or connection. Logout functionality should be available from all pages protected by authorization. Establish a session inactivity timeout that is as short as possible, based on balancing risk and business functional requirements. In most cases it should be no more than several hours. Disallow persistent logins and enforce periodic session terminations, even when the session is active. Especially for applications supporting rich network connections or connecting to critical systems. Termination times should support business requirements and the user should receive sufficient notification to mitigate negative impacts. If a session was established before login, close that session and establish a new session after a successful login. Generate a new session identifier on any re-authentication. Do not allow concurrent logins with the same user ID. Supplement standard session management for sensitive server-side operations, like account management, by utilizing per-session strong random tokens or parameters. This method can be used to prevent Cross Site Request Forgery attacks. Supplement standard session management for highly sensitive or critical operations by utilizing per-request, as opposed to per-session, strong random tokens or parameters. Set the "secure" attribute for cookies transmitted over an TLS connection. Set cookies with the HttpOnly attribute, unless you specifically require client-side scripts within your application to read or set a cookie's value
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="verify_intended_ops" name="The asset shall provide the capability to support verification of the intended operation of security functions and report when anomalies are discovered during FAT, SAT and scheduled maintenance. These security functions shall include all those necessary to support the security requirements specified in this standard." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Security verification functions include:
• Verification of antivirus measures by European Institute for Computer Antivirus Research
(EICAR) testing of the control system file system. Antivirus software should detect this and
appropriate incident handling procedures should be triggered.
• Verification of the identification, authentication and use control measures by attempting
access with an unauthorized account (for some functionality this could be automated).
• Verification of IDSs as a security control by including a rule in the IDS that triggers on
irregular, but known non-malicious traffic. The test could then be performed by introducing
traffic that triggers this rule and the appropriate IDS monitoring and incident handling
procedures.
• Confirmation that audit logging is occurring as required by security policies and
procedures and has not been disabled by an internal or external entity.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="switch_to_and_from_emergency_power_supply" name="The asset shall provide the capability to switch to and from an emergency power supply without affecting the existing security state or a documented degraded mode. " issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>There may be instances where compensating countermeasures such as physical door access
control or control system may be affected by loss of base power supply, in which case the emergency power supply should cover those associated systems.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="unique_id_human_users" name="The asset shall provide the capability to uniquely identify and authenticate all human users." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. passwords, tokens, biometrics, Certificates, geographic location
2. role-based or group-based
3. should be applied to both local and remote access to the control system.
4. Least Privilege 
5. Segregation of Duties
6. Authentication types (factors): (1) something you know (a secret) -like username and password; (2) something you have - such as a token device or smart phone; and (3) something you are - such as biometrics. 
7. On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.
8.  services should run as non-root accounts or use SUID accounts that release privilege after service start.  Non-root accounts used for services should not have a shell enabled, i.e. /dev/null should be shell in passwd file.  In cases where the application must run with elevated privileges, raise privileges as late as possible, and drop them as soon as possible.  For windows based services, it is preferred to run the service as SYSTEM, instead of an administrator account, which would have credentials which may be guessed and used in an attack.
9. Authorization is granting of permissions based on authentication. 
10.All authorization decisions should be made on the server, not the client.  
11. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
12. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
13. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
14. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
15. Server side implementation and presentation layer representations of access control rules must match. 
16. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
17. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
18. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources.
19. Assign identifiers that uniquely identify users/devices
a. E.g., employ a unique username-password combination for the user
b. Reasoning: This will prevent user 1 from spoofing as user 2. This is a concern for users with different levels of access.
20. Uniquely identify and authenticate users and devices
c. Multi-factor authentication
d. Use of authentication protocols that require no password/multifactor authentication: e.g., OAuth, OpenID, SAML
Note: system level forms of identification, such as IP or MAC address are easily spoofable and therefore do not qualify as a valid form of authentication. Establish and utilize standard, tested, authentication services whenever possible. Use a centralized implementation for all authentication controls, including libraries that call external authentication services. Segregate authentication logic from the resource being requested and use redirection to and from the centralized authentication control.  All authentication controls should fail securely. Enforce password complexity requirements established by policy or regulation. Authentication credentials should be sufficient to withstand attacks that are typical of the threats in the deployed environment. (e.g., requiring the use of alphabetic as well as numeric and/or special characters). Enforce password length requirements established by policy or regulation. Eight characters is commonly used, but 16 is better or consider the use of multi-word pass phrases. Password entry should be obscured on the user's screen. (e.g., on web forms use the input type "password")</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="validate_integrity_of_backup_info" name="The asset shall provide the capability to verify the reliability of backup mechanisms" issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>provide the capability to verify the reliability of backup mechanisms</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="id_auth_all_users_engaged_in_wireless_comms" name="The controls system shall provide the capability to identify and authenticate all users (humans, software processes or devices) engaged in wireless communication." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Identification of Wireless technologies include, but are not limited to, microwave, satellite, packet radio, Institute of Electrical and Electronics Engineers (IEEE) 802.11x, IEEE 802.15.4 (ZigBee,IEC 62591 – WirelessHART®, ISA-100.11a), IEEE 802.15.1 (Bluetooth), wireless LAN mobile routers, mobile phones with tethering and various infrared technologies.
1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="uniquely_id_auth_all_users_engaged_in_wireless_comms" name="The controls system shall provide the capability to uniquely identify and authenticate all users (humans, software processes or devices) engaged in wireless communication." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Identification of Wireless technologies include, but are not limited to, microwave, satellite, packet radio, Institute of Electrical and Electronics Engineers (IEEE) 802.11x, IEEE 802.15.4 (ZigBee,IEC 62591 – WirelessHART®, ISA-100.11a), IEEE 802.15.1 (Bluetooth), wireless LAN mobile routers, mobile phones with tethering and various infrared technologies.
1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_participate_in_sys_level_backup" name="The identity and location of critical files and the ability to conduct backups of user-level and system-level information (including system state information) shall be supported by the asset without affecting the normal plant operations." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. availability of up-to-date backups.
2. verify the reliability of backup mechanisms.
3. automate the backup function based on a configurable frequency.
4. Review of Failed Backups.
5. Centralize Backup, backup media.
6. Encrypted backup storage</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="obscure_auth_feedback" name="When an asset provides an authentication capability, the asset shall provide the capability to obscure feedback of authenticator information during the authentication process." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. obscure feedback of authentication information during the authentication process by displaying asterisks or other random characters when a human user types in a password obscures feedback of authentication information.
2. entry of wired equivalent privacy (WEP) keys, secure socket shell (SSH) token entry and
RSA one-time passwords.
3. not provide any hint as to the reason for the authentication failure, such as “unknown user name”.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.12" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="if_pki_can_use_best_practices" name="Where PKI is utilized, the asset shall provide the capability to operate a PKI according to commonly accepted best practices or obtain public key certificates from an existing PKI." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Obtain public key certificates from an existing PKI.
2. organization’s certificate policy
3. agency should issue public key certificates under an appropriate certificate policy or obtains public key certificates under an appropriate certificate policy from an approved service provider.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="common-sl2-cr1-1" name="SL2 - Common - CR1.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-1-auth_access_token_exploit" name="An adversary exploits a weakness in authentication to create an access token to associate a process/thread" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-287">
                  <countermeasures>
                    <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                    <countermeasure ref="unique_id_human_users" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                <countermeasure ref="unique_id_human_users" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-1-unauth_human_sys_access" name="Unauthorized human access to the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                    <countermeasure ref="unique_id_human_users" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                <countermeasure ref="unique_id_human_users" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-1-unid-sys-user" name="Unidentified user of the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="50" availability="25" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-286">
                  <countermeasures>
                    <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                    <countermeasure ref="unique_id_human_users" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                <countermeasure ref="unique_id_human_users" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-10" name="SL2 - Common - CR1.10" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-10-adv_auth_feedback" name="An adversary receives authenticator feedback which helps him in user enumeration. E.g. invalid username. Invalid password." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-209">
                  <countermeasures>
                    <countermeasure ref="obscure_auth_feedback" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="obscure_auth_feedback" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-11" name="SL2 - Common - CR1.11" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-11-adv_bruteforce_auth_creds" name="And adversary can bruteforce authentication credentials" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-522">
                  <countermeasures>
                    <countermeasure ref="limit_invalid_attempts" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="limit_invalid_attempts" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-12" name="SL2 - Common - CR1.12" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-12-adv_no_motd" name="Adversaries who compromised the asset can dispute there was no message stating access was only for authorized personnel" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="show_sys_use_notification" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="show_sys_use_notification" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-13" name="SL2 - Common - CR1.13" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-13-adv_access_untrusted_netw" name="An adversary accesses the asset via an untrusted network" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="75" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="deny_access_via_untrusted_netw_unless_approved" mitigation="50"/>
                    <countermeasure ref="monitor_control_access_methods" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="deny_access_via_untrusted_netw_unless_approved" mitigation="50"/>
                <countermeasure ref="monitor_control_access_methods" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-14" name="SL2 - Common - CR1.14" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-14-rogue_employee_abuse_key" name="A rogue employee has unfettered access to a key and might use it for a malicious purpose or pass it onto someone else to the same end." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-322">
                  <countermeasures>
                    <countermeasure ref="protect_critical_long_lived_symmetric_keys" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_critical_long_lived_symmetric_keys" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-2" name="SL2 - Common - CR1.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-2-unid_sys_backdoor" name="Unidentified backdoor plugged in the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-2-unid_softw_arb_code_exec" name="Unidentified software that executes arbitrary code" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-123">
                  <countermeasures>
                    <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-3" name="SL2 - Common - CR1.3" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-3-adv_get_netw_info" name="An adversary that has previously obtained unauthorized access to certain device resources, uses that access to obtain information such as location and network information" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="provide_acc_mgmt_for_auth_users" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_acc_mgmt_for_auth_users" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-4" name="SL2 - Common - CR1.4" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-4-adv_guess_trusted_id" name="An adversary guesses, obtains, or &quot;rides&quot; a trusted identifier (e.g. session ID, resource ID, cookie, etc.) to perform authorized actions under the guise of an authenticated user or service." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-384">
                  <countermeasures>
                    <countermeasure ref="provide_support_mgmt_id_by_user_group_role" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_support_mgmt_id_by_user_group_role" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-5" name="SL2 - Common - CR1.5" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-5-adv_guess_default_pw" name="An adversary guesses the default password and user of an authenticator (e.g. admin:admin)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-521">
                  <countermeasures>
                    <countermeasure ref="provide_auth_init" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_auth_init" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-5-adv_retrieve_unencrypted_pw" name="An adversary is able to retrieve unencrypted passwords after a DBMS/DB -server breach" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-261">
                  <countermeasures>
                    <countermeasure ref="provide_auth_init" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_auth_init" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-6" name="SL2 - Common - CR1.6" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-6-adv_rogue_dev_mitm" name="An adversary can plant a rogue device to perform man-in-the-middle attacks" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
                    <countermeasure ref="uniquely_id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
                <countermeasure ref="uniquely_id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-7" name="SL2 - Common - CR1.7" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-7-adv_bruteforce_pw" name="An adversary is able to brute force the password" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-307">
                  <countermeasures>
                    <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-7-adv_guess_pw" name="An adversary is able to guess the password based on identifying an authenticator" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-521">
                  <countermeasures>
                    <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-8" name="SL2 - Common - CR1.8" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-8-adv_imposter_signed" name=" An attacker generates a message or datablock that causes the recipient to believe that the message or datablock was generated and cryptographically signed by an authoritative or reputable source, misleading a victim or victim operating system into performing malicious actions" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-347">
                  <countermeasures>
                    <countermeasure ref="if_pki_can_use_best_practices" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="if_pki_can_use_best_practices" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-9" name="SL2 - Common - CR1.9" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-9-adv_gen_certificate" name="An adversary exploits a weakness resulting from using a hashing algorithm with weak collision resistance to generate a certificate signing request (CSR) that contains collision blocks in the &quot;to be signed&quot; part" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-916">
                  <countermeasures>
                    <countermeasure ref="protect_relevant_priv_keys" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_relevant_priv_keys" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-1" name="SL2 - Common - CR2.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-1-adv_connect_with_compromised_acc_make_changes" name="An adversary is able to connect to the asset with a compromised account and is able to make changes to all content available on the asset. (no roles)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_auth_all_users_based_on_resp" mitigation="34"/>
                    <countermeasure ref="enforce_auth_based_on_role_leas_priv" mitigation="33"/>
                    <countermeasure ref="role_to_define_and_modify_perm_mapping" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_auth_all_users_based_on_resp" mitigation="34"/>
                <countermeasure ref="enforce_auth_based_on_role_leas_priv" mitigation="33"/>
                <countermeasure ref="role_to_define_and_modify_perm_mapping" mitigation="33"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-10" name="SL2 - Common - CR2.10" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-10-a_system_user_admin_is_not_notified_when_there_is_an_error_logging_the_system" name="A system user admin is not notified when there is an error logging the asset. Adversaries can use this by making the logging of the asset prone to errors by introducing a bug in the process. Now adversaries can compromise the system without it being logged." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="75" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="alert_personnel_prevent_svc_loss" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="alert_personnel_prevent_svc_loss" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-11" name="SL2 - Common - CR2.11" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-11-an_adversary_compromises_a_system_without_knowing_when_he_compromised_it" name="An adversary compromises a system without knowing when he compromised it." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                    <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-12" name="SL2 - Common - CR2.12" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-12-an_adversary_compromised_the_system_not_knowing_from_where_he_compromised_the_system" name="An adversary compromised the asset, not knowing from where he compromised the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="provide_human_user_interface_determine_user_took_action" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_human_user_interface_determine_user_took_action" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-2" name="SL2 - Common - CR2.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-2-adv_wifi_access" name="An adversary is able to get access to the asset via wireless protocols without authorization" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-3" name="SL2 - Common - CR2.3" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-3-adv_portable_dev_access" name="An adversary can access the asset using a portable device" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_config_usage_restriction" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_config_usage_restriction" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-4" name="SL2 - Common - CR2.4" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-4-an_adversary_can_execute_remote_code" name="An adversary can execute remote code" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-94">
                  <countermeasures>
                    <countermeasure ref="restrict_mobile_code" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="restrict_mobile_code" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-5" name="SL2 - Common - CR2.5" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-5-an_adversary_can_perform_a_dos_attack_by_making_consecutive_authorization_requests" name="An adversary can perform a DoS attack by making consecutive authorization requests" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-307">
                  <countermeasures>
                    <countermeasure ref="prevent_further_access_init_seslock" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="prevent_further_access_init_seslock" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-6" name="SL2 - Common - CR2.6" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-6-an_adversary_could_have_maintained_a_stored_session" name="An adversary could have maintained a stored session. By doing so he keeps access to the asset with the role identified with that corresponding session." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-384">
                  <countermeasures>
                    <countermeasure ref="terminate_remote_session_auto_or_manual" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="terminate_remote_session_auto_or_manual" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-8" name="SL2 - Common - CR2.8" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-8-an_aversary_could_have_compromised_the_sytem_without_you_knowing" name="An adversary could have compromised the system without you knowing what part in the asset was compromised or how he compromised the asset " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-9" name="SL2 - Common - CR2.9" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-9-logging_of_the_system_will_fail_when_allocated_storage_capacity_is_satisfied" name="Logging of the asset will fail when allocated storage capacity is satisfied. Attackers can take advantage of this by creating space-eater malware." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-117">
                  <countermeasures>
                    <countermeasure ref="allocate_sufficient_audit_record_storage" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="allocate_sufficient_audit_record_storage" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-1" name="SL2 - Common - CR3.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-1-adv_intercept_netw_traffic" name="An adversary can intercept network traffic" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="25" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-5">
                  <countermeasures>
                    <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                    <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-2" name="SL2 - Common - CR3.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-2-adv_phishing_mail" name="An adversary sends a phishing mail with a trojan as email attachment" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-507">
                  <countermeasures>
                    <countermeasure ref="employ_maware_protection" mitigation="50"/>
                    <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="employ_maware_protection" mitigation="50"/>
                <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-3" name="SL2 - Common - CR3.3" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-3-adv_plant_backdoor" name="An adversary could have planted a backdoor on the asset without the user ever knowing (no anti-virus)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-147">
                  <countermeasures>
                    <countermeasure ref="verify_intended_ops" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="verify_intended_ops" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-4" name="SL2 - Common - CR3.4" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-4-adv_tamper_software" name="An adversary is able to tamper with software running on a system. On the asset no integrity check is in place." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-354">
                  <countermeasures>
                    <countermeasure ref="integrity_check_software" mitigation="50"/>
                    <countermeasure ref="support_auth_check_on_software_config" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="integrity_check_software" mitigation="50"/>
                <countermeasure ref="support_auth_check_on_software_config" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-5" name="SL2 - Common - CR3.5" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-5-adv_xss" name="An adversary can perform cross site scripting when input is not validated" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-79">
                  <countermeasures>
                    <countermeasure ref="validate_syntax_length_content_of_any_input" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="validate_syntax_length_content_of_any_input" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-6" name="SL2 - Common - CR3.6" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-6-adv_fuzz_sensor" name="An adversary can fuzz a sensor connected to a PLC which will cause the controller to generate wrong output values which can cause big system failures (DoS)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="75" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-20">
                  <countermeasures>
                    <countermeasure ref="phys_logical_connect_to_automation_process" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="phys_logical_connect_to_automation_process" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-7" name="SL2 - Common - CR3.7" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-7-adv_disclose_info_via_error_msg" name="An adversary can use error messages that contain too much information, such as stack traces, to discover vulnerabilities in the running service." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-209">
                  <countermeasures>
                    <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-8" name="SL2 - Common - CR3.8" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-8-adv_mitm_random_sessionid" name="An adversary can perform a man in the middle attack when generating a session with a random session-ID." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="protect_integrity_of_sessions" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_integrity_of_sessions" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-9" name="SL2 - Common - CR3.9" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-9-adv_delete_audit_records_after_breach" name="An adversary is able to delete audit records after a system breach which can make investigations very difficult  " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-732">
                  <countermeasures>
                    <countermeasure ref="protect_audit_info_logs_tools" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_audit_info_logs_tools" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr4-1" name="SL2 - Common - CR4.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr4-1-adv_intercept_unecrypted_file_in_transit" name="An adversary is able to intercept an unencrypted file in transit" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="protect_conf_of_info_at_rest_remote_access" mitigation="50"/>
                    <countermeasure ref="protect_conf_of_info_traversing_netw" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_conf_of_info_at_rest_remote_access" mitigation="50"/>
                <countermeasure ref="protect_conf_of_info_traversing_netw" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr4-2" name="SL2 - Common - CR4.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr4-adv_access_file_unpurged_dev" name="An adversary can access files through a device which was released from active service and which was not purged" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-672">
                  <countermeasures>
                    <countermeasure ref="explicit_read_auth_protect_conf_info" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="explicit_read_auth_protect_conf_info" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr4-3" name="SL2 - Common - CR4.3" desc="" library="iec62443">
          <threats>
            <threat ref="cr4-3-adv_break_alg_weak_encryption" name="When a weak encryption algorithm is used an adversary is capable of breaking the algorithm with standard available tools" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-326">
                  <countermeasures>
                    <countermeasure ref="user_crypto_algs" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="user_crypto_algs" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr5-1" name="SL2 - Common - CR5.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr5-1-network_segmentation_exploit" name="An adversary is able to hop between internal networks since they are not segregated" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="logically_segment_control_system" mitigation="50"/>
                    <countermeasure ref="physically_segment_control_system" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="logically_segment_control_system" mitigation="50"/>
                <countermeasure ref="physically_segment_control_system" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr5-2" name="SL2 - Common - CR5.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr5-2-lateralmovement_exploit" name="An adversary can complete lateral movement within the asset when no protection is set up" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="deny_netw_traffic_allow_netw_traffic_exceptions" mitigation="50"/>
                    <countermeasure ref="monitor_control_comms_zone_boundaries" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="deny_netw_traffic_allow_netw_traffic_exceptions" mitigation="50"/>
                <countermeasure ref="monitor_control_comms_zone_boundaries" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr6-1" name="SL2 - Common - CR6.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr6-1-audit_log_exploit" name="An adversary may compromise the asset and edit the logfiles with non root privileges" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-532">
                  <countermeasures>
                    <countermeasure ref="auth_humans_tools_audit_logs" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="auth_humans_tools_audit_logs" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr6-2" name="SL2 - Common - CR6.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr6-2-continuous_monitoring_exploit" name="An adversary compromises a system  without it being timely notified and detected by for example a IDS" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-693">
                  <countermeasures>
                    <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-1" name="SL2 - Common - CR7.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-1-dos_no_protect" name="Assets might lose the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event.&#10;" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-1100">
                  <countermeasures>
                    <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                    <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-2" name="SL2 - Common - CR7.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-2-rsrc_exhaustion" name="Assets might lose the capability to maintain essential functions as a result of resource exhaustion." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-400">
                  <countermeasures>
                    <countermeasure ref="limit_rsrc_by_sec" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="limit_rsrc_by_sec" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-3" name="SL2 - Common - CR7.3" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-3-no_usr_sys_info_backup" name="Assets might not regain their state (user- and system-level information) due to storage failure." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="50" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-636">
                  <countermeasures>
                    <countermeasure ref="provide_participate_in_sys_level_backup" mitigation="50"/>
                    <countermeasure ref="validate_integrity_of_backup_info" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_participate_in_sys_level_backup" mitigation="50"/>
                <countermeasure ref="validate_integrity_of_backup_info" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-4" name="SL2 - Common - CR7.4" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-4-no_usr_sys_info_backup" name="Assets might not regain their state (user- and system-level information) due to storage failure." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="50" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-636">
                  <countermeasures>
                    <countermeasure ref="cap_to_be_recovered_to_known_secure_state" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="cap_to_be_recovered_to_known_secure_state" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-5" name="SL2 - Common - CR7.5" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-5-emergency_power" name="An adversary can cause a power outage of a security system which will give an adversary to compromise the asset." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="switch_to_and_from_emergency_power_supply" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="switch_to_and_from_emergency_power_supply" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-6" name="SL2 - Common - CR7.6" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-6-unauth_access_default_creds" name="Unauthorized component access might occur as a result of not being able to change default access credentials" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-798">
                  <countermeasures>
                    <countermeasure ref="config_according_to_recommended_netw_and_security" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="config_according_to_recommended_netw_and_security" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-7" name="SL2 - Common - CR7.7" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-7-unauth_access_unnecessary_func" name="Unauthorized component access might occur as a result of not being able to restrict unnecessary functions, ports, protocols and/or services." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-8" name="SL2 - Common - CR7.8" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-8-rogue_assets" name="Rogue assets might enter the network as a result of not being able to verify component identities." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="4db835ac-957e-40b5-8c8c-92ceb7c94c35" diagramComponentId="dbce9da4-3a3c-4df1-b00d-5d68bd8ac665" ref="dfb1f940-d2d7-4c37-aae3-23698c7e5a4c" name="Actuator - Compressor,Motor,Drive" desc="" library="iec62443" parentComponentRef="" componentDefinitionRef="actuator-compressor-motor-drive">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="iec62443-sl2"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-300" name="Channel Accessible by Non-Endpoint ('Man-in-the-Middle')" state="0" impact="100" issueId="">
          <desc>The product does not adequately verify the identity of actors at both ends of a communication channel, or does not adequately ensure the integrity of the channel, in a way that allows the channel to be accessed or influenced by an actor that is not an endpoint.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-284" name="Improper Access Control" state="0" impact="100" issueId="">
          <desc>The software does not restrict or incorrectly restricts access to a resource from an unauthorized actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-287" name="Improper Authentication" state="0" impact="100" issueId="">
          <desc>When an actor claims to have a given identity, the software does not prove or insufficiently proves that the claim is correct.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-79" name="Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')" state="0" impact="100" issueId="">
          <desc>The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-147" name="Improper Neutralization of Input Terminators" state="0" impact="100" issueId="">
          <desc>The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as input terminators when they are sent to a downstream component.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-307" name="Improper Restriction of Excessive Authentication Attempts" state="0" impact="100" issueId="">
          <desc>The software does not implement sufficient measures to prevent multiple failed authentication attempts within in a short time frame, making it more susceptible to brute force attacks.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-354" name="Improper Validation of Integrity Check Value" state="0" impact="100" issueId="">
          <desc>The software does not validate or incorrectly validates the integrity check values or "checksums" of a message. This may prevent it from detecting if the data has been modified or corrupted in transmission.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-532" name="Inclusion of Sensitive Information in Log Files" state="0" impact="100" issueId="">
          <desc>Information written to log files can be of a sensitive nature and give valuable guidance to an attacker or expose sensitive user information.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-732" name="Incorrect Permission Assignment for Critical Resource" state="0" impact="100" issueId="">
          <desc>The software specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-286" name="Incorrect User Management" state="0" impact="100" issueId="">
          <desc>The software does not properly manage a user within its environment.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-209" name="Information Exposure Through an Error Message" state="0" impact="100" issueId="">
          <desc>The software generates an error message that includes sensitive information about its environment, users, or associated data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-1100" name="Insufficient Isolation of System-Dependent Functions" state="0" impact="100" issueId="">
          <desc>The product or code does not isolate system-dependent
					functionality into separate stand-alone modules.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="">
          <desc>When a security-critical event occurs, the software either does not record the event or omits important details about the event when logging it.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-522" name="Insufficiently Protected Credentials" state="0" impact="100" issueId="">
          <desc>This weakness occurs when the application transmits or stores authentication credentials and uses an insecure method that is susceptible to unauthorized interception and/or retrieval.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-5" name="J2EE Misconfiguration: Data Transmission Without Encryption" state="0" impact="100" issueId="">
          <desc>Information sent over a network can be compromised while in transit. An attacker may be able to read or modify the contents if the data are sent in plaintext or are weakly encrypted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-322" name="Key Exchange without Entity Authentication" state="0" impact="100" issueId="">
          <desc>The software performs a key exchange with an actor without verifying the identity of that actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-311" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="">
          <desc>The software does not encrypt sensitive or critical information before storage or transmission.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-636" name="Not Failing Securely ('Failing Open')" state="0" impact="100" issueId="">
          <desc>When the product encounters an error condition or failure, its design requires it to fall back to a state that is less secure than other options that are available, such as selecting the weakest encryption algorithm or using the most permissive access control restrictions.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-693" name="Protection Mechanism Failure" state="0" impact="100" issueId="">
          <desc>The product does not use or incorrectly uses a protection mechanism that provides sufficient defence against directed attacks against the product.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-384" name="Session Fixation" state="0" impact="100" issueId="">
          <desc>Authenticating a user, or otherwise establishing a new user session, without invalidating any existing session identifier gives an attacker the opportunity to steal authenticated sessions.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-507" name="Trojan Horse" state="0" impact="100" issueId="">
          <desc>The software appears to contain benign or useful functionality, but it also contains code that is hidden from normal operation that violates the intended security policy of the user or the system administrator.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-798" name="Use of Hard-coded Credentials" state="0" impact="100" issueId="">
          <desc>The software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-261" name="Weak Cryptography for Passwords" state="0" impact="100" issueId="">
          <desc>Obscuring a password with a trivial encoding does not protect the password.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-521" name="Weak Password Requirements" state="0" impact="100" issueId="">
          <desc>The product does not require that users should have strong passwords, which makes it easier for attackers to compromise user accounts.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="protect_audit_info_logs_tools" name="Assets shall protect audit information, audit logs, and audit tools (if present) from unauthorized access, modification and deletion." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. the storage of audit information to hardware-enforced write-once media.
2. Access Management Process</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.11" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_auth_all_users_based_on_resp" name="Assets shall provide an authorization enforcement mechanism for all identified and authenticated users based on their assigned responsibilities." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. On all interfaces, the control system shall provide the capability to enforce authorizations assigned to all users (humans, software processes and devices) for controlling use of the control system to support segregation of duties and least privilege.
2. Authorization is granting of permissions based on authentication. 
3.All authorization decisions should be made on the server, not the client.  
4. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
5. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
6. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
7. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
8. Server side implementation and presentation layer representations of access control rules must match. 
9. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
10. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
11. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="auth_humans_tools_audit_logs" name="Assets shall provide the capability for authorized humans and/or tools to access audit logs on a read-only basis." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Access Control - Authorize members
2. Least Privilege &amp; Need to Know Basis
3. Review of access </desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="config_according_to_recommended_netw_and_security" name="Assets shall provide the capability to be configured according to recommended network and security configurations as described in guidelines provided by the asset supplier. The asset shall provide an interface to the currently deployed network and security configuration settings." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Devices with network connectivity are capable of being updated from the network.
2. provide the capability to generate a report listing the currently deployed security settings in a machine-readable format.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="continuous_monitor_accepted_sec" name="Assets shall provide the capability to be continuously monitored using commonly accepted security industry practices and recommendations to detect, characterize and report security breaches in a timely manner." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Control system monitoring capability can be achieved through a variety of tools and
techniques (for example, IDS, IPS, malicious code protection mechanisms and network monitoring mechanisms).
2. Monitoring devices should be strategically deployed within the control system (for example, at
selected perimeter locations and near server farms supporting critical applications) to collect
essential information. Monitoring mechanisms may also be deployed at ad hoc locations
within the control system to track specific transactions
3. SIEM Implementation</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="cap_to_be_recovered_to_known_secure_state" name="Assets shall provide the capability to be recovered and reconstituted to a known secure state after a disruption or failure." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Control system recovery and reconstitution to a known secure state means that all system
parameters (either default or configurable) are set to secure values, security-critical patches
are reinstalled, security-related configuration settings are reestablished, system documentation and operating procedures are available, application and system software is reinstalled and configured with secure settings, information from the most recent, known secure backups is loaded and the system is fully tested and functional.
1. Roll back procedure.
2. Secure storage of previous version</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_for_audit_records" name="Assets shall provide the capability to create timestamps (including date and time) for use in audit records." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Timestamps (including date and time) of audit records should be generated using internal
system clocks.
1. provide timestamps for use in audit record generation.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" name="Assets shall provide the capability to create timestamps that are synchronized with a system wide time source." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>to synchronize internal system clocks at a configurable frequency.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="maintain_essential_functions" name="Assets shall provide the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>provide the capability to manage communication loads (such as
using rate limiting) to mitigate the effects of information flooding types of DoS events.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="support_auth_check_on_software_config" name="Assets shall provide the capability to perform or support authenticity checks on software, configuration and other information as well as the recording and reporting of the results of these checks or be integrated into a system that can perform or support authenticity checks." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Integrity verification methods are employed to detect, record, report and protect against software and information tampering.
1. cryptographic hashes
2. Notification of unauthorize changes
Integrity verification methods are employed to detect, record, report and protect against software and information tampering that may occur if other protection mechanisms (such as authorization enforcement) have been circumvented. The control system should employ formal or recommended integrity mechanisms (such as cryptographic hashes).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="integrity_check_software" name="Assets shall provide the capability to perform or support integrity checks on software, configuration and other information as well as the recording and reporting of the results of these checks or be integrated into a system that can perform or support integrity checks." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Integrity verification methods are employed to detect, record, report and protect against software and information tampering.
1. cryptographic hashes
2. Notification of unauthorize changes
Integrity verification methods are employed to detect, record, report and protect against software and information tampering that may occur if other protection mechanisms (such as authorization enforcement) have been circumvented. The control system should employ formal or recommended integrity mechanisms (such as cryptographic hashes).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_critical_long_lived_symmetric_keys" name="Assets shall provide the capability to protect critical, long lived symmetric keys via hardware mechanisms." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. establish the mutual trust using the symmetric key; store securely the shared secret (the authentication is valid as long as the shared secret remains secret); restrict access to the shared secret; ensure that the algorithms and keys used for the symmetric key authentication</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.16" supportedStandardRef="iec-62443-4-2:2019"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" name="Assets shall provide the capability to specifically restrict the use of unnecessary functions, ports, protocols and/or services." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc> 1. capability to specifically prohibit and/or restrict the use of unnecessary functions, ports, protocols and/or services.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="validate_syntax_length_content_of_any_input" name="Assets shall validate the syntax, length and content of any input data that is used as an industrial process control input or input via external interfaces that directly impacts the action of the asset." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. input data validation include out-of-range values for a defined field type, invalid characters in data fields, missing or incomplete data and buffer overflow.
2. SAST &amp; DAST
3. Data from external sources are sanitized based on acceptable formats and lengths.  It is preferred to use white listing, over black listing.
4. Data is validated when crossing API boundaries</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_pw_policy_enforce" name="For assets utilizing password-based authentication, the asset shall provide the capability to enforce configurable password strength based on minimum length and variety of character types. " issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.
Note: A service should employ one or more tactics to prevent or at least slow down a brute force attack, including: blacklisting an IP after 5 unsuccessful attempts, slowing down attempts with increasing timeout delays introduced after 5 unsuccessful attempts, locking out non-admin accounts after 3 unsuccessful attempts.  The account must be disabled for a period of time sufficient to discourage brute force guessing of credentials, but not so long as to allow for a denial-of-service attack to be performed.  Allow non-admin users to reset their own passwords to prevent administrative burden.  If users are allowed to reset their password, best practice is to email a new password to the users email account and require a reset upon next logon.  It is not best practice to simply reset and display the new password on the authentication screen as an attacker may trigger that reset and change the password without notice to the user.  If using a screen reveal of password, should be accompanied by both a known secret of user, such as mothers maiden name and also an email to notify the user of such a change.  Temporary passwords and links should have a short expiration time.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_id_and_auth_for_human_users" name="Identify and authenticate all human users" issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. passwords, tokens, biometrics, Certificates, geographic location
2. role-based or group-based
3. should be applied to both local and remote access to the control system.
4. Least Privilege 
5. Segregation of Duties
6. Authentication types (factors): (1) something you know (a secret) -like username and password; (2) something you have - such as a token device or smart phone; and (3) something you are - such as biometrics. 
7. On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.
8.  services should run as non-root accounts or use SUID accounts that release privilege after service start.  Non-root accounts used for services should not have a shell enabled, i.e. /dev/null should be shell in passwd file.  In cases where the application must run with elevated privileges, raise privileges as late as possible, and drop them as soon as possible.  For windows based services, it is preferred to run the service as SYSTEM, instead of an administrator account, which would have credentials which may be guessed and used in an attack.
9. Authorization is granting of permissions based on authentication. 
10.All authorization decisions should be made on the server, not the client.  
11. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
12. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
13. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
14. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
15. Server side implementation and presentation layer representations of access control rules must match. 
16. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
17. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
18. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources
Note: system level forms of identification, such as IP or MAC address are easily spoofable and therefore do not qualify as a valid form of authentication. Establish and utilize standard, tested, authentication services whenever possible. Use a centralized implementation for all authentication controls, including libraries that call external authentication services. Segregate authentication logic from the resource being requested and use redirection to and from the centralized authentication control.  All authentication controls should fail securely. Enforce password complexity requirements established by policy or regulation. Authentication credentials should be sufficient to withstand attacks that are typical of the threats in the deployed environment. (e.g., requiring the use of alphabetic as well as numeric and/or special characters). Enforce password length requirements established by policy or regulation. Eight characters is commonly used, but 16 is better or consider the use of multi-word pass phrases. Password entry should be obscured on the user's screen. (e.g., on web forms use the input type "password")</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_human_user_interface_determine_user_took_action" name="If an asset provides a human user interface, the asset shall provide the capability to determine whether a given human user took a particular action. Control elements that are not able to support such capability shall be listed in component documents." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Examples of particular actions taken by a user include performing operator actions, changing
control system configurations, creating information, sending a message, approving
information (such as indicating concurrence) and receiving a message.
1. digital signatures, digital message receipts and timestamps</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.14" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" name="If an asset supports usage through wireless interfaces it shall provide the capability to integrate into the asset that supports usage authorization, monitoring and restrictions according to commonly accepted industry practices." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>provide the capability to authorize, monitor and enforce usage restrictions for wireless connectivity to the control system.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_acc_mgmt_for_auth_users" name="Provide support of management of all accounts by authorized users" issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. individual, role-based, device-based, Service &amp;  default account management Policy.
2. Review of accounts.
3. Approvals for creating, disabling, removing or modifying accounts.
4.  On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="id_and_handle_error_conditions" name="The asset shall identify and handle error conditions in a manner such that effective remediation can occur. This shall be done in a manner which does not provide information that could be exploited by adversaries to attack the IACS unless revealing this information is necessary for the timely troubleshooting of problems." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Error messages generated by the control system should provide timely and useful information without revealing potentially harmful information.
2. Vulnerability Assessment &amp; Penetration Testing</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_auth_based_on_role_leas_priv" name="The asset shall provide authorization enforcement for all users based on their assigned responsibilities and least privilege" issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. enforce authorizations assigned to all human users.
2. Use control policies (for example, identity-based policies, role-based policies and rule-based policies) and associated read/write access enforcement mechanisms (for example, access control lists, access control matrices and cryptography).
2. check which roles are assigned to a verified user or asset and which privileges are assigned to these roles – if the requested operation is covered by the permissions, it is executed, otherwise rejected. Only qualified and authorized individuals should obtain the use of control system components for purposes of initiating changes, including upgrades and modifications. Authorization is granting of permissions based on authentication. 
3.All authorization decisions should be made on the server, not the client.  
4. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
5. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
6. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
7. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
8. Server side implementation and presentation layer representations of access control rules must match. 
9. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
10. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
11. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="role_to_define_and_modify_perm_mapping" name="The asset shall provide directly or through a compensating security mechanism, for an authorized role to define and modify the mapping of permissions to roles for all human users" issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>The control system shall provide the capability for an authorized user or role to define and
modify the mapping of permissions to roles for all human users.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="alert_personnel_prevent_svc_loss" name="The asset shall provide the capability to alert personnel and prevent the loss of essential services and functions in the event of an audit processing failure. The control system shall provide the capability to support appropriate actions in response to an audit processing failure according to commonly accepted industry practices and recommendations. " issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Audit generation typically occurs at the source of the event. Audit processing involves
transmission, possible augmentation (such as the addition of a timestamp) and persistent
storage of the audit records. Audit processing failures include, for example, software or
hardware errors, failures in the audit capturing mechanisms and audit storage capacity being
reached or exceeded
1.capability to alert personnel and prevent the loss of essential services and functions in the event of an audit processing failure.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.12" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="show_sys_use_notification" name="The asset shall provide the capability to display a system use notification message before authenticating. The system use notification message shall be configurable by authorized personnel." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. display a system use notification message or warning banners before authenticating &amp; configurable by authorized personnel.
2. Privacy and security policies and procedures need to be consistent with applicable laws,
directives, policies, regulations, standards and guidance.
3. Examples of elements for inclusion in the system use notification message are:
a) that the individual is accessing a specific control system;
b) that system usage may be monitored, recorded and subject to audit;
c) that unauthorized use of the system is prohibited and subject to criminal and/or civil
penalties; and
d) that use of the system indicates consent to monitoring and recording</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.14" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="employ_cypto_mechs_to_recognize_changes" name="The asset shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="employ_maware_protection" name="The asset shall provide the capability to employ malicious code protection mechanisms at all entry and exit points." issueId="" platform="" cost="0" risk="74" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>prevent, detect, mitigate and report instances of detected malicious code (for example, viruses, worms, Trojan horses and spyware) transported by electronic mail, electronic mail attachments, Internet access, removable media (for example, universal serial bus (USB) devices, diskettes or compact disks), PDF documents, web services, network connections and infected laptops or other
common means.
1. Detection Technique  - binary integrity and attributes monitoring, hashing and signature techniques.
2.Mitigation technique - file cleaning, quarantining, file deletion, host communication restriction and IPSs
3. Prevention Technique - application blacklisting and whitelisting techniques, removable media control, sandbox techniques and specific computing platforms mechanisms such as restricted firmware update capabilities, No Execute (NX) bit, data execution prevention (DEP), address space layout randomization (ASLR), stack corruption detection and mandatory access controls.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" name="The asset shall provide the capability to employ protection mechanisms to prevent, detect, report and mitigate the effects of malicious code or unauthorized software. The asset shall provide the capability to update the protection mechanisms." issueId="" platform="" cost="0" risk="74" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>prevent, detect, mitigate and report instances of detected malicious code (for example, viruses, worms, Trojan horses and spyware) transported by electronic mail, electronic mail attachments, Internet access, removable media (for example, universal serial bus (USB) devices, diskettes or compact disks), PDF documents, web services, network connections and infected laptops or other
common means.
1. Detection Technique  - binary integrity and attributes monitoring, hashing and signature techniques.
2.Mitigation technique - file cleaning, quarantining, file deletion, host communication restriction and IPSs
3. Prevention Technique - application blacklisting and whitelisting techniques, removable media control, sandbox techniques and specific computing platforms mechanisms such as restricted firmware update capabilities, No Execute (NX) bit, data execution prevention (DEP), address space layout randomization (ASLR), stack corruption detection and mandatory access controls.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="limit_invalid_attempts" name="The asset shall provide the capability to enforce a limit of a configurable number of consecutive invalid access attempts by any user (human, software process or device) during a configurable time period. The asset shall provide the capability to deny access for a specified period of time or until unlocked by an administrator when this limit has been exceeded." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. limit of a configurable number of consecutive invalid access attempts by any user (human, software process or device).
2. As per Policy.
3. For all invalid authentication attempts, the server should simply respond "invalid attempt, please retry" or similarly vague statement that does not imply partial success.  
Note: A service should employ one or more tactics to prevent or at least slow down a brute force attack, including: blacklisting an IP after 5 unsuccessful attempts, slowing down attempts with increasing timeout delays introduced after 5 unsuccessful attempts, locking out non-admin accounts after 3 unsuccessful attempts.  The account must be disabled for a period of time sufficient to discourage brute force guessing of credentials, but not so long as to allow for a denial-of-service attack to be performed.  Allow non-admin users to reset their own passwords to prevent administrative burden.  If users are allowed to reset their password, best practice is to email a new password to the users email account and require a reset upon next logon.  It is not best practice to simply reset and display the new password on the authentication screen as an attacker may trigger that reset and change the password without notice to the user.  If using a screen reveal of password, should be accompanied by both a known secret of user, such as mothers maiden name and also an email to notify the user of such a change.  Temporary passwords and links should have a short expiration time.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" name="The asset shall provide the capability to generate audit records relevant to security for the following categories: access control, request errors, operating system events, asset events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Generate audit records relevant to security for the following categories: access control, request errors, operating system events, control system events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_auth_init" name="The asset shall provide the capability to: initialize authenticator content; change all default authenticators upon asset installation; change/refresh all authenticators; protect all authenticators from unauthorized disclosure and modification when stored and transmitted." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>&gt; initialize authenticator content;
&gt; change all default authenticators upon control system installation;
&gt; change/refresh all authenticators; and
&gt; protect all authenticators from unauthorized disclosure and modification when stored and
transmitted
2.  tokens, symmetric keys, private keys (part of a public/private key pair), biometrics,
passwords, physical keys and key card
3. Human users should take reasonable measures to safeguard authenticators, including maintaining possession of their individual authenticators, not loaning or sharing authenticators with others and reporting lost or compromised authenticators immediately.
4. cryptographic protections such as encryption or hashing or by handshake protocols which do not require transmission of the password. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.
5. Lockout or loss of control due to security measures is not acceptable. If the control system is required to have a high level of availability, measures should be taken to maintain this high
level of availability (such as compensating physical countermeasures, duplicate keys and
supervisory override).
6. Complex strength of the authentication mechanism</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="logically_segment_control_system" name="The asset shall provide the capability to logically segment asset networks from non-asset networks and to logically segment critical asset networks from other asset networks." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Access from the control system to the World Wide Web should be clearly justified based on
control system operational requirements.
2. Logical Segmentation.
3. Physical Segmentation.
4. capability to provide network services to control system networks, critical or otherwise, without a connection to non-control system networks.
5. capability to logically and physically isolate critical control system networks from non-critical control system networks.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="mitigate_info_effects_flooding_types" name="The asset shall provide the capability to manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. boundary protection
2. restricting the information flow to be unidirectional outbound
3. manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events.
4. restrict the ability of all users (humans, software processes and devices) to cause DoS events which affect other control systems or networks.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="physically_segment_control_system" name="The asset shall provide the capability to physically segment asset networks from non-asset networks and to physically segment critical asset networks from non-critical asset networks." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="prevent_further_access_init_seslock" name="The asset shall provide the capability to prevent further access by initiating a session lock after a configurable time period of inactivity or by manual initiation. The session lock shall remain in effect until the human user who owns the session or another authorized human user re-establishes access using appropriate identification and authentication procedures." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. activate session lock mechanisms automatically after a configurable time period.
2. In some cases, session lock for control system operator workstations or nodes is not advised (for example, sessions which are required for immediate operator responses in emergency situations).
3. In situations where the control system cannot support session lock, the responsible entity should employ appropriate compensating countermeasures (for example, providing increased physical security, personnel security and auditing measures).
Note: Use the server or framework’s session management controls. The application should only recognize these session identifiers as valid. Session identifier creation must always be done on a trusted system (e.g., The server). Session management controls should use well vetted algorithms that ensure sufficiently random session identifiers. Set the domain and path for cookies containing authenticated session identifiers to an appropriately restricted value for the site. Logout functionality should fully terminate the associated session or connection. Logout functionality should be available from all pages protected by authorization. Establish a session inactivity timeout that is as short as possible, based on balancing risk and business functional requirements. In most cases it should be no more than several hours. Disallow persistent logins and enforce periodic session terminations, even when the session is active. Especially for applications supporting rich network connections or connecting to critical systems. Termination times should support business requirements and the user should receive sufficient notification to mitigate negative impacts. If a session was established before login, close that session and establish a new session after a successful login. Generate a new session identifier on any re-authentication. Do not allow concurrent logins with the same user ID. Supplement standard session management for sensitive server-side operations, like account management, by utilizing per-session strong random tokens or parameters. This method can be used to prevent Cross Site Request Forgery attacks. Supplement standard session management for highly sensitive or critical operations by utilizing per-request, as opposed to per-session, strong random tokens or parameters. Set the "secure" attribute for cookies transmitted over an TLS connection. Set cookies with the HttpOnly attribute, unless you specifically require client-side scripts within your application to read or set a cookie's value</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_conf_of_info_traversing_netw" name="The asset shall provide the capability to protect the confidentiality of information at rest and remote access sessions traversing an untrusted network." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_conf_of_info_at_rest_remote_access" name="The asset shall provide the capability to protect the confidentiality of information for which explicit read authorization is supported, whether at rest or in transit." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. physical means, compartmentalization or encryption.
2. configuring explicit read authorizations in the control system.
3. Digital Certificates.
4. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_integrity_of_sessions" name="The asset shall provide the capability to protect the integrity of sessions. The asset shall reject any usage of invalid session IDs." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Use of session integrity mechanisms can have a significant overhead and therefore their use should be considered in light of requirements for real-time communications.
2. capability to invalidate session IDs upon user logout or other session termination (including browser sessions).
3. generate a unique session ID for each session and treat all unexpected session IDs as invalid.
4. generate unique session IDs with commonly accepted sources of randomness.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_integrity_transmitted_info" name="The asset shall provide the capability to protect the integrity of transmitted information." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="report_current_list_of_installed_assets" name="The asset shall provide the capability to report the current list of installed assets and their associated properties." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Usage of component ID, capability and revision level.
2. Formal process of configuration management should be deployed to keep control of the
changes in the component inventory baseline
3. The system requires all default passwords and pass phrases to be changed in order to complete the setup, prior to being operational.  This includes SSID passphrases, default accounts, admin accounts, etc.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_support_mgmt_id_by_user_group_role" name="The asset shall provide the capability to support the management of identifiers by user, group, role or asset interface." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Management of identifiers by group, role or  system interface.
2. Session ID, resource ID, secure cookie management policy.
3. On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.
NOTE: Use the server or framework’s session management controls. The application should only recognize these session identifiers as valid. Session identifier creation must always be done on a trusted system (e.g., The server). Session management controls should use well vetted algorithms that ensure sufficiently random session identifiers. Set the domain and path for cookies containing authenticated session identifiers to an appropriately restricted value for the site. Logout functionality should fully terminate the associated session or connection. Logout functionality should be available from all pages protected by authorization. Establish a session inactivity timeout that is as short as possible, based on balancing risk and business functional requirements. In most cases it should be no more than several hours. Disallow persistent logins and enforce periodic session terminations, even when the session is active. Especially for applications supporting rich network connections or connecting to critical systems. Termination times should support business requirements and the user should receive sufficient notification to mitigate negative impacts. If a session was established before login, close that session and establish a new session after a successful login. Generate a new session identifier on any re-authentication. Do not allow concurrent logins with the same user ID. Supplement standard session management for sensitive server-side operations, like account management, by utilizing per-session strong random tokens or parameters. This method can be used to prevent Cross Site Request Forgery attacks. Supplement standard session management for highly sensitive or critical operations by utilizing per-request, as opposed to per-session, strong random tokens or parameters. Set the "secure" attribute for cookies transmitted over an TLS connection. Set cookies with the HttpOnly attribute, unless you specifically require client-side scripts within your application to read or set a cookie's value
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="verify_intended_ops" name="The asset shall provide the capability to support verification of the intended operation of security functions and report when anomalies are discovered during FAT, SAT and scheduled maintenance. These security functions shall include all those necessary to support the security requirements specified in this standard." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Security verification functions include:
• Verification of antivirus measures by European Institute for Computer Antivirus Research
(EICAR) testing of the control system file system. Antivirus software should detect this and
appropriate incident handling procedures should be triggered.
• Verification of the identification, authentication and use control measures by attempting
access with an unauthorized account (for some functionality this could be automated).
• Verification of IDSs as a security control by including a rule in the IDS that triggers on
irregular, but known non-malicious traffic. The test could then be performed by introducing
traffic that triggers this rule and the appropriate IDS monitoring and incident handling
procedures.
• Confirmation that audit logging is occurring as required by security policies and
procedures and has not been disabled by an internal or external entity.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="switch_to_and_from_emergency_power_supply" name="The asset shall provide the capability to switch to and from an emergency power supply without affecting the existing security state or a documented degraded mode. " issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>There may be instances where compensating countermeasures such as physical door access
control or control system may be affected by loss of base power supply, in which case the emergency power supply should cover those associated systems.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="unique_id_human_users" name="The asset shall provide the capability to uniquely identify and authenticate all human users." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. passwords, tokens, biometrics, Certificates, geographic location
2. role-based or group-based
3. should be applied to both local and remote access to the control system.
4. Least Privilege 
5. Segregation of Duties
6. Authentication types (factors): (1) something you know (a secret) -like username and password; (2) something you have - such as a token device or smart phone; and (3) something you are - such as biometrics. 
7. On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.
8.  services should run as non-root accounts or use SUID accounts that release privilege after service start.  Non-root accounts used for services should not have a shell enabled, i.e. /dev/null should be shell in passwd file.  In cases where the application must run with elevated privileges, raise privileges as late as possible, and drop them as soon as possible.  For windows based services, it is preferred to run the service as SYSTEM, instead of an administrator account, which would have credentials which may be guessed and used in an attack.
9. Authorization is granting of permissions based on authentication. 
10.All authorization decisions should be made on the server, not the client.  
11. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
12. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
13. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
14. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
15. Server side implementation and presentation layer representations of access control rules must match. 
16. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
17. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
18. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources.
19. Assign identifiers that uniquely identify users/devices
a. E.g., employ a unique username-password combination for the user
b. Reasoning: This will prevent user 1 from spoofing as user 2. This is a concern for users with different levels of access.
20. Uniquely identify and authenticate users and devices
c. Multi-factor authentication
d. Use of authentication protocols that require no password/multifactor authentication: e.g., OAuth, OpenID, SAML
Note: system level forms of identification, such as IP or MAC address are easily spoofable and therefore do not qualify as a valid form of authentication. Establish and utilize standard, tested, authentication services whenever possible. Use a centralized implementation for all authentication controls, including libraries that call external authentication services. Segregate authentication logic from the resource being requested and use redirection to and from the centralized authentication control.  All authentication controls should fail securely. Enforce password complexity requirements established by policy or regulation. Authentication credentials should be sufficient to withstand attacks that are typical of the threats in the deployed environment. (e.g., requiring the use of alphabetic as well as numeric and/or special characters). Enforce password length requirements established by policy or regulation. Eight characters is commonly used, but 16 is better or consider the use of multi-word pass phrases. Password entry should be obscured on the user's screen. (e.g., on web forms use the input type "password")</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="validate_integrity_of_backup_info" name="The asset shall provide the capability to verify the reliability of backup mechanisms" issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>provide the capability to verify the reliability of backup mechanisms</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="id_auth_all_users_engaged_in_wireless_comms" name="The controls system shall provide the capability to identify and authenticate all users (humans, software processes or devices) engaged in wireless communication." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Identification of Wireless technologies include, but are not limited to, microwave, satellite, packet radio, Institute of Electrical and Electronics Engineers (IEEE) 802.11x, IEEE 802.15.4 (ZigBee,IEC 62591 – WirelessHART®, ISA-100.11a), IEEE 802.15.1 (Bluetooth), wireless LAN mobile routers, mobile phones with tethering and various infrared technologies.
1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="uniquely_id_auth_all_users_engaged_in_wireless_comms" name="The controls system shall provide the capability to uniquely identify and authenticate all users (humans, software processes or devices) engaged in wireless communication." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Identification of Wireless technologies include, but are not limited to, microwave, satellite, packet radio, Institute of Electrical and Electronics Engineers (IEEE) 802.11x, IEEE 802.15.4 (ZigBee,IEC 62591 – WirelessHART®, ISA-100.11a), IEEE 802.15.1 (Bluetooth), wireless LAN mobile routers, mobile phones with tethering and various infrared technologies.
1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_participate_in_sys_level_backup" name="The identity and location of critical files and the ability to conduct backups of user-level and system-level information (including system state information) shall be supported by the asset without affecting the normal plant operations." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. availability of up-to-date backups.
2. verify the reliability of backup mechanisms.
3. automate the backup function based on a configurable frequency.
4. Review of Failed Backups.
5. Centralize Backup, backup media.
6. Encrypted backup storage</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="common-sl2-cr1-1" name="SL2 - Common - CR1.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-1-auth_access_token_exploit" name="An adversary exploits a weakness in authentication to create an access token to associate a process/thread" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-287">
                  <countermeasures>
                    <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                    <countermeasure ref="unique_id_human_users" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                <countermeasure ref="unique_id_human_users" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-1-unauth_human_sys_access" name="Unauthorized human access to the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                    <countermeasure ref="unique_id_human_users" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                <countermeasure ref="unique_id_human_users" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-1-unid-sys-user" name="Unidentified user of the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="50" availability="25" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-286">
                  <countermeasures>
                    <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                    <countermeasure ref="unique_id_human_users" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                <countermeasure ref="unique_id_human_users" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-11" name="SL2 - Common - CR1.11" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-11-adv_bruteforce_auth_creds" name="And adversary can bruteforce authentication credentials" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-522">
                  <countermeasures>
                    <countermeasure ref="limit_invalid_attempts" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="limit_invalid_attempts" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-12" name="SL2 - Common - CR1.12" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-12-adv_no_motd" name="Adversaries who compromised the asset can dispute there was no message stating access was only for authorized personnel" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="show_sys_use_notification" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="show_sys_use_notification" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-14" name="SL2 - Common - CR1.14" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-14-rogue_employee_abuse_key" name="A rogue employee has unfettered access to a key and might use it for a malicious purpose or pass it onto someone else to the same end." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-322">
                  <countermeasures>
                    <countermeasure ref="protect_critical_long_lived_symmetric_keys" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_critical_long_lived_symmetric_keys" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-3" name="SL2 - Common - CR1.3" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-3-adv_get_netw_info" name="An adversary that has previously obtained unauthorized access to certain device resources, uses that access to obtain information such as location and network information" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="provide_acc_mgmt_for_auth_users" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_acc_mgmt_for_auth_users" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-4" name="SL2 - Common - CR1.4" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-4-adv_guess_trusted_id" name="An adversary guesses, obtains, or &quot;rides&quot; a trusted identifier (e.g. session ID, resource ID, cookie, etc.) to perform authorized actions under the guise of an authenticated user or service." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-384">
                  <countermeasures>
                    <countermeasure ref="provide_support_mgmt_id_by_user_group_role" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_support_mgmt_id_by_user_group_role" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-5" name="SL2 - Common - CR1.5" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-5-adv_guess_default_pw" name="An adversary guesses the default password and user of an authenticator (e.g. admin:admin)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-521">
                  <countermeasures>
                    <countermeasure ref="provide_auth_init" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_auth_init" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-5-adv_retrieve_unencrypted_pw" name="An adversary is able to retrieve unencrypted passwords after a DBMS/DB -server breach" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-261">
                  <countermeasures>
                    <countermeasure ref="provide_auth_init" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_auth_init" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-6" name="SL2 - Common - CR1.6" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-6-adv_rogue_dev_mitm" name="An adversary can plant a rogue device to perform man-in-the-middle attacks" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
                    <countermeasure ref="uniquely_id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
                <countermeasure ref="uniquely_id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-7" name="SL2 - Common - CR1.7" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-7-adv_bruteforce_pw" name="An adversary is able to brute force the password" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-307">
                  <countermeasures>
                    <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-7-adv_guess_pw" name="An adversary is able to guess the password based on identifying an authenticator" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-521">
                  <countermeasures>
                    <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-1" name="SL2 - Common - CR2.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-1-adv_connect_with_compromised_acc_make_changes" name="An adversary is able to connect to the asset with a compromised account and is able to make changes to all content available on the asset. (no roles)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_auth_all_users_based_on_resp" mitigation="34"/>
                    <countermeasure ref="enforce_auth_based_on_role_leas_priv" mitigation="33"/>
                    <countermeasure ref="role_to_define_and_modify_perm_mapping" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_auth_all_users_based_on_resp" mitigation="34"/>
                <countermeasure ref="enforce_auth_based_on_role_leas_priv" mitigation="33"/>
                <countermeasure ref="role_to_define_and_modify_perm_mapping" mitigation="33"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-10" name="SL2 - Common - CR2.10" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-10-a_system_user_admin_is_not_notified_when_there_is_an_error_logging_the_system" name="A system user admin is not notified when there is an error logging the asset. Adversaries can use this by making the logging of the asset prone to errors by introducing a bug in the process. Now adversaries can compromise the system without it being logged." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="75" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="alert_personnel_prevent_svc_loss" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="alert_personnel_prevent_svc_loss" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-11" name="SL2 - Common - CR2.11" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-11-an_adversary_compromises_a_system_without_knowing_when_he_compromised_it" name="An adversary compromises a system without knowing when he compromised it." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                    <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-12" name="SL2 - Common - CR2.12" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-12-an_adversary_compromised_the_system_not_knowing_from_where_he_compromised_the_system" name="An adversary compromised the asset, not knowing from where he compromised the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="provide_human_user_interface_determine_user_took_action" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_human_user_interface_determine_user_took_action" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-2" name="SL2 - Common - CR2.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-2-adv_wifi_access" name="An adversary is able to get access to the asset via wireless protocols without authorization" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-5" name="SL2 - Common - CR2.5" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-5-an_adversary_can_perform_a_dos_attack_by_making_consecutive_authorization_requests" name="An adversary can perform a DoS attack by making consecutive authorization requests" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-307">
                  <countermeasures>
                    <countermeasure ref="prevent_further_access_init_seslock" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="prevent_further_access_init_seslock" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-8" name="SL2 - Common - CR2.8" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-8-an_aversary_could_have_compromised_the_sytem_without_you_knowing" name="An adversary could have compromised the system without you knowing what part in the asset was compromised or how he compromised the asset " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-1" name="SL2 - Common - CR3.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-1-adv_intercept_netw_traffic" name="An adversary can intercept network traffic" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="25" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-5">
                  <countermeasures>
                    <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                    <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-2" name="SL2 - Common - CR3.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-2-adv_phishing_mail" name="An adversary sends a phishing mail with a trojan as email attachment" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-507">
                  <countermeasures>
                    <countermeasure ref="employ_maware_protection" mitigation="50"/>
                    <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="employ_maware_protection" mitigation="50"/>
                <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-3" name="SL2 - Common - CR3.3" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-3-adv_plant_backdoor" name="An adversary could have planted a backdoor on the asset without the user ever knowing (no anti-virus)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-147">
                  <countermeasures>
                    <countermeasure ref="verify_intended_ops" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="verify_intended_ops" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-4" name="SL2 - Common - CR3.4" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-4-adv_tamper_software" name="An adversary is able to tamper with software running on a system. On the asset no integrity check is in place." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-354">
                  <countermeasures>
                    <countermeasure ref="integrity_check_software" mitigation="50"/>
                    <countermeasure ref="support_auth_check_on_software_config" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="integrity_check_software" mitigation="50"/>
                <countermeasure ref="support_auth_check_on_software_config" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-5" name="SL2 - Common - CR3.5" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-5-adv_xss" name="An adversary can perform cross site scripting when input is not validated" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-79">
                  <countermeasures>
                    <countermeasure ref="validate_syntax_length_content_of_any_input" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="validate_syntax_length_content_of_any_input" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-7" name="SL2 - Common - CR3.7" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-7-adv_disclose_info_via_error_msg" name="An adversary can use error messages that contain too much information, such as stack traces, to discover vulnerabilities in the running service." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-209">
                  <countermeasures>
                    <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-8" name="SL2 - Common - CR3.8" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-8-adv_mitm_random_sessionid" name="An adversary can perform a man in the middle attack when generating a session with a random session-ID." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="protect_integrity_of_sessions" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_integrity_of_sessions" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-9" name="SL2 - Common - CR3.9" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-9-adv_delete_audit_records_after_breach" name="An adversary is able to delete audit records after a system breach which can make investigations very difficult  " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-732">
                  <countermeasures>
                    <countermeasure ref="protect_audit_info_logs_tools" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_audit_info_logs_tools" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr4-1" name="SL2 - Common - CR4.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr4-1-adv_intercept_unecrypted_file_in_transit" name="An adversary is able to intercept an unencrypted file in transit" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="protect_conf_of_info_at_rest_remote_access" mitigation="50"/>
                    <countermeasure ref="protect_conf_of_info_traversing_netw" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_conf_of_info_at_rest_remote_access" mitigation="50"/>
                <countermeasure ref="protect_conf_of_info_traversing_netw" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr5-1" name="SL2 - Common - CR5.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr5-1-network_segmentation_exploit" name="An adversary is able to hop between internal networks since they are not segregated" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="logically_segment_control_system" mitigation="50"/>
                    <countermeasure ref="physically_segment_control_system" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="logically_segment_control_system" mitigation="50"/>
                <countermeasure ref="physically_segment_control_system" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr6-1" name="SL2 - Common - CR6.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr6-1-audit_log_exploit" name="An adversary may compromise the asset and edit the logfiles with non root privileges" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-532">
                  <countermeasures>
                    <countermeasure ref="auth_humans_tools_audit_logs" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="auth_humans_tools_audit_logs" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr6-2" name="SL2 - Common - CR6.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr6-2-continuous_monitoring_exploit" name="An adversary compromises a system  without it being timely notified and detected by for example a IDS" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-693">
                  <countermeasures>
                    <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-1" name="SL2 - Common - CR7.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-1-dos_no_protect" name="Assets might lose the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event.&#10;" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-1100">
                  <countermeasures>
                    <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                    <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-3" name="SL2 - Common - CR7.3" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-3-no_usr_sys_info_backup" name="Assets might not regain their state (user- and system-level information) due to storage failure." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="50" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-636">
                  <countermeasures>
                    <countermeasure ref="provide_participate_in_sys_level_backup" mitigation="50"/>
                    <countermeasure ref="validate_integrity_of_backup_info" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_participate_in_sys_level_backup" mitigation="50"/>
                <countermeasure ref="validate_integrity_of_backup_info" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-4" name="SL2 - Common - CR7.4" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-4-no_usr_sys_info_backup" name="Assets might not regain their state (user- and system-level information) due to storage failure." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="50" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-636">
                  <countermeasures>
                    <countermeasure ref="cap_to_be_recovered_to_known_secure_state" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="cap_to_be_recovered_to_known_secure_state" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-5" name="SL2 - Common - CR7.5" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-5-emergency_power" name="An adversary can cause a power outage of a security system which will give an adversary to compromise the asset." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="switch_to_and_from_emergency_power_supply" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="switch_to_and_from_emergency_power_supply" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-6" name="SL2 - Common - CR7.6" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-6-unauth_access_default_creds" name="Unauthorized component access might occur as a result of not being able to change default access credentials" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-798">
                  <countermeasures>
                    <countermeasure ref="config_according_to_recommended_netw_and_security" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="config_according_to_recommended_netw_and_security" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-7" name="SL2 - Common - CR7.7" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-7-unauth_access_unnecessary_func" name="Unauthorized component access might occur as a result of not being able to restrict unnecessary functions, ports, protocols and/or services." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-8" name="SL2 - Common - CR7.8" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-8-rogue_assets" name="Rogue assets might enter the network as a result of not being able to verify component identities." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="0ab03889-aa63-4f6f-bd55-ef70019451cc" diagramComponentId="31ea93c2-e28c-4dfb-9b4b-c9b5784ccf56" ref="dde089ee-7c96-4780-944d-19e9e18abe8d" name="Android,iOS,Windows" desc="" library="iec62443" parentComponentRef="" componentDefinitionRef="android-ios-windows">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="iec62443-sl2"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-300" name="Channel Accessible by Non-Endpoint ('Man-in-the-Middle')" state="0" impact="100" issueId="">
          <desc>The product does not adequately verify the identity of actors at both ends of a communication channel, or does not adequately ensure the integrity of the channel, in a way that allows the channel to be accessed or influenced by an actor that is not an endpoint.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-284" name="Improper Access Control" state="0" impact="100" issueId="">
          <desc>The software does not restrict or incorrectly restricts access to a resource from an unauthorized actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-287" name="Improper Authentication" state="0" impact="100" issueId="">
          <desc>When an actor claims to have a given identity, the software does not prove or insufficiently proves that the claim is correct.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-94" name="Improper Control of Generation of Code ('Code Injection')" state="0" impact="100" issueId="">
          <desc>The software constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behaviour of the intended code segment.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-20" name="Improper Input Validation" state="0" impact="100" issueId="">
          <desc>The product does not validate or incorrectly validates input that can affect the control flow or data flow of a program.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-79" name="Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')" state="0" impact="100" issueId="">
          <desc>The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-147" name="Improper Neutralization of Input Terminators" state="0" impact="100" issueId="">
          <desc>The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as input terminators when they are sent to a downstream component.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-117" name="Improper Output Neutralization for Logs" state="0" impact="100" issueId="">
          <desc>The software does not neutralize or incorrectly neutralizes output that is written to logs.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-307" name="Improper Restriction of Excessive Authentication Attempts" state="0" impact="100" issueId="">
          <desc>The software does not implement sufficient measures to prevent multiple failed authentication attempts within in a short time frame, making it more susceptible to brute force attacks.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-354" name="Improper Validation of Integrity Check Value" state="0" impact="100" issueId="">
          <desc>The software does not validate or incorrectly validates the integrity check values or "checksums" of a message. This may prevent it from detecting if the data has been modified or corrupted in transmission.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-347" name="Improper Verification of Cryptographic Signature" state="0" impact="100" issueId="">
          <desc>The software does not verify, or incorrectly verifies, the cryptographic signature for data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-326" name="Inadequate Encryption Strength" state="0" impact="100" issueId="">
          <desc>The software stores or transmits sensitive data using an encryption scheme that is theoretically sound, but is not strong enough for the level of protection required.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-532" name="Inclusion of Sensitive Information in Log Files" state="0" impact="100" issueId="">
          <desc>Information written to log files can be of a sensitive nature and give valuable guidance to an attacker or expose sensitive user information.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-732" name="Incorrect Permission Assignment for Critical Resource" state="0" impact="100" issueId="">
          <desc>The software specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-286" name="Incorrect User Management" state="0" impact="100" issueId="">
          <desc>The software does not properly manage a user within its environment.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-209" name="Information Exposure Through an Error Message" state="0" impact="100" issueId="">
          <desc>The software generates an error message that includes sensitive information about its environment, users, or associated data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-1100" name="Insufficient Isolation of System-Dependent Functions" state="0" impact="100" issueId="">
          <desc>The product or code does not isolate system-dependent
					functionality into separate stand-alone modules.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="">
          <desc>When a security-critical event occurs, the software either does not record the event or omits important details about the event when logging it.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-522" name="Insufficiently Protected Credentials" state="0" impact="100" issueId="">
          <desc>This weakness occurs when the application transmits or stores authentication credentials and uses an insecure method that is susceptible to unauthorized interception and/or retrieval.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-5" name="J2EE Misconfiguration: Data Transmission Without Encryption" state="0" impact="100" issueId="">
          <desc>Information sent over a network can be compromised while in transit. An attacker may be able to read or modify the contents if the data are sent in plaintext or are weakly encrypted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-322" name="Key Exchange without Entity Authentication" state="0" impact="100" issueId="">
          <desc>The software performs a key exchange with an actor without verifying the identity of that actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-311" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="">
          <desc>The software does not encrypt sensitive or critical information before storage or transmission.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-636" name="Not Failing Securely ('Failing Open')" state="0" impact="100" issueId="">
          <desc>When the product encounters an error condition or failure, its design requires it to fall back to a state that is less secure than other options that are available, such as selecting the weakest encryption algorithm or using the most permissive access control restrictions.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-672" name="Operation on a Resource after Expiration or Release" state="0" impact="100" issueId="">
          <desc>The software uses, accesses, or otherwise operates on a resource after that resource has been expired, released, or revoked.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-693" name="Protection Mechanism Failure" state="0" impact="100" issueId="">
          <desc>The product does not use or incorrectly uses a protection mechanism that provides sufficient defence against directed attacks against the product.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-384" name="Session Fixation" state="0" impact="100" issueId="">
          <desc>Authenticating a user, or otherwise establishing a new user session, without invalidating any existing session identifier gives an attacker the opportunity to steal authenticated sessions.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-507" name="Trojan Horse" state="0" impact="100" issueId="">
          <desc>The software appears to contain benign or useful functionality, but it also contains code that is hidden from normal operation that violates the intended security policy of the user or the system administrator.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-400" name="Uncontrolled Resource Consumption" state="0" impact="100" issueId="">
          <desc>The software does not properly control the allocation and maintenance of a limited resource thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-601" name="URL Redirection to Untrusted Site ('Open Redirect')" state="0" impact="100" issueId="">
          <desc>A web application accepts a user-controlled input that specifies a link to an external site, and uses that link in a Redirect. This simplifies phishing attacks.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-798" name="Use of Hard-coded Credentials" state="0" impact="100" issueId="">
          <desc>The software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-916" name="Use of Password Hash With Insufficient Computational Effort" state="0" impact="100" issueId="">
          <desc>The software generates a hash for a password, but it uses a scheme that does not provide a sufficient level of computational effort that would make password cracking attacks infeasible or expensive.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-261" name="Weak Cryptography for Passwords" state="0" impact="100" issueId="">
          <desc>Obscuring a password with a trivial encoding does not protect the password.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-521" name="Weak Password Requirements" state="0" impact="100" issueId="">
          <desc>The product does not require that users should have strong passwords, which makes it easier for attackers to compromise user accounts.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-123" name="Write-what-where Condition" state="0" impact="100" issueId="">
          <desc>Any condition where the attacker has the ability to write an arbitrary value to an arbitrary location, often as the result of a buffer overflow.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="protect_audit_info_logs_tools" name="Assets shall protect audit information, audit logs, and audit tools (if present) from unauthorized access, modification and deletion." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. the storage of audit information to hardware-enforced write-once media.
2. Access Management Process</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.11" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_auth_all_users_based_on_resp" name="Assets shall provide an authorization enforcement mechanism for all identified and authenticated users based on their assigned responsibilities." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. On all interfaces, the control system shall provide the capability to enforce authorizations assigned to all users (humans, software processes and devices) for controlling use of the control system to support segregation of duties and least privilege.
2. Authorization is granting of permissions based on authentication. 
3.All authorization decisions should be made on the server, not the client.  
4. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
5. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
6. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
7. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
8. Server side implementation and presentation layer representations of access control rules must match. 
9. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
10. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
11. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="auth_humans_tools_audit_logs" name="Assets shall provide the capability for authorized humans and/or tools to access audit logs on a read-only basis." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Access Control - Authorize members
2. Least Privilege &amp; Need to Know Basis
3. Review of access </desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="config_according_to_recommended_netw_and_security" name="Assets shall provide the capability to be configured according to recommended network and security configurations as described in guidelines provided by the asset supplier. The asset shall provide an interface to the currently deployed network and security configuration settings." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Devices with network connectivity are capable of being updated from the network.
2. provide the capability to generate a report listing the currently deployed security settings in a machine-readable format.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="continuous_monitor_accepted_sec" name="Assets shall provide the capability to be continuously monitored using commonly accepted security industry practices and recommendations to detect, characterize and report security breaches in a timely manner." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Control system monitoring capability can be achieved through a variety of tools and
techniques (for example, IDS, IPS, malicious code protection mechanisms and network monitoring mechanisms).
2. Monitoring devices should be strategically deployed within the control system (for example, at
selected perimeter locations and near server farms supporting critical applications) to collect
essential information. Monitoring mechanisms may also be deployed at ad hoc locations
within the control system to track specific transactions
3. SIEM Implementation</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="cap_to_be_recovered_to_known_secure_state" name="Assets shall provide the capability to be recovered and reconstituted to a known secure state after a disruption or failure." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Control system recovery and reconstitution to a known secure state means that all system
parameters (either default or configurable) are set to secure values, security-critical patches
are reinstalled, security-related configuration settings are reestablished, system documentation and operating procedures are available, application and system software is reinstalled and configured with secure settings, information from the most recent, known secure backups is loaded and the system is fully tested and functional.
1. Roll back procedure.
2. Secure storage of previous version</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_for_audit_records" name="Assets shall provide the capability to create timestamps (including date and time) for use in audit records." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Timestamps (including date and time) of audit records should be generated using internal
system clocks.
1. provide timestamps for use in audit record generation.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" name="Assets shall provide the capability to create timestamps that are synchronized with a system wide time source." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>to synchronize internal system clocks at a configurable frequency.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="explicit_read_auth_protect_conf_info" name="Assets shall provide the capability to erase all information, for which explicit read authorization is supported, from assets to be released from active service and/or decommissioned." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Removal of a control system component from active service should not provide the
opportunity for unintentional release of information for which explicit read authorization is
supported.
1. Information produced by the actions of a user or role (or the actions of a software process
acting on behalf of a user or role) should not be disclosed to a different user or role in an
uncontrolled fashion.
2. Purging of all information from volatile memory, active service or decommissioned system.
3. Ensure purging successfully occurs
NOTE Volatile memory resources are those that typically do not retain information after being released to memory management. However, there are attacks against random access memory (RAM) that have the potential to extract key material or other confidential data before it is actually over-written. Therefore, it is a commonly accepted practice to purge all unique data and connections to unique data from volatile shared memory when that memory is released back to the control system for use by a different user, such that this data is not visible or accessible to the new user.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="limit_rsrc_by_sec" name="Assets shall provide the capability to limit the use of resources by security functions to protect against resource exhaustion." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Resource management (for example, network segmentation or priority schemes) prevents a
lower-priority software process from delaying or interfering with the control system servicing
any higher-priority software process.
1. initiating network scans, patching and/or antivirus checks on an operating system.
2. Traffic rate limiting schemes should be considered as a mitigation technique.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="maintain_essential_functions" name="Assets shall provide the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>provide the capability to manage communication loads (such as
using rate limiting) to mitigate the effects of information flooding types of DoS events.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="support_auth_check_on_software_config" name="Assets shall provide the capability to perform or support authenticity checks on software, configuration and other information as well as the recording and reporting of the results of these checks or be integrated into a system that can perform or support authenticity checks." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Integrity verification methods are employed to detect, record, report and protect against software and information tampering.
1. cryptographic hashes
2. Notification of unauthorize changes
Integrity verification methods are employed to detect, record, report and protect against software and information tampering that may occur if other protection mechanisms (such as authorization enforcement) have been circumvented. The control system should employ formal or recommended integrity mechanisms (such as cryptographic hashes).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="integrity_check_software" name="Assets shall provide the capability to perform or support integrity checks on software, configuration and other information as well as the recording and reporting of the results of these checks or be integrated into a system that can perform or support integrity checks." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Integrity verification methods are employed to detect, record, report and protect against software and information tampering.
1. cryptographic hashes
2. Notification of unauthorize changes
Integrity verification methods are employed to detect, record, report and protect against software and information tampering that may occur if other protection mechanisms (such as authorization enforcement) have been circumvented. The control system should employ formal or recommended integrity mechanisms (such as cryptographic hashes).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_critical_long_lived_symmetric_keys" name="Assets shall provide the capability to protect critical, long lived symmetric keys via hardware mechanisms." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. establish the mutual trust using the symmetric key; store securely the shared secret (the authentication is valid as long as the shared secret remains secret); restrict access to the shared secret; ensure that the algorithms and keys used for the symmetric key authentication</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.16" supportedStandardRef="iec-62443-4-2:2019"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" name="Assets shall provide the capability to specifically restrict the use of unnecessary functions, ports, protocols and/or services." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc> 1. capability to specifically prohibit and/or restrict the use of unnecessary functions, ports, protocols and/or services.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="validate_syntax_length_content_of_any_input" name="Assets shall validate the syntax, length and content of any input data that is used as an industrial process control input or input via external interfaces that directly impacts the action of the asset." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. input data validation include out-of-range values for a defined field type, invalid characters in data fields, missing or incomplete data and buffer overflow.
2. SAST &amp; DAST
3. Data from external sources are sanitized based on acceptable formats and lengths.  It is preferred to use white listing, over black listing.
4. Data is validated when crossing API boundaries</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="phys_logical_connect_to_automation_process" name="Assets that physically or logically connect to an automation process shall provide the capability to set outputs to a predetermined state if normal operation as defined by the asset supplier cannot be maintained." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. The appropriate predetermined state of control system outputs is application dependent and could be one of the following user configurable options:
• Unpowered – the outputs fail to the unpowered state
• Hold – the outputs fail to the last-known good value
• Fixed – the outputs fail to a fixed value that is determined by the asset owner or an
application
2. All user supplied data is encoded prior to output. (i.e.. Html encoding, special character encoding).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_pw_policy_enforce" name="For assets utilizing password-based authentication, the asset shall provide the capability to enforce configurable password strength based on minimum length and variety of character types. " issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.
Note: A service should employ one or more tactics to prevent or at least slow down a brute force attack, including: blacklisting an IP after 5 unsuccessful attempts, slowing down attempts with increasing timeout delays introduced after 5 unsuccessful attempts, locking out non-admin accounts after 3 unsuccessful attempts.  The account must be disabled for a period of time sufficient to discourage brute force guessing of credentials, but not so long as to allow for a denial-of-service attack to be performed.  Allow non-admin users to reset their own passwords to prevent administrative burden.  If users are allowed to reset their password, best practice is to email a new password to the users email account and require a reset upon next logon.  It is not best practice to simply reset and display the new password on the authentication screen as an attacker may trigger that reset and change the password without notice to the user.  If using a screen reveal of password, should be accompanied by both a known secret of user, such as mothers maiden name and also an email to notify the user of such a change.  Temporary passwords and links should have a short expiration time.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_id_and_auth_for_human_users" name="Identify and authenticate all human users" issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. passwords, tokens, biometrics, Certificates, geographic location
2. role-based or group-based
3. should be applied to both local and remote access to the control system.
4. Least Privilege 
5. Segregation of Duties
6. Authentication types (factors): (1) something you know (a secret) -like username and password; (2) something you have - such as a token device or smart phone; and (3) something you are - such as biometrics. 
7. On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.
8.  services should run as non-root accounts or use SUID accounts that release privilege after service start.  Non-root accounts used for services should not have a shell enabled, i.e. /dev/null should be shell in passwd file.  In cases where the application must run with elevated privileges, raise privileges as late as possible, and drop them as soon as possible.  For windows based services, it is preferred to run the service as SYSTEM, instead of an administrator account, which would have credentials which may be guessed and used in an attack.
9. Authorization is granting of permissions based on authentication. 
10.All authorization decisions should be made on the server, not the client.  
11. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
12. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
13. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
14. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
15. Server side implementation and presentation layer representations of access control rules must match. 
16. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
17. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
18. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources
Note: system level forms of identification, such as IP or MAC address are easily spoofable and therefore do not qualify as a valid form of authentication. Establish and utilize standard, tested, authentication services whenever possible. Use a centralized implementation for all authentication controls, including libraries that call external authentication services. Segregate authentication logic from the resource being requested and use redirection to and from the centralized authentication control.  All authentication controls should fail securely. Enforce password complexity requirements established by policy or regulation. Authentication credentials should be sufficient to withstand attacks that are typical of the threats in the deployed environment. (e.g., requiring the use of alphabetic as well as numeric and/or special characters). Enforce password length requirements established by policy or regulation. Eight characters is commonly used, but 16 is better or consider the use of multi-word pass phrases. Password entry should be obscured on the user's screen. (e.g., on web forms use the input type "password")</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_human_user_interface_determine_user_took_action" name="If an asset provides a human user interface, the asset shall provide the capability to determine whether a given human user took a particular action. Control elements that are not able to support such capability shall be listed in component documents." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Examples of particular actions taken by a user include performing operator actions, changing
control system configurations, creating information, sending a message, approving
information (such as indicating concurrence) and receiving a message.
1. digital signatures, digital message receipts and timestamps</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.14" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="terminate_remote_session_auto_or_manual" name="If an asset supports remote sessions, the asset shall provide the capability to terminate a remote session either automatically after a configurable time period of inactivity, manually by a local authority, or manually by the user (human, software process or device) who initiated the session." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Terminate a remote session either automatically after a configurable time period of inactivity, manually by a local authority, or manually by the user (human, software process or device) who initiated the session.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" name="If an asset supports usage through wireless interfaces it shall provide the capability to integrate into the asset that supports usage authorization, monitoring and restrictions according to commonly accepted industry practices." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>provide the capability to authorize, monitor and enforce usage restrictions for wireless connectivity to the control system.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="user_crypto_algs" name="If cryptography is required, the asset shall use cryptographic algorithms, key sizes and mechanisms for key establishment and management according to commonly accepted security industry practices and recommendations." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. document the practices and procedures relating to cryptographic key establishment and management.
2. utilize established and tested encryption and hash algorithms, such as the advanced
encryption standard (AES) and the secure hash algorithm (SHA) series, and key sizes based
on an assigned standard.
3. Key generation needs to be performed using an effective random number generator.
4. The security policies and procedures for key management need to address
periodic key changes, key destruction, key distribution and encryption key backup in
accordance with defined standards</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_acc_mgmt_for_auth_users" name="Provide support of management of all accounts by authorized users" issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. individual, role-based, device-based, Service &amp;  default account management Policy.
2. Review of accounts.
3. Approvals for creating, disabling, removing or modifying accounts.
4.  On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="allocate_sufficient_audit_record_storage" name="The asset shall allocate sufficient audit record storage capacity according to commonly recognized recommendations for log management and system configuration. The asset shall provide auditing mechanisms to reduce the likelihood of such capacity being exceeded." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>The control system shall allocate sufficient audit record storage capacity according to
commonly recognized recommendations for log management and system configuration. The
control system shall provide auditing mechanisms to reduce the likelihood of such capacity
being exceeded</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.11" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="id_and_handle_error_conditions" name="The asset shall identify and handle error conditions in a manner such that effective remediation can occur. This shall be done in a manner which does not provide information that could be exploited by adversaries to attack the IACS unless revealing this information is necessary for the timely troubleshooting of problems." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Error messages generated by the control system should provide timely and useful information without revealing potentially harmful information.
2. Vulnerability Assessment &amp; Penetration Testing</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_auth_based_on_role_leas_priv" name="The asset shall provide authorization enforcement for all users based on their assigned responsibilities and least privilege" issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. enforce authorizations assigned to all human users.
2. Use control policies (for example, identity-based policies, role-based policies and rule-based policies) and associated read/write access enforcement mechanisms (for example, access control lists, access control matrices and cryptography).
2. check which roles are assigned to a verified user or asset and which privileges are assigned to these roles – if the requested operation is covered by the permissions, it is executed, otherwise rejected. Only qualified and authorized individuals should obtain the use of control system components for purposes of initiating changes, including upgrades and modifications. Authorization is granting of permissions based on authentication. 
3.All authorization decisions should be made on the server, not the client.  
4. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
5. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
6. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
7. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
8. Server side implementation and presentation layer representations of access control rules must match. 
9. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
10. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
11. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="role_to_define_and_modify_perm_mapping" name="The asset shall provide directly or through a compensating security mechanism, for an authorized role to define and modify the mapping of permissions to roles for all human users" issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>The control system shall provide the capability for an authorized user or role to define and
modify the mapping of permissions to roles for all human users.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="alert_personnel_prevent_svc_loss" name="The asset shall provide the capability to alert personnel and prevent the loss of essential services and functions in the event of an audit processing failure. The control system shall provide the capability to support appropriate actions in response to an audit processing failure according to commonly accepted industry practices and recommendations. " issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Audit generation typically occurs at the source of the event. Audit processing involves
transmission, possible augmentation (such as the addition of a timestamp) and persistent
storage of the audit records. Audit processing failures include, for example, software or
hardware errors, failures in the audit capturing mechanisms and audit storage capacity being
reached or exceeded
1.capability to alert personnel and prevent the loss of essential services and functions in the event of an audit processing failure.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.12" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_config_usage_restriction" name="The asset shall provide the capability to automatically enforce configurable usage restrictions" issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Authenticate &amp; Authorize devices before allowing connection.
2. Digital+E46 Signatures</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="deny_access_via_untrusted_netw_unless_approved" name="The asset shall provide the capability to deny access requests via untrusted networks unless approved by an assigned role." issueId="" platform="" cost="0" risk="74" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.15" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="deny_netw_traffic_allow_netw_traffic_exceptions" name="The asset shall provide the capability to deny network traffic by default and allow network traffic by exception (also termed deny all, permit by exception)." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>deny network traffic by default and allow network traffic by exception (also termed deny all, permit by exception).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="show_sys_use_notification" name="The asset shall provide the capability to display a system use notification message before authenticating. The system use notification message shall be configurable by authorized personnel." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. display a system use notification message or warning banners before authenticating &amp; configurable by authorized personnel.
2. Privacy and security policies and procedures need to be consistent with applicable laws,
directives, policies, regulations, standards and guidance.
3. Examples of elements for inclusion in the system use notification message are:
a) that the individual is accessing a specific control system;
b) that system usage may be monitored, recorded and subject to audit;
c) that unauthorized use of the system is prohibited and subject to criminal and/or civil
penalties; and
d) that use of the system indicates consent to monitoring and recording</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.14" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="employ_cypto_mechs_to_recognize_changes" name="The asset shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="employ_maware_protection" name="The asset shall provide the capability to employ malicious code protection mechanisms at all entry and exit points." issueId="" platform="" cost="0" risk="74" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>prevent, detect, mitigate and report instances of detected malicious code (for example, viruses, worms, Trojan horses and spyware) transported by electronic mail, electronic mail attachments, Internet access, removable media (for example, universal serial bus (USB) devices, diskettes or compact disks), PDF documents, web services, network connections and infected laptops or other
common means.
1. Detection Technique  - binary integrity and attributes monitoring, hashing and signature techniques.
2.Mitigation technique - file cleaning, quarantining, file deletion, host communication restriction and IPSs
3. Prevention Technique - application blacklisting and whitelisting techniques, removable media control, sandbox techniques and specific computing platforms mechanisms such as restricted firmware update capabilities, No Execute (NX) bit, data execution prevention (DEP), address space layout randomization (ASLR), stack corruption detection and mandatory access controls.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" name="The asset shall provide the capability to employ protection mechanisms to prevent, detect, report and mitigate the effects of malicious code or unauthorized software. The asset shall provide the capability to update the protection mechanisms." issueId="" platform="" cost="0" risk="74" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>prevent, detect, mitigate and report instances of detected malicious code (for example, viruses, worms, Trojan horses and spyware) transported by electronic mail, electronic mail attachments, Internet access, removable media (for example, universal serial bus (USB) devices, diskettes or compact disks), PDF documents, web services, network connections and infected laptops or other
common means.
1. Detection Technique  - binary integrity and attributes monitoring, hashing and signature techniques.
2.Mitigation technique - file cleaning, quarantining, file deletion, host communication restriction and IPSs
3. Prevention Technique - application blacklisting and whitelisting techniques, removable media control, sandbox techniques and specific computing platforms mechanisms such as restricted firmware update capabilities, No Execute (NX) bit, data execution prevention (DEP), address space layout randomization (ASLR), stack corruption detection and mandatory access controls.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="limit_invalid_attempts" name="The asset shall provide the capability to enforce a limit of a configurable number of consecutive invalid access attempts by any user (human, software process or device) during a configurable time period. The asset shall provide the capability to deny access for a specified period of time or until unlocked by an administrator when this limit has been exceeded." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. limit of a configurable number of consecutive invalid access attempts by any user (human, software process or device).
2. As per Policy.
3. For all invalid authentication attempts, the server should simply respond "invalid attempt, please retry" or similarly vague statement that does not imply partial success.  
Note: A service should employ one or more tactics to prevent or at least slow down a brute force attack, including: blacklisting an IP after 5 unsuccessful attempts, slowing down attempts with increasing timeout delays introduced after 5 unsuccessful attempts, locking out non-admin accounts after 3 unsuccessful attempts.  The account must be disabled for a period of time sufficient to discourage brute force guessing of credentials, but not so long as to allow for a denial-of-service attack to be performed.  Allow non-admin users to reset their own passwords to prevent administrative burden.  If users are allowed to reset their password, best practice is to email a new password to the users email account and require a reset upon next logon.  It is not best practice to simply reset and display the new password on the authentication screen as an attacker may trigger that reset and change the password without notice to the user.  If using a screen reveal of password, should be accompanied by both a known secret of user, such as mothers maiden name and also an email to notify the user of such a change.  Temporary passwords and links should have a short expiration time.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="restrict_mobile_code" name="The asset shall provide the capability to enforce usage restrictions for mobile code technologies based on the potential to cause damage to the asset." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Mobile code technologies include, but are not limited to, Java, JavaScript, ActiveX, portable
document format (PDF), Postscript, Shockwave movies, Flash animations and VBScript.
1. The control system shall provide the capability to enforce usage restrictions for mobile code technologies based on the potential to cause damage to the control system that include:
a) preventing the execution of mobile code;
b) requiring proper authentication and authorization for origin of the code;
c) restricting mobile code transfer to/from the control system; and
d) monitoring the use of mobile code.
2. verify integrity of the mobile code before allowing code execution with HASH/Codesigning technique.
3. both the selection and use of mobile code installed on servers and
mobile code downloaded and executed.
4. prevent the development, acquisition or introduction of unacceptable mobile code within the control system. For example, mobile code exchanges may be disallowed directly with the
control system, but may be allowed in a controlled adjacent environment.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" name="The asset shall provide the capability to generate audit records relevant to security for the following categories: access control, request errors, operating system events, asset events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Generate audit records relevant to security for the following categories: access control, request errors, operating system events, control system events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" name="The asset shall provide the capability to identify and authenticate all software processes and devices. This capability shall enforce such identification and authentication on all interfaces which provide access to the asset to support least privilege in accordance with applicable security policies and procedures." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. identity bound to the physical device
2. passwords, tokens or location (physical or logical)
3. role-based, group-based or entity-based,
4. Combination of 1) something you know (a secret) -like username and password; (2) something you have - such as a token device or smart phone; and (3) something you are - such as biometrics. 
5. Assign identifiers that uniquely identify users/devices
a. E.g., employ a unique username-password combination for the user
b. Reasoning: This will prevent user 1 from spoofing as user 2. This is a concern for users with different levels of access.
6. Uniquely identify and authenticate users and devices
c. Multi-factor authentication
d. Use of authentication protocols that require no password/multifactor authentication: e.g., OAuth, OpenID, SAML</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_auth_init" name="The asset shall provide the capability to: initialize authenticator content; change all default authenticators upon asset installation; change/refresh all authenticators; protect all authenticators from unauthorized disclosure and modification when stored and transmitted." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>&gt; initialize authenticator content;
&gt; change all default authenticators upon control system installation;
&gt; change/refresh all authenticators; and
&gt; protect all authenticators from unauthorized disclosure and modification when stored and
transmitted
2.  tokens, symmetric keys, private keys (part of a public/private key pair), biometrics,
passwords, physical keys and key card
3. Human users should take reasonable measures to safeguard authenticators, including maintaining possession of their individual authenticators, not loaning or sharing authenticators with others and reporting lost or compromised authenticators immediately.
4. cryptographic protections such as encryption or hashing or by handshake protocols which do not require transmission of the password. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.
5. Lockout or loss of control due to security measures is not acceptable. If the control system is required to have a high level of availability, measures should be taken to maintain this high
level of availability (such as compensating physical countermeasures, duplicate keys and
supervisory override).
6. Complex strength of the authentication mechanism</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="logically_segment_control_system" name="The asset shall provide the capability to logically segment asset networks from non-asset networks and to logically segment critical asset networks from other asset networks." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Access from the control system to the World Wide Web should be clearly justified based on
control system operational requirements.
2. Logical Segmentation.
3. Physical Segmentation.
4. capability to provide network services to control system networks, critical or otherwise, without a connection to non-control system networks.
5. capability to logically and physically isolate critical control system networks from non-critical control system networks.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="mitigate_info_effects_flooding_types" name="The asset shall provide the capability to manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. boundary protection
2. restricting the information flow to be unidirectional outbound
3. manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events.
4. restrict the ability of all users (humans, software processes and devices) to cause DoS events which affect other control systems or networks.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="monitor_control_access_methods" name="The asset shall provide the capability to monitor and control all methods of access to the asset via untrusted networks." issueId="" platform="" cost="0" risk="74" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Examples of access to the control system via untrusted networks typically include remote
access methods (such as dial-up, broadband and wireless) as well as connections from a
company’s office (non-control system) network.
1. restrict access achieved through dial-up connections (for example, limiting dial-up access based upon the source of the request).
2. protect against unauthorized connections or subversion of authorized connections (for example, using virtual private network technology).
3. Access via untrusted networks to geographically remote control system component locations (for example, control centers and field locations) should only be enabled when necessary and authenticated.
4. Multifactor authentication for remote user access to the control system.
5. Use of VPNs &amp; Firewalls.
6. Monitoring &amp; Logging of Access for control systems.
7. deny access requests via untrusted networks unless approved by an assigned role.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.15" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="monitor_control_comms_zone_boundaries" name="The asset shall provide the capability to monitor and control communications at zone boundaries to enforce the compartmentalization defined in the risk-based zones and conduits model." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Any connections to external networks or other control systems should occur through managed
interfaces consisting of appropriate boundary protection devices (for example, proxies,
gateways, routers, firewalls, unidirectional gateways, guards and encrypted tunnels) arranged
in an effective architecture (for example, firewalls protecting application gateways residing in
a DMZ).
1. capability to deny network traffic by default and allow network traffic by exception (also termed deny all, permit by exception).
2. capability to prevent any communication through the control system boundary (also termed island mode).
3. The control system shall provide the capability to prevent any communication through the
control system boundary when there is an operational failure of the boundary protection
mechanisms (also termed fail close). This ‘fail close’ functionality shall be designed such that
it does not interfere with the operation of a SIS or other safety-related functions.
4. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="physically_segment_control_system" name="The asset shall provide the capability to physically segment asset networks from non-asset networks and to physically segment critical asset networks from non-critical asset networks." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="prevent_further_access_init_seslock" name="The asset shall provide the capability to prevent further access by initiating a session lock after a configurable time period of inactivity or by manual initiation. The session lock shall remain in effect until the human user who owns the session or another authorized human user re-establishes access using appropriate identification and authentication procedures." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. activate session lock mechanisms automatically after a configurable time period.
2. In some cases, session lock for control system operator workstations or nodes is not advised (for example, sessions which are required for immediate operator responses in emergency situations).
3. In situations where the control system cannot support session lock, the responsible entity should employ appropriate compensating countermeasures (for example, providing increased physical security, personnel security and auditing measures).
Note: Use the server or framework’s session management controls. The application should only recognize these session identifiers as valid. Session identifier creation must always be done on a trusted system (e.g., The server). Session management controls should use well vetted algorithms that ensure sufficiently random session identifiers. Set the domain and path for cookies containing authenticated session identifiers to an appropriately restricted value for the site. Logout functionality should fully terminate the associated session or connection. Logout functionality should be available from all pages protected by authorization. Establish a session inactivity timeout that is as short as possible, based on balancing risk and business functional requirements. In most cases it should be no more than several hours. Disallow persistent logins and enforce periodic session terminations, even when the session is active. Especially for applications supporting rich network connections or connecting to critical systems. Termination times should support business requirements and the user should receive sufficient notification to mitigate negative impacts. If a session was established before login, close that session and establish a new session after a successful login. Generate a new session identifier on any re-authentication. Do not allow concurrent logins with the same user ID. Supplement standard session management for sensitive server-side operations, like account management, by utilizing per-session strong random tokens or parameters. This method can be used to prevent Cross Site Request Forgery attacks. Supplement standard session management for highly sensitive or critical operations by utilizing per-request, as opposed to per-session, strong random tokens or parameters. Set the "secure" attribute for cookies transmitted over an TLS connection. Set cookies with the HttpOnly attribute, unless you specifically require client-side scripts within your application to read or set a cookie's value</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="prevent_general_purpose_person2person_msg" name="The asset shall provide the capability to prevent general purpose person-to-person messages from being received from users or systems external to the asset." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>General purpose person-to-person communications systems include but are not limited to:
email systems, forms of social media (Twitter, Facebook, picture galleries, etc.) or any
message systems that permit the transmission of any type of executable file.
1. restrictions and limiting data flow as described elsewhere in this standard to general purpose
person-to-person communication systems
2. restrict email or other messaging solutions that provide internal computer-to-external computer communications using outbound messages.
3. Users may not be given the ability to attach files or other information to these outbound-only messages at the time the messages are created by the system.
4. capability to prevent both transmission and receipt of general purpose person-to-person messages.
5. support partitioning of data, applications and services based on criticality to facilitate implementing a zoning model.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_conf_of_info_traversing_netw" name="The asset shall provide the capability to protect the confidentiality of information at rest and remote access sessions traversing an untrusted network." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_conf_of_info_at_rest_remote_access" name="The asset shall provide the capability to protect the confidentiality of information for which explicit read authorization is supported, whether at rest or in transit." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. physical means, compartmentalization or encryption.
2. configuring explicit read authorizations in the control system.
3. Digital Certificates.
4. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_integrity_of_sessions" name="The asset shall provide the capability to protect the integrity of sessions. The asset shall reject any usage of invalid session IDs." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Use of session integrity mechanisms can have a significant overhead and therefore their use should be considered in light of requirements for real-time communications.
2. capability to invalidate session IDs upon user logout or other session termination (including browser sessions).
3. generate a unique session ID for each session and treat all unexpected session IDs as invalid.
4. generate unique session IDs with commonly accepted sources of randomness.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_integrity_transmitted_info" name="The asset shall provide the capability to protect the integrity of transmitted information." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_relevant_priv_keys" name="The asset shall provide the capability to protect the relevant private keys via hardware mechanisms according to commonly accepted security industry practices and recommendations." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Follow All below Steps:
l) validate certificates by checking the validity of the signature of a given certificate;
m) validate certificates by constructing a certification path to an accepted CA or in the case of
self-signed certificates by deploying leaf certificates to all hosts which communicate with
the subject to which the certificate is issued;
n) validate certificates by checking a given certificate’s revocation status;
o) establish user (human, software process or device) control of the corresponding private
key; and
p) map the authenticated identity to a user (human, software process or device).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.11" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="report_current_list_of_installed_assets" name="The asset shall provide the capability to report the current list of installed assets and their associated properties." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Usage of component ID, capability and revision level.
2. Formal process of configuration management should be deployed to keep control of the
changes in the component inventory baseline
3. The system requires all default passwords and pass phrases to be changed in order to complete the setup, prior to being operational.  This includes SSID passphrases, default accounts, admin accounts, etc.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="partitioning_of_data_based_criticality" name="The asset shall provide the capability to support partitioning of data, applications and services based on criticality to facilitate implementing a zoning model." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>capability to support partitioning of data, applications and services based on criticality to facilitate implementing a zoning model.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_support_mgmt_id_by_user_group_role" name="The asset shall provide the capability to support the management of identifiers by user, group, role or asset interface." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Management of identifiers by group, role or  system interface.
2. Session ID, resource ID, secure cookie management policy.
3. On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.
NOTE: Use the server or framework’s session management controls. The application should only recognize these session identifiers as valid. Session identifier creation must always be done on a trusted system (e.g., The server). Session management controls should use well vetted algorithms that ensure sufficiently random session identifiers. Set the domain and path for cookies containing authenticated session identifiers to an appropriately restricted value for the site. Logout functionality should fully terminate the associated session or connection. Logout functionality should be available from all pages protected by authorization. Establish a session inactivity timeout that is as short as possible, based on balancing risk and business functional requirements. In most cases it should be no more than several hours. Disallow persistent logins and enforce periodic session terminations, even when the session is active. Especially for applications supporting rich network connections or connecting to critical systems. Termination times should support business requirements and the user should receive sufficient notification to mitigate negative impacts. If a session was established before login, close that session and establish a new session after a successful login. Generate a new session identifier on any re-authentication. Do not allow concurrent logins with the same user ID. Supplement standard session management for sensitive server-side operations, like account management, by utilizing per-session strong random tokens or parameters. This method can be used to prevent Cross Site Request Forgery attacks. Supplement standard session management for highly sensitive or critical operations by utilizing per-request, as opposed to per-session, strong random tokens or parameters. Set the "secure" attribute for cookies transmitted over an TLS connection. Set cookies with the HttpOnly attribute, unless you specifically require client-side scripts within your application to read or set a cookie's value
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="verify_intended_ops" name="The asset shall provide the capability to support verification of the intended operation of security functions and report when anomalies are discovered during FAT, SAT and scheduled maintenance. These security functions shall include all those necessary to support the security requirements specified in this standard." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Security verification functions include:
• Verification of antivirus measures by European Institute for Computer Antivirus Research
(EICAR) testing of the control system file system. Antivirus software should detect this and
appropriate incident handling procedures should be triggered.
• Verification of the identification, authentication and use control measures by attempting
access with an unauthorized account (for some functionality this could be automated).
• Verification of IDSs as a security control by including a rule in the IDS that triggers on
irregular, but known non-malicious traffic. The test could then be performed by introducing
traffic that triggers this rule and the appropriate IDS monitoring and incident handling
procedures.
• Confirmation that audit logging is occurring as required by security policies and
procedures and has not been disabled by an internal or external entity.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="switch_to_and_from_emergency_power_supply" name="The asset shall provide the capability to switch to and from an emergency power supply without affecting the existing security state or a documented degraded mode. " issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>There may be instances where compensating countermeasures such as physical door access
control or control system may be affected by loss of base power supply, in which case the emergency power supply should cover those associated systems.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="unique_id_human_users" name="The asset shall provide the capability to uniquely identify and authenticate all human users." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. passwords, tokens, biometrics, Certificates, geographic location
2. role-based or group-based
3. should be applied to both local and remote access to the control system.
4. Least Privilege 
5. Segregation of Duties
6. Authentication types (factors): (1) something you know (a secret) -like username and password; (2) something you have - such as a token device or smart phone; and (3) something you are - such as biometrics. 
7. On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.
8.  services should run as non-root accounts or use SUID accounts that release privilege after service start.  Non-root accounts used for services should not have a shell enabled, i.e. /dev/null should be shell in passwd file.  In cases where the application must run with elevated privileges, raise privileges as late as possible, and drop them as soon as possible.  For windows based services, it is preferred to run the service as SYSTEM, instead of an administrator account, which would have credentials which may be guessed and used in an attack.
9. Authorization is granting of permissions based on authentication. 
10.All authorization decisions should be made on the server, not the client.  
11. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
12. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
13. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
14. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
15. Server side implementation and presentation layer representations of access control rules must match. 
16. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
17. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
18. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources.
19. Assign identifiers that uniquely identify users/devices
a. E.g., employ a unique username-password combination for the user
b. Reasoning: This will prevent user 1 from spoofing as user 2. This is a concern for users with different levels of access.
20. Uniquely identify and authenticate users and devices
c. Multi-factor authentication
d. Use of authentication protocols that require no password/multifactor authentication: e.g., OAuth, OpenID, SAML
Note: system level forms of identification, such as IP or MAC address are easily spoofable and therefore do not qualify as a valid form of authentication. Establish and utilize standard, tested, authentication services whenever possible. Use a centralized implementation for all authentication controls, including libraries that call external authentication services. Segregate authentication logic from the resource being requested and use redirection to and from the centralized authentication control.  All authentication controls should fail securely. Enforce password complexity requirements established by policy or regulation. Authentication credentials should be sufficient to withstand attacks that are typical of the threats in the deployed environment. (e.g., requiring the use of alphabetic as well as numeric and/or special characters). Enforce password length requirements established by policy or regulation. Eight characters is commonly used, but 16 is better or consider the use of multi-word pass phrases. Password entry should be obscured on the user's screen. (e.g., on web forms use the input type "password")</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="validate_integrity_of_backup_info" name="The asset shall provide the capability to verify the reliability of backup mechanisms" issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>provide the capability to verify the reliability of backup mechanisms</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="id_auth_all_users_engaged_in_wireless_comms" name="The controls system shall provide the capability to identify and authenticate all users (humans, software processes or devices) engaged in wireless communication." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Identification of Wireless technologies include, but are not limited to, microwave, satellite, packet radio, Institute of Electrical and Electronics Engineers (IEEE) 802.11x, IEEE 802.15.4 (ZigBee,IEC 62591 – WirelessHART®, ISA-100.11a), IEEE 802.15.1 (Bluetooth), wireless LAN mobile routers, mobile phones with tethering and various infrared technologies.
1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="uniquely_id_auth_all_users_engaged_in_wireless_comms" name="The controls system shall provide the capability to uniquely identify and authenticate all users (humans, software processes or devices) engaged in wireless communication." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Identification of Wireless technologies include, but are not limited to, microwave, satellite, packet radio, Institute of Electrical and Electronics Engineers (IEEE) 802.11x, IEEE 802.15.4 (ZigBee,IEC 62591 – WirelessHART®, ISA-100.11a), IEEE 802.15.1 (Bluetooth), wireless LAN mobile routers, mobile phones with tethering and various infrared technologies.
1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_participate_in_sys_level_backup" name="The identity and location of critical files and the ability to conduct backups of user-level and system-level information (including system state information) shall be supported by the asset without affecting the normal plant operations." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. availability of up-to-date backups.
2. verify the reliability of backup mechanisms.
3. automate the backup function based on a configurable frequency.
4. Review of Failed Backups.
5. Centralize Backup, backup media.
6. Encrypted backup storage</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="obscure_auth_feedback" name="When an asset provides an authentication capability, the asset shall provide the capability to obscure feedback of authenticator information during the authentication process." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. obscure feedback of authentication information during the authentication process by displaying asterisks or other random characters when a human user types in a password obscures feedback of authentication information.
2. entry of wired equivalent privacy (WEP) keys, secure socket shell (SSH) token entry and
RSA one-time passwords.
3. not provide any hint as to the reason for the authentication failure, such as “unknown user name”.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.12" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="if_pki_can_use_best_practices" name="Where PKI is utilized, the asset shall provide the capability to operate a PKI according to commonly accepted best practices or obtain public key certificates from an existing PKI." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Obtain public key certificates from an existing PKI.
2. organization’s certificate policy
3. agency should issue public key certificates under an appropriate certificate policy or obtains public key certificates under an appropriate certificate policy from an approved service provider.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="common-sl2-cr1-1" name="SL2 - Common - CR1.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-1-auth_access_token_exploit" name="An adversary exploits a weakness in authentication to create an access token to associate a process/thread" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-287">
                  <countermeasures>
                    <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                    <countermeasure ref="unique_id_human_users" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                <countermeasure ref="unique_id_human_users" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-1-unauth_human_sys_access" name="Unauthorized human access to the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                    <countermeasure ref="unique_id_human_users" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                <countermeasure ref="unique_id_human_users" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-1-unid-sys-user" name="Unidentified user of the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="50" availability="25" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-286">
                  <countermeasures>
                    <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                    <countermeasure ref="unique_id_human_users" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                <countermeasure ref="unique_id_human_users" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-10" name="SL2 - Common - CR1.10" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-10-adv_auth_feedback" name="An adversary receives authenticator feedback which helps him in user enumeration. E.g. invalid username. Invalid password." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-209">
                  <countermeasures>
                    <countermeasure ref="obscure_auth_feedback" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="obscure_auth_feedback" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-11" name="SL2 - Common - CR1.11" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-11-adv_bruteforce_auth_creds" name="And adversary can bruteforce authentication credentials" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-522">
                  <countermeasures>
                    <countermeasure ref="limit_invalid_attempts" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="limit_invalid_attempts" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-12" name="SL2 - Common - CR1.12" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-12-adv_no_motd" name="Adversaries who compromised the asset can dispute there was no message stating access was only for authorized personnel" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="show_sys_use_notification" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="show_sys_use_notification" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-13" name="SL2 - Common - CR1.13" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-13-adv_access_untrusted_netw" name="An adversary accesses the asset via an untrusted network" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="75" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="deny_access_via_untrusted_netw_unless_approved" mitigation="50"/>
                    <countermeasure ref="monitor_control_access_methods" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="deny_access_via_untrusted_netw_unless_approved" mitigation="50"/>
                <countermeasure ref="monitor_control_access_methods" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-14" name="SL2 - Common - CR1.14" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-14-rogue_employee_abuse_key" name="A rogue employee has unfettered access to a key and might use it for a malicious purpose or pass it onto someone else to the same end." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-322">
                  <countermeasures>
                    <countermeasure ref="protect_critical_long_lived_symmetric_keys" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_critical_long_lived_symmetric_keys" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-2" name="SL2 - Common - CR1.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-2-unid_sys_backdoor" name="Unidentified backdoor plugged in the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-2-unid_softw_arb_code_exec" name="Unidentified software that executes arbitrary code" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-123">
                  <countermeasures>
                    <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-3" name="SL2 - Common - CR1.3" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-3-adv_get_netw_info" name="An adversary that has previously obtained unauthorized access to certain device resources, uses that access to obtain information such as location and network information" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="provide_acc_mgmt_for_auth_users" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_acc_mgmt_for_auth_users" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-4" name="SL2 - Common - CR1.4" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-4-adv_guess_trusted_id" name="An adversary guesses, obtains, or &quot;rides&quot; a trusted identifier (e.g. session ID, resource ID, cookie, etc.) to perform authorized actions under the guise of an authenticated user or service." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-384">
                  <countermeasures>
                    <countermeasure ref="provide_support_mgmt_id_by_user_group_role" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_support_mgmt_id_by_user_group_role" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-5" name="SL2 - Common - CR1.5" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-5-adv_guess_default_pw" name="An adversary guesses the default password and user of an authenticator (e.g. admin:admin)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-521">
                  <countermeasures>
                    <countermeasure ref="provide_auth_init" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_auth_init" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-5-adv_retrieve_unencrypted_pw" name="An adversary is able to retrieve unencrypted passwords after a DBMS/DB -server breach" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-261">
                  <countermeasures>
                    <countermeasure ref="provide_auth_init" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_auth_init" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-6" name="SL2 - Common - CR1.6" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-6-adv_rogue_dev_mitm" name="An adversary can plant a rogue device to perform man-in-the-middle attacks" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
                    <countermeasure ref="uniquely_id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
                <countermeasure ref="uniquely_id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-7" name="SL2 - Common - CR1.7" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-7-adv_bruteforce_pw" name="An adversary is able to brute force the password" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-307">
                  <countermeasures>
                    <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-7-adv_guess_pw" name="An adversary is able to guess the password based on identifying an authenticator" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-521">
                  <countermeasures>
                    <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-8" name="SL2 - Common - CR1.8" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-8-adv_imposter_signed" name=" An attacker generates a message or datablock that causes the recipient to believe that the message or datablock was generated and cryptographically signed by an authoritative or reputable source, misleading a victim or victim operating system into performing malicious actions" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-347">
                  <countermeasures>
                    <countermeasure ref="if_pki_can_use_best_practices" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="if_pki_can_use_best_practices" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-9" name="SL2 - Common - CR1.9" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-9-adv_gen_certificate" name="An adversary exploits a weakness resulting from using a hashing algorithm with weak collision resistance to generate a certificate signing request (CSR) that contains collision blocks in the &quot;to be signed&quot; part" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-916">
                  <countermeasures>
                    <countermeasure ref="protect_relevant_priv_keys" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_relevant_priv_keys" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-1" name="SL2 - Common - CR2.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-1-adv_connect_with_compromised_acc_make_changes" name="An adversary is able to connect to the asset with a compromised account and is able to make changes to all content available on the asset. (no roles)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_auth_all_users_based_on_resp" mitigation="34"/>
                    <countermeasure ref="enforce_auth_based_on_role_leas_priv" mitigation="33"/>
                    <countermeasure ref="role_to_define_and_modify_perm_mapping" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_auth_all_users_based_on_resp" mitigation="34"/>
                <countermeasure ref="enforce_auth_based_on_role_leas_priv" mitigation="33"/>
                <countermeasure ref="role_to_define_and_modify_perm_mapping" mitigation="33"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-10" name="SL2 - Common - CR2.10" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-10-a_system_user_admin_is_not_notified_when_there_is_an_error_logging_the_system" name="A system user admin is not notified when there is an error logging the asset. Adversaries can use this by making the logging of the asset prone to errors by introducing a bug in the process. Now adversaries can compromise the system without it being logged." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="75" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="alert_personnel_prevent_svc_loss" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="alert_personnel_prevent_svc_loss" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-11" name="SL2 - Common - CR2.11" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-11-an_adversary_compromises_a_system_without_knowing_when_he_compromised_it" name="An adversary compromises a system without knowing when he compromised it." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                    <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-12" name="SL2 - Common - CR2.12" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-12-an_adversary_compromised_the_system_not_knowing_from_where_he_compromised_the_system" name="An adversary compromised the asset, not knowing from where he compromised the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="provide_human_user_interface_determine_user_took_action" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_human_user_interface_determine_user_took_action" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-2" name="SL2 - Common - CR2.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-2-adv_wifi_access" name="An adversary is able to get access to the asset via wireless protocols without authorization" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-3" name="SL2 - Common - CR2.3" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-3-adv_portable_dev_access" name="An adversary can access the asset using a portable device" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_config_usage_restriction" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_config_usage_restriction" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-4" name="SL2 - Common - CR2.4" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-4-an_adversary_can_execute_remote_code" name="An adversary can execute remote code" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-94">
                  <countermeasures>
                    <countermeasure ref="restrict_mobile_code" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="restrict_mobile_code" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-5" name="SL2 - Common - CR2.5" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-5-an_adversary_can_perform_a_dos_attack_by_making_consecutive_authorization_requests" name="An adversary can perform a DoS attack by making consecutive authorization requests" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-307">
                  <countermeasures>
                    <countermeasure ref="prevent_further_access_init_seslock" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="prevent_further_access_init_seslock" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-6" name="SL2 - Common - CR2.6" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-6-an_adversary_could_have_maintained_a_stored_session" name="An adversary could have maintained a stored session. By doing so he keeps access to the asset with the role identified with that corresponding session." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-384">
                  <countermeasures>
                    <countermeasure ref="terminate_remote_session_auto_or_manual" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="terminate_remote_session_auto_or_manual" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-8" name="SL2 - Common - CR2.8" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-8-an_aversary_could_have_compromised_the_sytem_without_you_knowing" name="An adversary could have compromised the system without you knowing what part in the asset was compromised or how he compromised the asset " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-9" name="SL2 - Common - CR2.9" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-9-logging_of_the_system_will_fail_when_allocated_storage_capacity_is_satisfied" name="Logging of the asset will fail when allocated storage capacity is satisfied. Attackers can take advantage of this by creating space-eater malware." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-117">
                  <countermeasures>
                    <countermeasure ref="allocate_sufficient_audit_record_storage" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="allocate_sufficient_audit_record_storage" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-1" name="SL2 - Common - CR3.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-1-adv_intercept_netw_traffic" name="An adversary can intercept network traffic" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="25" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-5">
                  <countermeasures>
                    <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                    <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-2" name="SL2 - Common - CR3.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-2-adv_phishing_mail" name="An adversary sends a phishing mail with a trojan as email attachment" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-507">
                  <countermeasures>
                    <countermeasure ref="employ_maware_protection" mitigation="50"/>
                    <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="employ_maware_protection" mitigation="50"/>
                <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-3" name="SL2 - Common - CR3.3" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-3-adv_plant_backdoor" name="An adversary could have planted a backdoor on the asset without the user ever knowing (no anti-virus)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-147">
                  <countermeasures>
                    <countermeasure ref="verify_intended_ops" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="verify_intended_ops" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-4" name="SL2 - Common - CR3.4" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-4-adv_tamper_software" name="An adversary is able to tamper with software running on a system. On the asset no integrity check is in place." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-354">
                  <countermeasures>
                    <countermeasure ref="integrity_check_software" mitigation="50"/>
                    <countermeasure ref="support_auth_check_on_software_config" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="integrity_check_software" mitigation="50"/>
                <countermeasure ref="support_auth_check_on_software_config" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-5" name="SL2 - Common - CR3.5" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-5-adv_xss" name="An adversary can perform cross site scripting when input is not validated" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-79">
                  <countermeasures>
                    <countermeasure ref="validate_syntax_length_content_of_any_input" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="validate_syntax_length_content_of_any_input" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-6" name="SL2 - Common - CR3.6" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-6-adv_fuzz_sensor" name="An adversary can fuzz a sensor connected to a PLC which will cause the controller to generate wrong output values which can cause big system failures (DoS)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="75" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-20">
                  <countermeasures>
                    <countermeasure ref="phys_logical_connect_to_automation_process" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="phys_logical_connect_to_automation_process" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-7" name="SL2 - Common - CR3.7" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-7-adv_disclose_info_via_error_msg" name="An adversary can use error messages that contain too much information, such as stack traces, to discover vulnerabilities in the running service." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-209">
                  <countermeasures>
                    <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-8" name="SL2 - Common - CR3.8" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-8-adv_mitm_random_sessionid" name="An adversary can perform a man in the middle attack when generating a session with a random session-ID." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="protect_integrity_of_sessions" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_integrity_of_sessions" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-9" name="SL2 - Common - CR3.9" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-9-adv_delete_audit_records_after_breach" name="An adversary is able to delete audit records after a system breach which can make investigations very difficult  " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-732">
                  <countermeasures>
                    <countermeasure ref="protect_audit_info_logs_tools" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_audit_info_logs_tools" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr4-1" name="SL2 - Common - CR4.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr4-1-adv_intercept_unecrypted_file_in_transit" name="An adversary is able to intercept an unencrypted file in transit" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="protect_conf_of_info_at_rest_remote_access" mitigation="50"/>
                    <countermeasure ref="protect_conf_of_info_traversing_netw" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_conf_of_info_at_rest_remote_access" mitigation="50"/>
                <countermeasure ref="protect_conf_of_info_traversing_netw" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr4-2" name="SL2 - Common - CR4.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr4-adv_access_file_unpurged_dev" name="An adversary can access files through a device which was released from active service and which was not purged" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-672">
                  <countermeasures>
                    <countermeasure ref="explicit_read_auth_protect_conf_info" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="explicit_read_auth_protect_conf_info" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr4-3" name="SL2 - Common - CR4.3" desc="" library="iec62443">
          <threats>
            <threat ref="cr4-3-adv_break_alg_weak_encryption" name="When a weak encryption algorithm is used an adversary is capable of breaking the algorithm with standard available tools" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-326">
                  <countermeasures>
                    <countermeasure ref="user_crypto_algs" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="user_crypto_algs" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr5-1" name="SL2 - Common - CR5.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr5-1-network_segmentation_exploit" name="An adversary is able to hop between internal networks since they are not segregated" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="logically_segment_control_system" mitigation="50"/>
                    <countermeasure ref="physically_segment_control_system" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="logically_segment_control_system" mitigation="50"/>
                <countermeasure ref="physically_segment_control_system" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr5-2" name="SL2 - Common - CR5.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr5-2-lateralmovement_exploit" name="An adversary can complete lateral movement within the asset when no protection is set up" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="deny_netw_traffic_allow_netw_traffic_exceptions" mitigation="50"/>
                    <countermeasure ref="monitor_control_comms_zone_boundaries" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="deny_netw_traffic_allow_netw_traffic_exceptions" mitigation="50"/>
                <countermeasure ref="monitor_control_comms_zone_boundaries" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr5-3" name="SL2 - Common - CR5.3" desc="" library="iec62443">
          <threats>
            <threat ref="cr5-3-social_engineering_exploit" name="An adversary may introduce malware into the asset by phishing (email,facebook,...)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-601">
                  <countermeasures>
                    <countermeasure ref="prevent_general_purpose_person2person_msg" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="prevent_general_purpose_person2person_msg" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr5-4" name="SL2 - Common - CR5.4" desc="" library="iec62443">
          <threats>
            <threat ref="cr5-4-adv_dos_nonessential_sys_part" name="An adversary performs a DoS attack on a non-essential part of the asset which causes the core service to break" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-400">
                  <countermeasures>
                    <countermeasure ref="partitioning_of_data_based_criticality" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="partitioning_of_data_based_criticality" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr6-1" name="SL2 - Common - CR6.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr6-1-audit_log_exploit" name="An adversary may compromise the asset and edit the logfiles with non root privileges" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-532">
                  <countermeasures>
                    <countermeasure ref="auth_humans_tools_audit_logs" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="auth_humans_tools_audit_logs" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr6-2" name="SL2 - Common - CR6.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr6-2-continuous_monitoring_exploit" name="An adversary compromises a system  without it being timely notified and detected by for example a IDS" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-693">
                  <countermeasures>
                    <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-1" name="SL2 - Common - CR7.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-1-dos_no_protect" name="Assets might lose the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event.&#10;" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-1100">
                  <countermeasures>
                    <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                    <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-2" name="SL2 - Common - CR7.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-2-rsrc_exhaustion" name="Assets might lose the capability to maintain essential functions as a result of resource exhaustion." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-400">
                  <countermeasures>
                    <countermeasure ref="limit_rsrc_by_sec" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="limit_rsrc_by_sec" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-3" name="SL2 - Common - CR7.3" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-3-no_usr_sys_info_backup" name="Assets might not regain their state (user- and system-level information) due to storage failure." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="50" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-636">
                  <countermeasures>
                    <countermeasure ref="provide_participate_in_sys_level_backup" mitigation="50"/>
                    <countermeasure ref="validate_integrity_of_backup_info" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_participate_in_sys_level_backup" mitigation="50"/>
                <countermeasure ref="validate_integrity_of_backup_info" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-4" name="SL2 - Common - CR7.4" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-4-no_usr_sys_info_backup" name="Assets might not regain their state (user- and system-level information) due to storage failure." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="50" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-636">
                  <countermeasures>
                    <countermeasure ref="cap_to_be_recovered_to_known_secure_state" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="cap_to_be_recovered_to_known_secure_state" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-5" name="SL2 - Common - CR7.5" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-5-emergency_power" name="An adversary can cause a power outage of a security system which will give an adversary to compromise the asset." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="switch_to_and_from_emergency_power_supply" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="switch_to_and_from_emergency_power_supply" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-6" name="SL2 - Common - CR7.6" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-6-unauth_access_default_creds" name="Unauthorized component access might occur as a result of not being able to change default access credentials" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-798">
                  <countermeasures>
                    <countermeasure ref="config_according_to_recommended_netw_and_security" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="config_according_to_recommended_netw_and_security" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-7" name="SL2 - Common - CR7.7" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-7-unauth_access_unnecessary_func" name="Unauthorized component access might occur as a result of not being able to restrict unnecessary functions, ports, protocols and/or services." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-8" name="SL2 - Common - CR7.8" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-8-rogue_assets" name="Rogue assets might enter the network as a result of not being able to verify component identities." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="034c96fa-61f1-4aa3-83ae-0c57a7129531" diagramComponentId="b3600b3d-3e35-47c0-b64b-3bb12739bf81" ref="20d1b545-072d-4d4b-98aa-60bd2adb30bd" name="RF Interface - Bluetooth" desc="" library="iec62443" parentComponentRef="" componentDefinitionRef="rf-interface-bluetooth">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="iec62443-sl2"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-300" name="Channel Accessible by Non-Endpoint ('Man-in-the-Middle')" state="0" impact="100" issueId="">
          <desc>The product does not adequately verify the identity of actors at both ends of a communication channel, or does not adequately ensure the integrity of the channel, in a way that allows the channel to be accessed or influenced by an actor that is not an endpoint.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-284" name="Improper Access Control" state="0" impact="100" issueId="">
          <desc>The software does not restrict or incorrectly restricts access to a resource from an unauthorized actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-287" name="Improper Authentication" state="0" impact="100" issueId="">
          <desc>When an actor claims to have a given identity, the software does not prove or insufficiently proves that the claim is correct.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-94" name="Improper Control of Generation of Code ('Code Injection')" state="0" impact="100" issueId="">
          <desc>The software constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behaviour of the intended code segment.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-307" name="Improper Restriction of Excessive Authentication Attempts" state="0" impact="100" issueId="">
          <desc>The software does not implement sufficient measures to prevent multiple failed authentication attempts within in a short time frame, making it more susceptible to brute force attacks.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-354" name="Improper Validation of Integrity Check Value" state="0" impact="100" issueId="">
          <desc>The software does not validate or incorrectly validates the integrity check values or "checksums" of a message. This may prevent it from detecting if the data has been modified or corrupted in transmission.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-326" name="Inadequate Encryption Strength" state="0" impact="100" issueId="">
          <desc>The software stores or transmits sensitive data using an encryption scheme that is theoretically sound, but is not strong enough for the level of protection required.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-532" name="Inclusion of Sensitive Information in Log Files" state="0" impact="100" issueId="">
          <desc>Information written to log files can be of a sensitive nature and give valuable guidance to an attacker or expose sensitive user information.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-286" name="Incorrect User Management" state="0" impact="100" issueId="">
          <desc>The software does not properly manage a user within its environment.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-209" name="Information Exposure Through an Error Message" state="0" impact="100" issueId="">
          <desc>The software generates an error message that includes sensitive information about its environment, users, or associated data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-1100" name="Insufficient Isolation of System-Dependent Functions" state="0" impact="100" issueId="">
          <desc>The product or code does not isolate system-dependent
					functionality into separate stand-alone modules.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="">
          <desc>When a security-critical event occurs, the software either does not record the event or omits important details about the event when logging it.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-522" name="Insufficiently Protected Credentials" state="0" impact="100" issueId="">
          <desc>This weakness occurs when the application transmits or stores authentication credentials and uses an insecure method that is susceptible to unauthorized interception and/or retrieval.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-5" name="J2EE Misconfiguration: Data Transmission Without Encryption" state="0" impact="100" issueId="">
          <desc>Information sent over a network can be compromised while in transit. An attacker may be able to read or modify the contents if the data are sent in plaintext or are weakly encrypted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-322" name="Key Exchange without Entity Authentication" state="0" impact="100" issueId="">
          <desc>The software performs a key exchange with an actor without verifying the identity of that actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-636" name="Not Failing Securely ('Failing Open')" state="0" impact="100" issueId="">
          <desc>When the product encounters an error condition or failure, its design requires it to fall back to a state that is less secure than other options that are available, such as selecting the weakest encryption algorithm or using the most permissive access control restrictions.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-693" name="Protection Mechanism Failure" state="0" impact="100" issueId="">
          <desc>The product does not use or incorrectly uses a protection mechanism that provides sufficient defence against directed attacks against the product.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-384" name="Session Fixation" state="0" impact="100" issueId="">
          <desc>Authenticating a user, or otherwise establishing a new user session, without invalidating any existing session identifier gives an attacker the opportunity to steal authenticated sessions.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-507" name="Trojan Horse" state="0" impact="100" issueId="">
          <desc>The software appears to contain benign or useful functionality, but it also contains code that is hidden from normal operation that violates the intended security policy of the user or the system administrator.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-798" name="Use of Hard-coded Credentials" state="0" impact="100" issueId="">
          <desc>The software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-261" name="Weak Cryptography for Passwords" state="0" impact="100" issueId="">
          <desc>Obscuring a password with a trivial encoding does not protect the password.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-521" name="Weak Password Requirements" state="0" impact="100" issueId="">
          <desc>The product does not require that users should have strong passwords, which makes it easier for attackers to compromise user accounts.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-123" name="Write-what-where Condition" state="0" impact="100" issueId="">
          <desc>Any condition where the attacker has the ability to write an arbitrary value to an arbitrary location, often as the result of a buffer overflow.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="enforce_auth_all_users_based_on_resp" name="Assets shall provide an authorization enforcement mechanism for all identified and authenticated users based on their assigned responsibilities." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. On all interfaces, the control system shall provide the capability to enforce authorizations assigned to all users (humans, software processes and devices) for controlling use of the control system to support segregation of duties and least privilege.
2. Authorization is granting of permissions based on authentication. 
3.All authorization decisions should be made on the server, not the client.  
4. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
5. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
6. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
7. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
8. Server side implementation and presentation layer representations of access control rules must match. 
9. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
10. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
11. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="auth_humans_tools_audit_logs" name="Assets shall provide the capability for authorized humans and/or tools to access audit logs on a read-only basis." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Access Control - Authorize members
2. Least Privilege &amp; Need to Know Basis
3. Review of access </desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="config_according_to_recommended_netw_and_security" name="Assets shall provide the capability to be configured according to recommended network and security configurations as described in guidelines provided by the asset supplier. The asset shall provide an interface to the currently deployed network and security configuration settings." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Devices with network connectivity are capable of being updated from the network.
2. provide the capability to generate a report listing the currently deployed security settings in a machine-readable format.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="continuous_monitor_accepted_sec" name="Assets shall provide the capability to be continuously monitored using commonly accepted security industry practices and recommendations to detect, characterize and report security breaches in a timely manner." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Control system monitoring capability can be achieved through a variety of tools and
techniques (for example, IDS, IPS, malicious code protection mechanisms and network monitoring mechanisms).
2. Monitoring devices should be strategically deployed within the control system (for example, at
selected perimeter locations and near server farms supporting critical applications) to collect
essential information. Monitoring mechanisms may also be deployed at ad hoc locations
within the control system to track specific transactions
3. SIEM Implementation</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="cap_to_be_recovered_to_known_secure_state" name="Assets shall provide the capability to be recovered and reconstituted to a known secure state after a disruption or failure." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Control system recovery and reconstitution to a known secure state means that all system
parameters (either default or configurable) are set to secure values, security-critical patches
are reinstalled, security-related configuration settings are reestablished, system documentation and operating procedures are available, application and system software is reinstalled and configured with secure settings, information from the most recent, known secure backups is loaded and the system is fully tested and functional.
1. Roll back procedure.
2. Secure storage of previous version</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_for_audit_records" name="Assets shall provide the capability to create timestamps (including date and time) for use in audit records." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Timestamps (including date and time) of audit records should be generated using internal
system clocks.
1. provide timestamps for use in audit record generation.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" name="Assets shall provide the capability to create timestamps that are synchronized with a system wide time source." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>to synchronize internal system clocks at a configurable frequency.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="maintain_essential_functions" name="Assets shall provide the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>provide the capability to manage communication loads (such as
using rate limiting) to mitigate the effects of information flooding types of DoS events.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="support_auth_check_on_software_config" name="Assets shall provide the capability to perform or support authenticity checks on software, configuration and other information as well as the recording and reporting of the results of these checks or be integrated into a system that can perform or support authenticity checks." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Integrity verification methods are employed to detect, record, report and protect against software and information tampering.
1. cryptographic hashes
2. Notification of unauthorize changes
Integrity verification methods are employed to detect, record, report and protect against software and information tampering that may occur if other protection mechanisms (such as authorization enforcement) have been circumvented. The control system should employ formal or recommended integrity mechanisms (such as cryptographic hashes).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="integrity_check_software" name="Assets shall provide the capability to perform or support integrity checks on software, configuration and other information as well as the recording and reporting of the results of these checks or be integrated into a system that can perform or support integrity checks." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Integrity verification methods are employed to detect, record, report and protect against software and information tampering.
1. cryptographic hashes
2. Notification of unauthorize changes
Integrity verification methods are employed to detect, record, report and protect against software and information tampering that may occur if other protection mechanisms (such as authorization enforcement) have been circumvented. The control system should employ formal or recommended integrity mechanisms (such as cryptographic hashes).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_critical_long_lived_symmetric_keys" name="Assets shall provide the capability to protect critical, long lived symmetric keys via hardware mechanisms." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. establish the mutual trust using the symmetric key; store securely the shared secret (the authentication is valid as long as the shared secret remains secret); restrict access to the shared secret; ensure that the algorithms and keys used for the symmetric key authentication</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.16" supportedStandardRef="iec-62443-4-2:2019"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" name="Assets shall provide the capability to specifically restrict the use of unnecessary functions, ports, protocols and/or services." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc> 1. capability to specifically prohibit and/or restrict the use of unnecessary functions, ports, protocols and/or services.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_pw_policy_enforce" name="For assets utilizing password-based authentication, the asset shall provide the capability to enforce configurable password strength based on minimum length and variety of character types. " issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.
Note: A service should employ one or more tactics to prevent or at least slow down a brute force attack, including: blacklisting an IP after 5 unsuccessful attempts, slowing down attempts with increasing timeout delays introduced after 5 unsuccessful attempts, locking out non-admin accounts after 3 unsuccessful attempts.  The account must be disabled for a period of time sufficient to discourage brute force guessing of credentials, but not so long as to allow for a denial-of-service attack to be performed.  Allow non-admin users to reset their own passwords to prevent administrative burden.  If users are allowed to reset their password, best practice is to email a new password to the users email account and require a reset upon next logon.  It is not best practice to simply reset and display the new password on the authentication screen as an attacker may trigger that reset and change the password without notice to the user.  If using a screen reveal of password, should be accompanied by both a known secret of user, such as mothers maiden name and also an email to notify the user of such a change.  Temporary passwords and links should have a short expiration time.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_id_and_auth_for_human_users" name="Identify and authenticate all human users" issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. passwords, tokens, biometrics, Certificates, geographic location
2. role-based or group-based
3. should be applied to both local and remote access to the control system.
4. Least Privilege 
5. Segregation of Duties
6. Authentication types (factors): (1) something you know (a secret) -like username and password; (2) something you have - such as a token device or smart phone; and (3) something you are - such as biometrics. 
7. On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.
8.  services should run as non-root accounts or use SUID accounts that release privilege after service start.  Non-root accounts used for services should not have a shell enabled, i.e. /dev/null should be shell in passwd file.  In cases where the application must run with elevated privileges, raise privileges as late as possible, and drop them as soon as possible.  For windows based services, it is preferred to run the service as SYSTEM, instead of an administrator account, which would have credentials which may be guessed and used in an attack.
9. Authorization is granting of permissions based on authentication. 
10.All authorization decisions should be made on the server, not the client.  
11. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
12. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
13. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
14. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
15. Server side implementation and presentation layer representations of access control rules must match. 
16. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
17. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
18. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources
Note: system level forms of identification, such as IP or MAC address are easily spoofable and therefore do not qualify as a valid form of authentication. Establish and utilize standard, tested, authentication services whenever possible. Use a centralized implementation for all authentication controls, including libraries that call external authentication services. Segregate authentication logic from the resource being requested and use redirection to and from the centralized authentication control.  All authentication controls should fail securely. Enforce password complexity requirements established by policy or regulation. Authentication credentials should be sufficient to withstand attacks that are typical of the threats in the deployed environment. (e.g., requiring the use of alphabetic as well as numeric and/or special characters). Enforce password length requirements established by policy or regulation. Eight characters is commonly used, but 16 is better or consider the use of multi-word pass phrases. Password entry should be obscured on the user's screen. (e.g., on web forms use the input type "password")</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_human_user_interface_determine_user_took_action" name="If an asset provides a human user interface, the asset shall provide the capability to determine whether a given human user took a particular action. Control elements that are not able to support such capability shall be listed in component documents." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Examples of particular actions taken by a user include performing operator actions, changing
control system configurations, creating information, sending a message, approving
information (such as indicating concurrence) and receiving a message.
1. digital signatures, digital message receipts and timestamps</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.14" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="terminate_remote_session_auto_or_manual" name="If an asset supports remote sessions, the asset shall provide the capability to terminate a remote session either automatically after a configurable time period of inactivity, manually by a local authority, or manually by the user (human, software process or device) who initiated the session." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Terminate a remote session either automatically after a configurable time period of inactivity, manually by a local authority, or manually by the user (human, software process or device) who initiated the session.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" name="If an asset supports usage through wireless interfaces it shall provide the capability to integrate into the asset that supports usage authorization, monitoring and restrictions according to commonly accepted industry practices." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>provide the capability to authorize, monitor and enforce usage restrictions for wireless connectivity to the control system.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="user_crypto_algs" name="If cryptography is required, the asset shall use cryptographic algorithms, key sizes and mechanisms for key establishment and management according to commonly accepted security industry practices and recommendations." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. document the practices and procedures relating to cryptographic key establishment and management.
2. utilize established and tested encryption and hash algorithms, such as the advanced
encryption standard (AES) and the secure hash algorithm (SHA) series, and key sizes based
on an assigned standard.
3. Key generation needs to be performed using an effective random number generator.
4. The security policies and procedures for key management need to address
periodic key changes, key destruction, key distribution and encryption key backup in
accordance with defined standards</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_acc_mgmt_for_auth_users" name="Provide support of management of all accounts by authorized users" issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. individual, role-based, device-based, Service &amp;  default account management Policy.
2. Review of accounts.
3. Approvals for creating, disabling, removing or modifying accounts.
4.  On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_auth_based_on_role_leas_priv" name="The asset shall provide authorization enforcement for all users based on their assigned responsibilities and least privilege" issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. enforce authorizations assigned to all human users.
2. Use control policies (for example, identity-based policies, role-based policies and rule-based policies) and associated read/write access enforcement mechanisms (for example, access control lists, access control matrices and cryptography).
2. check which roles are assigned to a verified user or asset and which privileges are assigned to these roles – if the requested operation is covered by the permissions, it is executed, otherwise rejected. Only qualified and authorized individuals should obtain the use of control system components for purposes of initiating changes, including upgrades and modifications. Authorization is granting of permissions based on authentication. 
3.All authorization decisions should be made on the server, not the client.  
4. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
5. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
6. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
7. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
8. Server side implementation and presentation layer representations of access control rules must match. 
9. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
10. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
11. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="role_to_define_and_modify_perm_mapping" name="The asset shall provide directly or through a compensating security mechanism, for an authorized role to define and modify the mapping of permissions to roles for all human users" issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>The control system shall provide the capability for an authorized user or role to define and
modify the mapping of permissions to roles for all human users.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_config_usage_restriction" name="The asset shall provide the capability to automatically enforce configurable usage restrictions" issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Authenticate &amp; Authorize devices before allowing connection.
2. Digital+E46 Signatures</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="employ_cypto_mechs_to_recognize_changes" name="The asset shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="employ_maware_protection" name="The asset shall provide the capability to employ malicious code protection mechanisms at all entry and exit points." issueId="" platform="" cost="0" risk="74" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>prevent, detect, mitigate and report instances of detected malicious code (for example, viruses, worms, Trojan horses and spyware) transported by electronic mail, electronic mail attachments, Internet access, removable media (for example, universal serial bus (USB) devices, diskettes or compact disks), PDF documents, web services, network connections and infected laptops or other
common means.
1. Detection Technique  - binary integrity and attributes monitoring, hashing and signature techniques.
2.Mitigation technique - file cleaning, quarantining, file deletion, host communication restriction and IPSs
3. Prevention Technique - application blacklisting and whitelisting techniques, removable media control, sandbox techniques and specific computing platforms mechanisms such as restricted firmware update capabilities, No Execute (NX) bit, data execution prevention (DEP), address space layout randomization (ASLR), stack corruption detection and mandatory access controls.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" name="The asset shall provide the capability to employ protection mechanisms to prevent, detect, report and mitigate the effects of malicious code or unauthorized software. The asset shall provide the capability to update the protection mechanisms." issueId="" platform="" cost="0" risk="74" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>prevent, detect, mitigate and report instances of detected malicious code (for example, viruses, worms, Trojan horses and spyware) transported by electronic mail, electronic mail attachments, Internet access, removable media (for example, universal serial bus (USB) devices, diskettes or compact disks), PDF documents, web services, network connections and infected laptops or other
common means.
1. Detection Technique  - binary integrity and attributes monitoring, hashing and signature techniques.
2.Mitigation technique - file cleaning, quarantining, file deletion, host communication restriction and IPSs
3. Prevention Technique - application blacklisting and whitelisting techniques, removable media control, sandbox techniques and specific computing platforms mechanisms such as restricted firmware update capabilities, No Execute (NX) bit, data execution prevention (DEP), address space layout randomization (ASLR), stack corruption detection and mandatory access controls.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="limit_invalid_attempts" name="The asset shall provide the capability to enforce a limit of a configurable number of consecutive invalid access attempts by any user (human, software process or device) during a configurable time period. The asset shall provide the capability to deny access for a specified period of time or until unlocked by an administrator when this limit has been exceeded." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. limit of a configurable number of consecutive invalid access attempts by any user (human, software process or device).
2. As per Policy.
3. For all invalid authentication attempts, the server should simply respond "invalid attempt, please retry" or similarly vague statement that does not imply partial success.  
Note: A service should employ one or more tactics to prevent or at least slow down a brute force attack, including: blacklisting an IP after 5 unsuccessful attempts, slowing down attempts with increasing timeout delays introduced after 5 unsuccessful attempts, locking out non-admin accounts after 3 unsuccessful attempts.  The account must be disabled for a period of time sufficient to discourage brute force guessing of credentials, but not so long as to allow for a denial-of-service attack to be performed.  Allow non-admin users to reset their own passwords to prevent administrative burden.  If users are allowed to reset their password, best practice is to email a new password to the users email account and require a reset upon next logon.  It is not best practice to simply reset and display the new password on the authentication screen as an attacker may trigger that reset and change the password without notice to the user.  If using a screen reveal of password, should be accompanied by both a known secret of user, such as mothers maiden name and also an email to notify the user of such a change.  Temporary passwords and links should have a short expiration time.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="restrict_mobile_code" name="The asset shall provide the capability to enforce usage restrictions for mobile code technologies based on the potential to cause damage to the asset." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Mobile code technologies include, but are not limited to, Java, JavaScript, ActiveX, portable
document format (PDF), Postscript, Shockwave movies, Flash animations and VBScript.
1. The control system shall provide the capability to enforce usage restrictions for mobile code technologies based on the potential to cause damage to the control system that include:
a) preventing the execution of mobile code;
b) requiring proper authentication and authorization for origin of the code;
c) restricting mobile code transfer to/from the control system; and
d) monitoring the use of mobile code.
2. verify integrity of the mobile code before allowing code execution with HASH/Codesigning technique.
3. both the selection and use of mobile code installed on servers and
mobile code downloaded and executed.
4. prevent the development, acquisition or introduction of unacceptable mobile code within the control system. For example, mobile code exchanges may be disallowed directly with the
control system, but may be allowed in a controlled adjacent environment.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" name="The asset shall provide the capability to generate audit records relevant to security for the following categories: access control, request errors, operating system events, asset events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Generate audit records relevant to security for the following categories: access control, request errors, operating system events, control system events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" name="The asset shall provide the capability to identify and authenticate all software processes and devices. This capability shall enforce such identification and authentication on all interfaces which provide access to the asset to support least privilege in accordance with applicable security policies and procedures." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. identity bound to the physical device
2. passwords, tokens or location (physical or logical)
3. role-based, group-based or entity-based,
4. Combination of 1) something you know (a secret) -like username and password; (2) something you have - such as a token device or smart phone; and (3) something you are - such as biometrics. 
5. Assign identifiers that uniquely identify users/devices
a. E.g., employ a unique username-password combination for the user
b. Reasoning: This will prevent user 1 from spoofing as user 2. This is a concern for users with different levels of access.
6. Uniquely identify and authenticate users and devices
c. Multi-factor authentication
d. Use of authentication protocols that require no password/multifactor authentication: e.g., OAuth, OpenID, SAML</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_auth_init" name="The asset shall provide the capability to: initialize authenticator content; change all default authenticators upon asset installation; change/refresh all authenticators; protect all authenticators from unauthorized disclosure and modification when stored and transmitted." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>&gt; initialize authenticator content;
&gt; change all default authenticators upon control system installation;
&gt; change/refresh all authenticators; and
&gt; protect all authenticators from unauthorized disclosure and modification when stored and
transmitted
2.  tokens, symmetric keys, private keys (part of a public/private key pair), biometrics,
passwords, physical keys and key card
3. Human users should take reasonable measures to safeguard authenticators, including maintaining possession of their individual authenticators, not loaning or sharing authenticators with others and reporting lost or compromised authenticators immediately.
4. cryptographic protections such as encryption or hashing or by handshake protocols which do not require transmission of the password. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.
5. Lockout or loss of control due to security measures is not acceptable. If the control system is required to have a high level of availability, measures should be taken to maintain this high
level of availability (such as compensating physical countermeasures, duplicate keys and
supervisory override).
6. Complex strength of the authentication mechanism</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="mitigate_info_effects_flooding_types" name="The asset shall provide the capability to manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. boundary protection
2. restricting the information flow to be unidirectional outbound
3. manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events.
4. restrict the ability of all users (humans, software processes and devices) to cause DoS events which affect other control systems or networks.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="prevent_further_access_init_seslock" name="The asset shall provide the capability to prevent further access by initiating a session lock after a configurable time period of inactivity or by manual initiation. The session lock shall remain in effect until the human user who owns the session or another authorized human user re-establishes access using appropriate identification and authentication procedures." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. activate session lock mechanisms automatically after a configurable time period.
2. In some cases, session lock for control system operator workstations or nodes is not advised (for example, sessions which are required for immediate operator responses in emergency situations).
3. In situations where the control system cannot support session lock, the responsible entity should employ appropriate compensating countermeasures (for example, providing increased physical security, personnel security and auditing measures).
Note: Use the server or framework’s session management controls. The application should only recognize these session identifiers as valid. Session identifier creation must always be done on a trusted system (e.g., The server). Session management controls should use well vetted algorithms that ensure sufficiently random session identifiers. Set the domain and path for cookies containing authenticated session identifiers to an appropriately restricted value for the site. Logout functionality should fully terminate the associated session or connection. Logout functionality should be available from all pages protected by authorization. Establish a session inactivity timeout that is as short as possible, based on balancing risk and business functional requirements. In most cases it should be no more than several hours. Disallow persistent logins and enforce periodic session terminations, even when the session is active. Especially for applications supporting rich network connections or connecting to critical systems. Termination times should support business requirements and the user should receive sufficient notification to mitigate negative impacts. If a session was established before login, close that session and establish a new session after a successful login. Generate a new session identifier on any re-authentication. Do not allow concurrent logins with the same user ID. Supplement standard session management for sensitive server-side operations, like account management, by utilizing per-session strong random tokens or parameters. This method can be used to prevent Cross Site Request Forgery attacks. Supplement standard session management for highly sensitive or critical operations by utilizing per-request, as opposed to per-session, strong random tokens or parameters. Set the "secure" attribute for cookies transmitted over an TLS connection. Set cookies with the HttpOnly attribute, unless you specifically require client-side scripts within your application to read or set a cookie's value</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_integrity_transmitted_info" name="The asset shall provide the capability to protect the integrity of transmitted information." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="report_current_list_of_installed_assets" name="The asset shall provide the capability to report the current list of installed assets and their associated properties." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Usage of component ID, capability and revision level.
2. Formal process of configuration management should be deployed to keep control of the
changes in the component inventory baseline
3. The system requires all default passwords and pass phrases to be changed in order to complete the setup, prior to being operational.  This includes SSID passphrases, default accounts, admin accounts, etc.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_support_mgmt_id_by_user_group_role" name="The asset shall provide the capability to support the management of identifiers by user, group, role or asset interface." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Management of identifiers by group, role or  system interface.
2. Session ID, resource ID, secure cookie management policy.
3. On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.
NOTE: Use the server or framework’s session management controls. The application should only recognize these session identifiers as valid. Session identifier creation must always be done on a trusted system (e.g., The server). Session management controls should use well vetted algorithms that ensure sufficiently random session identifiers. Set the domain and path for cookies containing authenticated session identifiers to an appropriately restricted value for the site. Logout functionality should fully terminate the associated session or connection. Logout functionality should be available from all pages protected by authorization. Establish a session inactivity timeout that is as short as possible, based on balancing risk and business functional requirements. In most cases it should be no more than several hours. Disallow persistent logins and enforce periodic session terminations, even when the session is active. Especially for applications supporting rich network connections or connecting to critical systems. Termination times should support business requirements and the user should receive sufficient notification to mitigate negative impacts. If a session was established before login, close that session and establish a new session after a successful login. Generate a new session identifier on any re-authentication. Do not allow concurrent logins with the same user ID. Supplement standard session management for sensitive server-side operations, like account management, by utilizing per-session strong random tokens or parameters. This method can be used to prevent Cross Site Request Forgery attacks. Supplement standard session management for highly sensitive or critical operations by utilizing per-request, as opposed to per-session, strong random tokens or parameters. Set the "secure" attribute for cookies transmitted over an TLS connection. Set cookies with the HttpOnly attribute, unless you specifically require client-side scripts within your application to read or set a cookie's value
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="unique_id_human_users" name="The asset shall provide the capability to uniquely identify and authenticate all human users." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. passwords, tokens, biometrics, Certificates, geographic location
2. role-based or group-based
3. should be applied to both local and remote access to the control system.
4. Least Privilege 
5. Segregation of Duties
6. Authentication types (factors): (1) something you know (a secret) -like username and password; (2) something you have - such as a token device or smart phone; and (3) something you are - such as biometrics. 
7. On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.
8.  services should run as non-root accounts or use SUID accounts that release privilege after service start.  Non-root accounts used for services should not have a shell enabled, i.e. /dev/null should be shell in passwd file.  In cases where the application must run with elevated privileges, raise privileges as late as possible, and drop them as soon as possible.  For windows based services, it is preferred to run the service as SYSTEM, instead of an administrator account, which would have credentials which may be guessed and used in an attack.
9. Authorization is granting of permissions based on authentication. 
10.All authorization decisions should be made on the server, not the client.  
11. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
12. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
13. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
14. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
15. Server side implementation and presentation layer representations of access control rules must match. 
16. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
17. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
18. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources.
19. Assign identifiers that uniquely identify users/devices
a. E.g., employ a unique username-password combination for the user
b. Reasoning: This will prevent user 1 from spoofing as user 2. This is a concern for users with different levels of access.
20. Uniquely identify and authenticate users and devices
c. Multi-factor authentication
d. Use of authentication protocols that require no password/multifactor authentication: e.g., OAuth, OpenID, SAML
Note: system level forms of identification, such as IP or MAC address are easily spoofable and therefore do not qualify as a valid form of authentication. Establish and utilize standard, tested, authentication services whenever possible. Use a centralized implementation for all authentication controls, including libraries that call external authentication services. Segregate authentication logic from the resource being requested and use redirection to and from the centralized authentication control.  All authentication controls should fail securely. Enforce password complexity requirements established by policy or regulation. Authentication credentials should be sufficient to withstand attacks that are typical of the threats in the deployed environment. (e.g., requiring the use of alphabetic as well as numeric and/or special characters). Enforce password length requirements established by policy or regulation. Eight characters is commonly used, but 16 is better or consider the use of multi-word pass phrases. Password entry should be obscured on the user's screen. (e.g., on web forms use the input type "password")</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="id_auth_all_users_engaged_in_wireless_comms" name="The controls system shall provide the capability to identify and authenticate all users (humans, software processes or devices) engaged in wireless communication." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Identification of Wireless technologies include, but are not limited to, microwave, satellite, packet radio, Institute of Electrical and Electronics Engineers (IEEE) 802.11x, IEEE 802.15.4 (ZigBee,IEC 62591 – WirelessHART®, ISA-100.11a), IEEE 802.15.1 (Bluetooth), wireless LAN mobile routers, mobile phones with tethering and various infrared technologies.
1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="uniquely_id_auth_all_users_engaged_in_wireless_comms" name="The controls system shall provide the capability to uniquely identify and authenticate all users (humans, software processes or devices) engaged in wireless communication." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Identification of Wireless technologies include, but are not limited to, microwave, satellite, packet radio, Institute of Electrical and Electronics Engineers (IEEE) 802.11x, IEEE 802.15.4 (ZigBee,IEC 62591 – WirelessHART®, ISA-100.11a), IEEE 802.15.1 (Bluetooth), wireless LAN mobile routers, mobile phones with tethering and various infrared technologies.
1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="obscure_auth_feedback" name="When an asset provides an authentication capability, the asset shall provide the capability to obscure feedback of authenticator information during the authentication process." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. obscure feedback of authentication information during the authentication process by displaying asterisks or other random characters when a human user types in a password obscures feedback of authentication information.
2. entry of wired equivalent privacy (WEP) keys, secure socket shell (SSH) token entry and
RSA one-time passwords.
3. not provide any hint as to the reason for the authentication failure, such as “unknown user name”.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.12" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="common-sl2-cr1-1" name="SL2 - Common - CR1.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-1-auth_access_token_exploit" name="An adversary exploits a weakness in authentication to create an access token to associate a process/thread" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-287">
                  <countermeasures>
                    <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                    <countermeasure ref="unique_id_human_users" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                <countermeasure ref="unique_id_human_users" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-1-unauth_human_sys_access" name="Unauthorized human access to the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                    <countermeasure ref="unique_id_human_users" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                <countermeasure ref="unique_id_human_users" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-1-unid-sys-user" name="Unidentified user of the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="50" availability="25" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-286">
                  <countermeasures>
                    <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                    <countermeasure ref="unique_id_human_users" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                <countermeasure ref="unique_id_human_users" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-10" name="SL2 - Common - CR1.10" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-10-adv_auth_feedback" name="An adversary receives authenticator feedback which helps him in user enumeration. E.g. invalid username. Invalid password." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-209">
                  <countermeasures>
                    <countermeasure ref="obscure_auth_feedback" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="obscure_auth_feedback" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-11" name="SL2 - Common - CR1.11" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-11-adv_bruteforce_auth_creds" name="And adversary can bruteforce authentication credentials" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-522">
                  <countermeasures>
                    <countermeasure ref="limit_invalid_attempts" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="limit_invalid_attempts" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-14" name="SL2 - Common - CR1.14" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-14-rogue_employee_abuse_key" name="A rogue employee has unfettered access to a key and might use it for a malicious purpose or pass it onto someone else to the same end." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-322">
                  <countermeasures>
                    <countermeasure ref="protect_critical_long_lived_symmetric_keys" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_critical_long_lived_symmetric_keys" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-2" name="SL2 - Common - CR1.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-2-unid_sys_backdoor" name="Unidentified backdoor plugged in the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-2-unid_softw_arb_code_exec" name="Unidentified software that executes arbitrary code" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-123">
                  <countermeasures>
                    <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-3" name="SL2 - Common - CR1.3" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-3-adv_get_netw_info" name="An adversary that has previously obtained unauthorized access to certain device resources, uses that access to obtain information such as location and network information" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="provide_acc_mgmt_for_auth_users" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_acc_mgmt_for_auth_users" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-4" name="SL2 - Common - CR1.4" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-4-adv_guess_trusted_id" name="An adversary guesses, obtains, or &quot;rides&quot; a trusted identifier (e.g. session ID, resource ID, cookie, etc.) to perform authorized actions under the guise of an authenticated user or service." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-384">
                  <countermeasures>
                    <countermeasure ref="provide_support_mgmt_id_by_user_group_role" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_support_mgmt_id_by_user_group_role" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-5" name="SL2 - Common - CR1.5" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-5-adv_guess_default_pw" name="An adversary guesses the default password and user of an authenticator (e.g. admin:admin)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-521">
                  <countermeasures>
                    <countermeasure ref="provide_auth_init" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_auth_init" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-5-adv_retrieve_unencrypted_pw" name="An adversary is able to retrieve unencrypted passwords after a DBMS/DB -server breach" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-261">
                  <countermeasures>
                    <countermeasure ref="provide_auth_init" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_auth_init" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-6" name="SL2 - Common - CR1.6" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-6-adv_rogue_dev_mitm" name="An adversary can plant a rogue device to perform man-in-the-middle attacks" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
                    <countermeasure ref="uniquely_id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
                <countermeasure ref="uniquely_id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-7" name="SL2 - Common - CR1.7" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-7-adv_bruteforce_pw" name="An adversary is able to brute force the password" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-307">
                  <countermeasures>
                    <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-7-adv_guess_pw" name="An adversary is able to guess the password based on identifying an authenticator" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-521">
                  <countermeasures>
                    <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-1" name="SL2 - Common - CR2.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-1-adv_connect_with_compromised_acc_make_changes" name="An adversary is able to connect to the asset with a compromised account and is able to make changes to all content available on the asset. (no roles)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_auth_all_users_based_on_resp" mitigation="34"/>
                    <countermeasure ref="enforce_auth_based_on_role_leas_priv" mitigation="33"/>
                    <countermeasure ref="role_to_define_and_modify_perm_mapping" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_auth_all_users_based_on_resp" mitigation="34"/>
                <countermeasure ref="enforce_auth_based_on_role_leas_priv" mitigation="33"/>
                <countermeasure ref="role_to_define_and_modify_perm_mapping" mitigation="33"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-11" name="SL2 - Common - CR2.11" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-11-an_adversary_compromises_a_system_without_knowing_when_he_compromised_it" name="An adversary compromises a system without knowing when he compromised it." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                    <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-12" name="SL2 - Common - CR2.12" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-12-an_adversary_compromised_the_system_not_knowing_from_where_he_compromised_the_system" name="An adversary compromised the asset, not knowing from where he compromised the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="provide_human_user_interface_determine_user_took_action" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_human_user_interface_determine_user_took_action" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-2" name="SL2 - Common - CR2.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-2-adv_wifi_access" name="An adversary is able to get access to the asset via wireless protocols without authorization" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-3" name="SL2 - Common - CR2.3" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-3-adv_portable_dev_access" name="An adversary can access the asset using a portable device" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_config_usage_restriction" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_config_usage_restriction" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-4" name="SL2 - Common - CR2.4" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-4-an_adversary_can_execute_remote_code" name="An adversary can execute remote code" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-94">
                  <countermeasures>
                    <countermeasure ref="restrict_mobile_code" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="restrict_mobile_code" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-5" name="SL2 - Common - CR2.5" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-5-an_adversary_can_perform_a_dos_attack_by_making_consecutive_authorization_requests" name="An adversary can perform a DoS attack by making consecutive authorization requests" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-307">
                  <countermeasures>
                    <countermeasure ref="prevent_further_access_init_seslock" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="prevent_further_access_init_seslock" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-6" name="SL2 - Common - CR2.6" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-6-an_adversary_could_have_maintained_a_stored_session" name="An adversary could have maintained a stored session. By doing so he keeps access to the asset with the role identified with that corresponding session." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-384">
                  <countermeasures>
                    <countermeasure ref="terminate_remote_session_auto_or_manual" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="terminate_remote_session_auto_or_manual" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-8" name="SL2 - Common - CR2.8" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-8-an_aversary_could_have_compromised_the_sytem_without_you_knowing" name="An adversary could have compromised the system without you knowing what part in the asset was compromised or how he compromised the asset " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-1" name="SL2 - Common - CR3.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-1-adv_intercept_netw_traffic" name="An adversary can intercept network traffic" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="25" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-5">
                  <countermeasures>
                    <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                    <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-2" name="SL2 - Common - CR3.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-2-adv_phishing_mail" name="An adversary sends a phishing mail with a trojan as email attachment" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-507">
                  <countermeasures>
                    <countermeasure ref="employ_maware_protection" mitigation="50"/>
                    <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="employ_maware_protection" mitigation="50"/>
                <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-4" name="SL2 - Common - CR3.4" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-4-adv_tamper_software" name="An adversary is able to tamper with software running on a system. On the asset no integrity check is in place." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-354">
                  <countermeasures>
                    <countermeasure ref="integrity_check_software" mitigation="50"/>
                    <countermeasure ref="support_auth_check_on_software_config" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="integrity_check_software" mitigation="50"/>
                <countermeasure ref="support_auth_check_on_software_config" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr4-3" name="SL2 - Common - CR4.3" desc="" library="iec62443">
          <threats>
            <threat ref="cr4-3-adv_break_alg_weak_encryption" name="When a weak encryption algorithm is used an adversary is capable of breaking the algorithm with standard available tools" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-326">
                  <countermeasures>
                    <countermeasure ref="user_crypto_algs" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="user_crypto_algs" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr6-1" name="SL2 - Common - CR6.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr6-1-audit_log_exploit" name="An adversary may compromise the asset and edit the logfiles with non root privileges" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-532">
                  <countermeasures>
                    <countermeasure ref="auth_humans_tools_audit_logs" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="auth_humans_tools_audit_logs" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr6-2" name="SL2 - Common - CR6.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr6-2-continuous_monitoring_exploit" name="An adversary compromises a system  without it being timely notified and detected by for example a IDS" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-693">
                  <countermeasures>
                    <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-1" name="SL2 - Common - CR7.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-1-dos_no_protect" name="Assets might lose the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event.&#10;" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-1100">
                  <countermeasures>
                    <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                    <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-4" name="SL2 - Common - CR7.4" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-4-no_usr_sys_info_backup" name="Assets might not regain their state (user- and system-level information) due to storage failure." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="50" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-636">
                  <countermeasures>
                    <countermeasure ref="cap_to_be_recovered_to_known_secure_state" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="cap_to_be_recovered_to_known_secure_state" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-6" name="SL2 - Common - CR7.6" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-6-unauth_access_default_creds" name="Unauthorized component access might occur as a result of not being able to change default access credentials" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-798">
                  <countermeasures>
                    <countermeasure ref="config_according_to_recommended_netw_and_security" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="config_according_to_recommended_netw_and_security" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-7" name="SL2 - Common - CR7.7" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-7-unauth_access_unnecessary_func" name="Unauthorized component access might occur as a result of not being able to restrict unnecessary functions, ports, protocols and/or services." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-8" name="SL2 - Common - CR7.8" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-8-rogue_assets" name="Rogue assets might enter the network as a result of not being able to verify component identities." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="c7a396ed-f48e-4c61-98fc-3cad7f213ee7" diagramComponentId="734d5fb3-528c-4d54-93a9-b4a5537e612c" ref="2a3de784-4f92-44e7-92b9-8cafaea16520" name="Sensor - Meters" desc="" library="iec62443" parentComponentRef="" componentDefinitionRef="sensor-meters-valves">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="iec62443-sl2"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-300" name="Channel Accessible by Non-Endpoint ('Man-in-the-Middle')" state="0" impact="100" issueId="">
          <desc>The product does not adequately verify the identity of actors at both ends of a communication channel, or does not adequately ensure the integrity of the channel, in a way that allows the channel to be accessed or influenced by an actor that is not an endpoint.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-284" name="Improper Access Control" state="0" impact="100" issueId="">
          <desc>The software does not restrict or incorrectly restricts access to a resource from an unauthorized actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-79" name="Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')" state="0" impact="100" issueId="">
          <desc>The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-307" name="Improper Restriction of Excessive Authentication Attempts" state="0" impact="100" issueId="">
          <desc>The software does not implement sufficient measures to prevent multiple failed authentication attempts within in a short time frame, making it more susceptible to brute force attacks.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-732" name="Incorrect Permission Assignment for Critical Resource" state="0" impact="100" issueId="">
          <desc>The software specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-209" name="Information Exposure Through an Error Message" state="0" impact="100" issueId="">
          <desc>The software generates an error message that includes sensitive information about its environment, users, or associated data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-1100" name="Insufficient Isolation of System-Dependent Functions" state="0" impact="100" issueId="">
          <desc>The product or code does not isolate system-dependent
					functionality into separate stand-alone modules.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="">
          <desc>When a security-critical event occurs, the software either does not record the event or omits important details about the event when logging it.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-522" name="Insufficiently Protected Credentials" state="0" impact="100" issueId="">
          <desc>This weakness occurs when the application transmits or stores authentication credentials and uses an insecure method that is susceptible to unauthorized interception and/or retrieval.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-5" name="J2EE Misconfiguration: Data Transmission Without Encryption" state="0" impact="100" issueId="">
          <desc>Information sent over a network can be compromised while in transit. An attacker may be able to read or modify the contents if the data are sent in plaintext or are weakly encrypted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-311" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="">
          <desc>The software does not encrypt sensitive or critical information before storage or transmission.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-693" name="Protection Mechanism Failure" state="0" impact="100" issueId="">
          <desc>The product does not use or incorrectly uses a protection mechanism that provides sufficient defence against directed attacks against the product.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-521" name="Weak Password Requirements" state="0" impact="100" issueId="">
          <desc>The product does not require that users should have strong passwords, which makes it easier for attackers to compromise user accounts.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="protect_audit_info_logs_tools" name="Assets shall protect audit information, audit logs, and audit tools (if present) from unauthorized access, modification and deletion." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. the storage of audit information to hardware-enforced write-once media.
2. Access Management Process</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.11" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_auth_all_users_based_on_resp" name="Assets shall provide an authorization enforcement mechanism for all identified and authenticated users based on their assigned responsibilities." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. On all interfaces, the control system shall provide the capability to enforce authorizations assigned to all users (humans, software processes and devices) for controlling use of the control system to support segregation of duties and least privilege.
2. Authorization is granting of permissions based on authentication. 
3.All authorization decisions should be made on the server, not the client.  
4. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
5. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
6. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
7. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
8. Server side implementation and presentation layer representations of access control rules must match. 
9. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
10. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
11. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="continuous_monitor_accepted_sec" name="Assets shall provide the capability to be continuously monitored using commonly accepted security industry practices and recommendations to detect, characterize and report security breaches in a timely manner." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Control system monitoring capability can be achieved through a variety of tools and
techniques (for example, IDS, IPS, malicious code protection mechanisms and network monitoring mechanisms).
2. Monitoring devices should be strategically deployed within the control system (for example, at
selected perimeter locations and near server farms supporting critical applications) to collect
essential information. Monitoring mechanisms may also be deployed at ad hoc locations
within the control system to track specific transactions
3. SIEM Implementation</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_for_audit_records" name="Assets shall provide the capability to create timestamps (including date and time) for use in audit records." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Timestamps (including date and time) of audit records should be generated using internal
system clocks.
1. provide timestamps for use in audit record generation.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" name="Assets shall provide the capability to create timestamps that are synchronized with a system wide time source." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>to synchronize internal system clocks at a configurable frequency.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="maintain_essential_functions" name="Assets shall provide the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>provide the capability to manage communication loads (such as
using rate limiting) to mitigate the effects of information flooding types of DoS events.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" name="Assets shall provide the capability to specifically restrict the use of unnecessary functions, ports, protocols and/or services." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc> 1. capability to specifically prohibit and/or restrict the use of unnecessary functions, ports, protocols and/or services.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="validate_syntax_length_content_of_any_input" name="Assets shall validate the syntax, length and content of any input data that is used as an industrial process control input or input via external interfaces that directly impacts the action of the asset." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. input data validation include out-of-range values for a defined field type, invalid characters in data fields, missing or incomplete data and buffer overflow.
2. SAST &amp; DAST
3. Data from external sources are sanitized based on acceptable formats and lengths.  It is preferred to use white listing, over black listing.
4. Data is validated when crossing API boundaries</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_pw_policy_enforce" name="For assets utilizing password-based authentication, the asset shall provide the capability to enforce configurable password strength based on minimum length and variety of character types. " issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.
Note: A service should employ one or more tactics to prevent or at least slow down a brute force attack, including: blacklisting an IP after 5 unsuccessful attempts, slowing down attempts with increasing timeout delays introduced after 5 unsuccessful attempts, locking out non-admin accounts after 3 unsuccessful attempts.  The account must be disabled for a period of time sufficient to discourage brute force guessing of credentials, but not so long as to allow for a denial-of-service attack to be performed.  Allow non-admin users to reset their own passwords to prevent administrative burden.  If users are allowed to reset their password, best practice is to email a new password to the users email account and require a reset upon next logon.  It is not best practice to simply reset and display the new password on the authentication screen as an attacker may trigger that reset and change the password without notice to the user.  If using a screen reveal of password, should be accompanied by both a known secret of user, such as mothers maiden name and also an email to notify the user of such a change.  Temporary passwords and links should have a short expiration time.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_human_user_interface_determine_user_took_action" name="If an asset provides a human user interface, the asset shall provide the capability to determine whether a given human user took a particular action. Control elements that are not able to support such capability shall be listed in component documents." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Examples of particular actions taken by a user include performing operator actions, changing
control system configurations, creating information, sending a message, approving
information (such as indicating concurrence) and receiving a message.
1. digital signatures, digital message receipts and timestamps</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.14" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" name="If an asset supports usage through wireless interfaces it shall provide the capability to integrate into the asset that supports usage authorization, monitoring and restrictions according to commonly accepted industry practices." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>provide the capability to authorize, monitor and enforce usage restrictions for wireless connectivity to the control system.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="id_and_handle_error_conditions" name="The asset shall identify and handle error conditions in a manner such that effective remediation can occur. This shall be done in a manner which does not provide information that could be exploited by adversaries to attack the IACS unless revealing this information is necessary for the timely troubleshooting of problems." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Error messages generated by the control system should provide timely and useful information without revealing potentially harmful information.
2. Vulnerability Assessment &amp; Penetration Testing</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_auth_based_on_role_leas_priv" name="The asset shall provide authorization enforcement for all users based on their assigned responsibilities and least privilege" issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. enforce authorizations assigned to all human users.
2. Use control policies (for example, identity-based policies, role-based policies and rule-based policies) and associated read/write access enforcement mechanisms (for example, access control lists, access control matrices and cryptography).
2. check which roles are assigned to a verified user or asset and which privileges are assigned to these roles – if the requested operation is covered by the permissions, it is executed, otherwise rejected. Only qualified and authorized individuals should obtain the use of control system components for purposes of initiating changes, including upgrades and modifications. Authorization is granting of permissions based on authentication. 
3.All authorization decisions should be made on the server, not the client.  
4. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
5. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
6. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
7. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
8. Server side implementation and presentation layer representations of access control rules must match. 
9. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
10. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
11. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="role_to_define_and_modify_perm_mapping" name="The asset shall provide directly or through a compensating security mechanism, for an authorized role to define and modify the mapping of permissions to roles for all human users" issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>The control system shall provide the capability for an authorized user or role to define and
modify the mapping of permissions to roles for all human users.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_config_usage_restriction" name="The asset shall provide the capability to automatically enforce configurable usage restrictions" issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Authenticate &amp; Authorize devices before allowing connection.
2. Digital+E46 Signatures</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="employ_cypto_mechs_to_recognize_changes" name="The asset shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="limit_invalid_attempts" name="The asset shall provide the capability to enforce a limit of a configurable number of consecutive invalid access attempts by any user (human, software process or device) during a configurable time period. The asset shall provide the capability to deny access for a specified period of time or until unlocked by an administrator when this limit has been exceeded." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. limit of a configurable number of consecutive invalid access attempts by any user (human, software process or device).
2. As per Policy.
3. For all invalid authentication attempts, the server should simply respond "invalid attempt, please retry" or similarly vague statement that does not imply partial success.  
Note: A service should employ one or more tactics to prevent or at least slow down a brute force attack, including: blacklisting an IP after 5 unsuccessful attempts, slowing down attempts with increasing timeout delays introduced after 5 unsuccessful attempts, locking out non-admin accounts after 3 unsuccessful attempts.  The account must be disabled for a period of time sufficient to discourage brute force guessing of credentials, but not so long as to allow for a denial-of-service attack to be performed.  Allow non-admin users to reset their own passwords to prevent administrative burden.  If users are allowed to reset their password, best practice is to email a new password to the users email account and require a reset upon next logon.  It is not best practice to simply reset and display the new password on the authentication screen as an attacker may trigger that reset and change the password without notice to the user.  If using a screen reveal of password, should be accompanied by both a known secret of user, such as mothers maiden name and also an email to notify the user of such a change.  Temporary passwords and links should have a short expiration time.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" name="The asset shall provide the capability to generate audit records relevant to security for the following categories: access control, request errors, operating system events, asset events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Generate audit records relevant to security for the following categories: access control, request errors, operating system events, control system events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="logically_segment_control_system" name="The asset shall provide the capability to logically segment asset networks from non-asset networks and to logically segment critical asset networks from other asset networks." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Access from the control system to the World Wide Web should be clearly justified based on
control system operational requirements.
2. Logical Segmentation.
3. Physical Segmentation.
4. capability to provide network services to control system networks, critical or otherwise, without a connection to non-control system networks.
5. capability to logically and physically isolate critical control system networks from non-critical control system networks.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="mitigate_info_effects_flooding_types" name="The asset shall provide the capability to manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. boundary protection
2. restricting the information flow to be unidirectional outbound
3. manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events.
4. restrict the ability of all users (humans, software processes and devices) to cause DoS events which affect other control systems or networks.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="physically_segment_control_system" name="The asset shall provide the capability to physically segment asset networks from non-asset networks and to physically segment critical asset networks from non-critical asset networks." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="prevent_further_access_init_seslock" name="The asset shall provide the capability to prevent further access by initiating a session lock after a configurable time period of inactivity or by manual initiation. The session lock shall remain in effect until the human user who owns the session or another authorized human user re-establishes access using appropriate identification and authentication procedures." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. activate session lock mechanisms automatically after a configurable time period.
2. In some cases, session lock for control system operator workstations or nodes is not advised (for example, sessions which are required for immediate operator responses in emergency situations).
3. In situations where the control system cannot support session lock, the responsible entity should employ appropriate compensating countermeasures (for example, providing increased physical security, personnel security and auditing measures).
Note: Use the server or framework’s session management controls. The application should only recognize these session identifiers as valid. Session identifier creation must always be done on a trusted system (e.g., The server). Session management controls should use well vetted algorithms that ensure sufficiently random session identifiers. Set the domain and path for cookies containing authenticated session identifiers to an appropriately restricted value for the site. Logout functionality should fully terminate the associated session or connection. Logout functionality should be available from all pages protected by authorization. Establish a session inactivity timeout that is as short as possible, based on balancing risk and business functional requirements. In most cases it should be no more than several hours. Disallow persistent logins and enforce periodic session terminations, even when the session is active. Especially for applications supporting rich network connections or connecting to critical systems. Termination times should support business requirements and the user should receive sufficient notification to mitigate negative impacts. If a session was established before login, close that session and establish a new session after a successful login. Generate a new session identifier on any re-authentication. Do not allow concurrent logins with the same user ID. Supplement standard session management for sensitive server-side operations, like account management, by utilizing per-session strong random tokens or parameters. This method can be used to prevent Cross Site Request Forgery attacks. Supplement standard session management for highly sensitive or critical operations by utilizing per-request, as opposed to per-session, strong random tokens or parameters. Set the "secure" attribute for cookies transmitted over an TLS connection. Set cookies with the HttpOnly attribute, unless you specifically require client-side scripts within your application to read or set a cookie's value</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_conf_of_info_traversing_netw" name="The asset shall provide the capability to protect the confidentiality of information at rest and remote access sessions traversing an untrusted network." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_conf_of_info_at_rest_remote_access" name="The asset shall provide the capability to protect the confidentiality of information for which explicit read authorization is supported, whether at rest or in transit." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. physical means, compartmentalization or encryption.
2. configuring explicit read authorizations in the control system.
3. Digital Certificates.
4. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_integrity_transmitted_info" name="The asset shall provide the capability to protect the integrity of transmitted information." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="report_current_list_of_installed_assets" name="The asset shall provide the capability to report the current list of installed assets and their associated properties." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Usage of component ID, capability and revision level.
2. Formal process of configuration management should be deployed to keep control of the
changes in the component inventory baseline
3. The system requires all default passwords and pass phrases to be changed in order to complete the setup, prior to being operational.  This includes SSID passphrases, default accounts, admin accounts, etc.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="switch_to_and_from_emergency_power_supply" name="The asset shall provide the capability to switch to and from an emergency power supply without affecting the existing security state or a documented degraded mode. " issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>There may be instances where compensating countermeasures such as physical door access
control or control system may be affected by loss of base power supply, in which case the emergency power supply should cover those associated systems.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="common-sl2-cr1-11" name="SL2 - Common - CR1.11" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-11-adv_bruteforce_auth_creds" name="And adversary can bruteforce authentication credentials" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-522">
                  <countermeasures>
                    <countermeasure ref="limit_invalid_attempts" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="limit_invalid_attempts" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-7" name="SL2 - Common - CR1.7" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-7-adv_bruteforce_pw" name="An adversary is able to brute force the password" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-307">
                  <countermeasures>
                    <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-7-adv_guess_pw" name="An adversary is able to guess the password based on identifying an authenticator" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-521">
                  <countermeasures>
                    <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-1" name="SL2 - Common - CR2.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-1-adv_connect_with_compromised_acc_make_changes" name="An adversary is able to connect to the asset with a compromised account and is able to make changes to all content available on the asset. (no roles)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_auth_all_users_based_on_resp" mitigation="34"/>
                    <countermeasure ref="enforce_auth_based_on_role_leas_priv" mitigation="33"/>
                    <countermeasure ref="role_to_define_and_modify_perm_mapping" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_auth_all_users_based_on_resp" mitigation="34"/>
                <countermeasure ref="enforce_auth_based_on_role_leas_priv" mitigation="33"/>
                <countermeasure ref="role_to_define_and_modify_perm_mapping" mitigation="33"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-11" name="SL2 - Common - CR2.11" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-11-an_adversary_compromises_a_system_without_knowing_when_he_compromised_it" name="An adversary compromises a system without knowing when he compromised it." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                    <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-12" name="SL2 - Common - CR2.12" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-12-an_adversary_compromised_the_system_not_knowing_from_where_he_compromised_the_system" name="An adversary compromised the asset, not knowing from where he compromised the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="provide_human_user_interface_determine_user_took_action" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_human_user_interface_determine_user_took_action" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-2" name="SL2 - Common - CR2.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-2-adv_wifi_access" name="An adversary is able to get access to the asset via wireless protocols without authorization" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-3" name="SL2 - Common - CR2.3" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-3-adv_portable_dev_access" name="An adversary can access the asset using a portable device" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_config_usage_restriction" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_config_usage_restriction" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-5" name="SL2 - Common - CR2.5" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-5-an_adversary_can_perform_a_dos_attack_by_making_consecutive_authorization_requests" name="An adversary can perform a DoS attack by making consecutive authorization requests" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-307">
                  <countermeasures>
                    <countermeasure ref="prevent_further_access_init_seslock" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="prevent_further_access_init_seslock" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-8" name="SL2 - Common - CR2.8" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-8-an_aversary_could_have_compromised_the_sytem_without_you_knowing" name="An adversary could have compromised the system without you knowing what part in the asset was compromised or how he compromised the asset " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-1" name="SL2 - Common - CR3.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-1-adv_intercept_netw_traffic" name="An adversary can intercept network traffic" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="25" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-5">
                  <countermeasures>
                    <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                    <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-5" name="SL2 - Common - CR3.5" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-5-adv_xss" name="An adversary can perform cross site scripting when input is not validated" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-79">
                  <countermeasures>
                    <countermeasure ref="validate_syntax_length_content_of_any_input" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="validate_syntax_length_content_of_any_input" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-7" name="SL2 - Common - CR3.7" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-7-adv_disclose_info_via_error_msg" name="An adversary can use error messages that contain too much information, such as stack traces, to discover vulnerabilities in the running service." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-209">
                  <countermeasures>
                    <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-9" name="SL2 - Common - CR3.9" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-9-adv_delete_audit_records_after_breach" name="An adversary is able to delete audit records after a system breach which can make investigations very difficult  " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-732">
                  <countermeasures>
                    <countermeasure ref="protect_audit_info_logs_tools" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_audit_info_logs_tools" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr4-1" name="SL2 - Common - CR4.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr4-1-adv_intercept_unecrypted_file_in_transit" name="An adversary is able to intercept an unencrypted file in transit" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="protect_conf_of_info_at_rest_remote_access" mitigation="50"/>
                    <countermeasure ref="protect_conf_of_info_traversing_netw" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_conf_of_info_at_rest_remote_access" mitigation="50"/>
                <countermeasure ref="protect_conf_of_info_traversing_netw" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr5-1" name="SL2 - Common - CR5.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr5-1-network_segmentation_exploit" name="An adversary is able to hop between internal networks since they are not segregated" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="logically_segment_control_system" mitigation="50"/>
                    <countermeasure ref="physically_segment_control_system" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="logically_segment_control_system" mitigation="50"/>
                <countermeasure ref="physically_segment_control_system" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr6-2" name="SL2 - Common - CR6.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr6-2-continuous_monitoring_exploit" name="An adversary compromises a system  without it being timely notified and detected by for example a IDS" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-693">
                  <countermeasures>
                    <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-1" name="SL2 - Common - CR7.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-1-dos_no_protect" name="Assets might lose the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event.&#10;" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-1100">
                  <countermeasures>
                    <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                    <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-5" name="SL2 - Common - CR7.5" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-5-emergency_power" name="An adversary can cause a power outage of a security system which will give an adversary to compromise the asset." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="switch_to_and_from_emergency_power_supply" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="switch_to_and_from_emergency_power_supply" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-7" name="SL2 - Common - CR7.7" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-7-unauth_access_unnecessary_func" name="Unauthorized component access might occur as a result of not being able to restrict unnecessary functions, ports, protocols and/or services." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-8" name="SL2 - Common - CR7.8" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-8-rogue_assets" name="Rogue assets might enter the network as a result of not being able to verify component identities." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="f7142078-dd36-4b15-a67d-5f276c86727d" diagramComponentId="4d065f46-1f7e-4166-b074-2fd038367879" ref="8ec58ca9-19d2-42bd-8fd5-f5e0a34edc30" name="HMI,GUI,Display" desc="" library="iec62443" parentComponentRef="" componentDefinitionRef="hmi-gui-display">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="iec62443-sl2"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-300" name="Channel Accessible by Non-Endpoint ('Man-in-the-Middle')" state="0" impact="100" issueId="">
          <desc>The product does not adequately verify the identity of actors at both ends of a communication channel, or does not adequately ensure the integrity of the channel, in a way that allows the channel to be accessed or influenced by an actor that is not an endpoint.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-284" name="Improper Access Control" state="0" impact="100" issueId="">
          <desc>The software does not restrict or incorrectly restricts access to a resource from an unauthorized actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-287" name="Improper Authentication" state="0" impact="100" issueId="">
          <desc>When an actor claims to have a given identity, the software does not prove or insufficiently proves that the claim is correct.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-94" name="Improper Control of Generation of Code ('Code Injection')" state="0" impact="100" issueId="">
          <desc>The software constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behaviour of the intended code segment.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-20" name="Improper Input Validation" state="0" impact="100" issueId="">
          <desc>The product does not validate or incorrectly validates input that can affect the control flow or data flow of a program.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-79" name="Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')" state="0" impact="100" issueId="">
          <desc>The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-147" name="Improper Neutralization of Input Terminators" state="0" impact="100" issueId="">
          <desc>The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as input terminators when they are sent to a downstream component.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-117" name="Improper Output Neutralization for Logs" state="0" impact="100" issueId="">
          <desc>The software does not neutralize or incorrectly neutralizes output that is written to logs.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-307" name="Improper Restriction of Excessive Authentication Attempts" state="0" impact="100" issueId="">
          <desc>The software does not implement sufficient measures to prevent multiple failed authentication attempts within in a short time frame, making it more susceptible to brute force attacks.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-354" name="Improper Validation of Integrity Check Value" state="0" impact="100" issueId="">
          <desc>The software does not validate or incorrectly validates the integrity check values or "checksums" of a message. This may prevent it from detecting if the data has been modified or corrupted in transmission.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-347" name="Improper Verification of Cryptographic Signature" state="0" impact="100" issueId="">
          <desc>The software does not verify, or incorrectly verifies, the cryptographic signature for data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-326" name="Inadequate Encryption Strength" state="0" impact="100" issueId="">
          <desc>The software stores or transmits sensitive data using an encryption scheme that is theoretically sound, but is not strong enough for the level of protection required.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-532" name="Inclusion of Sensitive Information in Log Files" state="0" impact="100" issueId="">
          <desc>Information written to log files can be of a sensitive nature and give valuable guidance to an attacker or expose sensitive user information.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-732" name="Incorrect Permission Assignment for Critical Resource" state="0" impact="100" issueId="">
          <desc>The software specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-286" name="Incorrect User Management" state="0" impact="100" issueId="">
          <desc>The software does not properly manage a user within its environment.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-209" name="Information Exposure Through an Error Message" state="0" impact="100" issueId="">
          <desc>The software generates an error message that includes sensitive information about its environment, users, or associated data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-1100" name="Insufficient Isolation of System-Dependent Functions" state="0" impact="100" issueId="">
          <desc>The product or code does not isolate system-dependent
					functionality into separate stand-alone modules.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="">
          <desc>When a security-critical event occurs, the software either does not record the event or omits important details about the event when logging it.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-522" name="Insufficiently Protected Credentials" state="0" impact="100" issueId="">
          <desc>This weakness occurs when the application transmits or stores authentication credentials and uses an insecure method that is susceptible to unauthorized interception and/or retrieval.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-5" name="J2EE Misconfiguration: Data Transmission Without Encryption" state="0" impact="100" issueId="">
          <desc>Information sent over a network can be compromised while in transit. An attacker may be able to read or modify the contents if the data are sent in plaintext or are weakly encrypted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-322" name="Key Exchange without Entity Authentication" state="0" impact="100" issueId="">
          <desc>The software performs a key exchange with an actor without verifying the identity of that actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-311" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="">
          <desc>The software does not encrypt sensitive or critical information before storage or transmission.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-636" name="Not Failing Securely ('Failing Open')" state="0" impact="100" issueId="">
          <desc>When the product encounters an error condition or failure, its design requires it to fall back to a state that is less secure than other options that are available, such as selecting the weakest encryption algorithm or using the most permissive access control restrictions.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-672" name="Operation on a Resource after Expiration or Release" state="0" impact="100" issueId="">
          <desc>The software uses, accesses, or otherwise operates on a resource after that resource has been expired, released, or revoked.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-693" name="Protection Mechanism Failure" state="0" impact="100" issueId="">
          <desc>The product does not use or incorrectly uses a protection mechanism that provides sufficient defence against directed attacks against the product.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-384" name="Session Fixation" state="0" impact="100" issueId="">
          <desc>Authenticating a user, or otherwise establishing a new user session, without invalidating any existing session identifier gives an attacker the opportunity to steal authenticated sessions.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-507" name="Trojan Horse" state="0" impact="100" issueId="">
          <desc>The software appears to contain benign or useful functionality, but it also contains code that is hidden from normal operation that violates the intended security policy of the user or the system administrator.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-400" name="Uncontrolled Resource Consumption" state="0" impact="100" issueId="">
          <desc>The software does not properly control the allocation and maintenance of a limited resource thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-601" name="URL Redirection to Untrusted Site ('Open Redirect')" state="0" impact="100" issueId="">
          <desc>A web application accepts a user-controlled input that specifies a link to an external site, and uses that link in a Redirect. This simplifies phishing attacks.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-798" name="Use of Hard-coded Credentials" state="0" impact="100" issueId="">
          <desc>The software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-916" name="Use of Password Hash With Insufficient Computational Effort" state="0" impact="100" issueId="">
          <desc>The software generates a hash for a password, but it uses a scheme that does not provide a sufficient level of computational effort that would make password cracking attacks infeasible or expensive.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-261" name="Weak Cryptography for Passwords" state="0" impact="100" issueId="">
          <desc>Obscuring a password with a trivial encoding does not protect the password.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-521" name="Weak Password Requirements" state="0" impact="100" issueId="">
          <desc>The product does not require that users should have strong passwords, which makes it easier for attackers to compromise user accounts.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-123" name="Write-what-where Condition" state="0" impact="100" issueId="">
          <desc>Any condition where the attacker has the ability to write an arbitrary value to an arbitrary location, often as the result of a buffer overflow.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="protect_audit_info_logs_tools" name="Assets shall protect audit information, audit logs, and audit tools (if present) from unauthorized access, modification and deletion." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. the storage of audit information to hardware-enforced write-once media.
2. Access Management Process</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.11" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_auth_all_users_based_on_resp" name="Assets shall provide an authorization enforcement mechanism for all identified and authenticated users based on their assigned responsibilities." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. On all interfaces, the control system shall provide the capability to enforce authorizations assigned to all users (humans, software processes and devices) for controlling use of the control system to support segregation of duties and least privilege.
2. Authorization is granting of permissions based on authentication. 
3.All authorization decisions should be made on the server, not the client.  
4. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
5. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
6. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
7. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
8. Server side implementation and presentation layer representations of access control rules must match. 
9. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
10. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
11. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="auth_humans_tools_audit_logs" name="Assets shall provide the capability for authorized humans and/or tools to access audit logs on a read-only basis." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Access Control - Authorize members
2. Least Privilege &amp; Need to Know Basis
3. Review of access </desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="config_according_to_recommended_netw_and_security" name="Assets shall provide the capability to be configured according to recommended network and security configurations as described in guidelines provided by the asset supplier. The asset shall provide an interface to the currently deployed network and security configuration settings." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Devices with network connectivity are capable of being updated from the network.
2. provide the capability to generate a report listing the currently deployed security settings in a machine-readable format.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="continuous_monitor_accepted_sec" name="Assets shall provide the capability to be continuously monitored using commonly accepted security industry practices and recommendations to detect, characterize and report security breaches in a timely manner." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Control system monitoring capability can be achieved through a variety of tools and
techniques (for example, IDS, IPS, malicious code protection mechanisms and network monitoring mechanisms).
2. Monitoring devices should be strategically deployed within the control system (for example, at
selected perimeter locations and near server farms supporting critical applications) to collect
essential information. Monitoring mechanisms may also be deployed at ad hoc locations
within the control system to track specific transactions
3. SIEM Implementation</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="cap_to_be_recovered_to_known_secure_state" name="Assets shall provide the capability to be recovered and reconstituted to a known secure state after a disruption or failure." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Control system recovery and reconstitution to a known secure state means that all system
parameters (either default or configurable) are set to secure values, security-critical patches
are reinstalled, security-related configuration settings are reestablished, system documentation and operating procedures are available, application and system software is reinstalled and configured with secure settings, information from the most recent, known secure backups is loaded and the system is fully tested and functional.
1. Roll back procedure.
2. Secure storage of previous version</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_for_audit_records" name="Assets shall provide the capability to create timestamps (including date and time) for use in audit records." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Timestamps (including date and time) of audit records should be generated using internal
system clocks.
1. provide timestamps for use in audit record generation.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" name="Assets shall provide the capability to create timestamps that are synchronized with a system wide time source." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>to synchronize internal system clocks at a configurable frequency.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="explicit_read_auth_protect_conf_info" name="Assets shall provide the capability to erase all information, for which explicit read authorization is supported, from assets to be released from active service and/or decommissioned." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Removal of a control system component from active service should not provide the
opportunity for unintentional release of information for which explicit read authorization is
supported.
1. Information produced by the actions of a user or role (or the actions of a software process
acting on behalf of a user or role) should not be disclosed to a different user or role in an
uncontrolled fashion.
2. Purging of all information from volatile memory, active service or decommissioned system.
3. Ensure purging successfully occurs
NOTE Volatile memory resources are those that typically do not retain information after being released to memory management. However, there are attacks against random access memory (RAM) that have the potential to extract key material or other confidential data before it is actually over-written. Therefore, it is a commonly accepted practice to purge all unique data and connections to unique data from volatile shared memory when that memory is released back to the control system for use by a different user, such that this data is not visible or accessible to the new user.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="limit_rsrc_by_sec" name="Assets shall provide the capability to limit the use of resources by security functions to protect against resource exhaustion." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Resource management (for example, network segmentation or priority schemes) prevents a
lower-priority software process from delaying or interfering with the control system servicing
any higher-priority software process.
1. initiating network scans, patching and/or antivirus checks on an operating system.
2. Traffic rate limiting schemes should be considered as a mitigation technique.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="maintain_essential_functions" name="Assets shall provide the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>provide the capability to manage communication loads (such as
using rate limiting) to mitigate the effects of information flooding types of DoS events.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="support_auth_check_on_software_config" name="Assets shall provide the capability to perform or support authenticity checks on software, configuration and other information as well as the recording and reporting of the results of these checks or be integrated into a system that can perform or support authenticity checks." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Integrity verification methods are employed to detect, record, report and protect against software and information tampering.
1. cryptographic hashes
2. Notification of unauthorize changes
Integrity verification methods are employed to detect, record, report and protect against software and information tampering that may occur if other protection mechanisms (such as authorization enforcement) have been circumvented. The control system should employ formal or recommended integrity mechanisms (such as cryptographic hashes).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="integrity_check_software" name="Assets shall provide the capability to perform or support integrity checks on software, configuration and other information as well as the recording and reporting of the results of these checks or be integrated into a system that can perform or support integrity checks." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Integrity verification methods are employed to detect, record, report and protect against software and information tampering.
1. cryptographic hashes
2. Notification of unauthorize changes
Integrity verification methods are employed to detect, record, report and protect against software and information tampering that may occur if other protection mechanisms (such as authorization enforcement) have been circumvented. The control system should employ formal or recommended integrity mechanisms (such as cryptographic hashes).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_critical_long_lived_symmetric_keys" name="Assets shall provide the capability to protect critical, long lived symmetric keys via hardware mechanisms." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. establish the mutual trust using the symmetric key; store securely the shared secret (the authentication is valid as long as the shared secret remains secret); restrict access to the shared secret; ensure that the algorithms and keys used for the symmetric key authentication</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.16" supportedStandardRef="iec-62443-4-2:2019"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" name="Assets shall provide the capability to specifically restrict the use of unnecessary functions, ports, protocols and/or services." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc> 1. capability to specifically prohibit and/or restrict the use of unnecessary functions, ports, protocols and/or services.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="validate_syntax_length_content_of_any_input" name="Assets shall validate the syntax, length and content of any input data that is used as an industrial process control input or input via external interfaces that directly impacts the action of the asset." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. input data validation include out-of-range values for a defined field type, invalid characters in data fields, missing or incomplete data and buffer overflow.
2. SAST &amp; DAST
3. Data from external sources are sanitized based on acceptable formats and lengths.  It is preferred to use white listing, over black listing.
4. Data is validated when crossing API boundaries</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="phys_logical_connect_to_automation_process" name="Assets that physically or logically connect to an automation process shall provide the capability to set outputs to a predetermined state if normal operation as defined by the asset supplier cannot be maintained." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. The appropriate predetermined state of control system outputs is application dependent and could be one of the following user configurable options:
• Unpowered – the outputs fail to the unpowered state
• Hold – the outputs fail to the last-known good value
• Fixed – the outputs fail to a fixed value that is determined by the asset owner or an
application
2. All user supplied data is encoded prior to output. (i.e.. Html encoding, special character encoding).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_pw_policy_enforce" name="For assets utilizing password-based authentication, the asset shall provide the capability to enforce configurable password strength based on minimum length and variety of character types. " issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.
Note: A service should employ one or more tactics to prevent or at least slow down a brute force attack, including: blacklisting an IP after 5 unsuccessful attempts, slowing down attempts with increasing timeout delays introduced after 5 unsuccessful attempts, locking out non-admin accounts after 3 unsuccessful attempts.  The account must be disabled for a period of time sufficient to discourage brute force guessing of credentials, but not so long as to allow for a denial-of-service attack to be performed.  Allow non-admin users to reset their own passwords to prevent administrative burden.  If users are allowed to reset their password, best practice is to email a new password to the users email account and require a reset upon next logon.  It is not best practice to simply reset and display the new password on the authentication screen as an attacker may trigger that reset and change the password without notice to the user.  If using a screen reveal of password, should be accompanied by both a known secret of user, such as mothers maiden name and also an email to notify the user of such a change.  Temporary passwords and links should have a short expiration time.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_id_and_auth_for_human_users" name="Identify and authenticate all human users" issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. passwords, tokens, biometrics, Certificates, geographic location
2. role-based or group-based
3. should be applied to both local and remote access to the control system.
4. Least Privilege 
5. Segregation of Duties
6. Authentication types (factors): (1) something you know (a secret) -like username and password; (2) something you have - such as a token device or smart phone; and (3) something you are - such as biometrics. 
7. On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.
8.  services should run as non-root accounts or use SUID accounts that release privilege after service start.  Non-root accounts used for services should not have a shell enabled, i.e. /dev/null should be shell in passwd file.  In cases where the application must run with elevated privileges, raise privileges as late as possible, and drop them as soon as possible.  For windows based services, it is preferred to run the service as SYSTEM, instead of an administrator account, which would have credentials which may be guessed and used in an attack.
9. Authorization is granting of permissions based on authentication. 
10.All authorization decisions should be made on the server, not the client.  
11. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
12. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
13. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
14. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
15. Server side implementation and presentation layer representations of access control rules must match. 
16. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
17. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
18. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources
Note: system level forms of identification, such as IP or MAC address are easily spoofable and therefore do not qualify as a valid form of authentication. Establish and utilize standard, tested, authentication services whenever possible. Use a centralized implementation for all authentication controls, including libraries that call external authentication services. Segregate authentication logic from the resource being requested and use redirection to and from the centralized authentication control.  All authentication controls should fail securely. Enforce password complexity requirements established by policy or regulation. Authentication credentials should be sufficient to withstand attacks that are typical of the threats in the deployed environment. (e.g., requiring the use of alphabetic as well as numeric and/or special characters). Enforce password length requirements established by policy or regulation. Eight characters is commonly used, but 16 is better or consider the use of multi-word pass phrases. Password entry should be obscured on the user's screen. (e.g., on web forms use the input type "password")</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_human_user_interface_determine_user_took_action" name="If an asset provides a human user interface, the asset shall provide the capability to determine whether a given human user took a particular action. Control elements that are not able to support such capability shall be listed in component documents." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Examples of particular actions taken by a user include performing operator actions, changing
control system configurations, creating information, sending a message, approving
information (such as indicating concurrence) and receiving a message.
1. digital signatures, digital message receipts and timestamps</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.14" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="terminate_remote_session_auto_or_manual" name="If an asset supports remote sessions, the asset shall provide the capability to terminate a remote session either automatically after a configurable time period of inactivity, manually by a local authority, or manually by the user (human, software process or device) who initiated the session." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Terminate a remote session either automatically after a configurable time period of inactivity, manually by a local authority, or manually by the user (human, software process or device) who initiated the session.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" name="If an asset supports usage through wireless interfaces it shall provide the capability to integrate into the asset that supports usage authorization, monitoring and restrictions according to commonly accepted industry practices." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>provide the capability to authorize, monitor and enforce usage restrictions for wireless connectivity to the control system.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="user_crypto_algs" name="If cryptography is required, the asset shall use cryptographic algorithms, key sizes and mechanisms for key establishment and management according to commonly accepted security industry practices and recommendations." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. document the practices and procedures relating to cryptographic key establishment and management.
2. utilize established and tested encryption and hash algorithms, such as the advanced
encryption standard (AES) and the secure hash algorithm (SHA) series, and key sizes based
on an assigned standard.
3. Key generation needs to be performed using an effective random number generator.
4. The security policies and procedures for key management need to address
periodic key changes, key destruction, key distribution and encryption key backup in
accordance with defined standards</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_acc_mgmt_for_auth_users" name="Provide support of management of all accounts by authorized users" issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. individual, role-based, device-based, Service &amp;  default account management Policy.
2. Review of accounts.
3. Approvals for creating, disabling, removing or modifying accounts.
4.  On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="allocate_sufficient_audit_record_storage" name="The asset shall allocate sufficient audit record storage capacity according to commonly recognized recommendations for log management and system configuration. The asset shall provide auditing mechanisms to reduce the likelihood of such capacity being exceeded." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>The control system shall allocate sufficient audit record storage capacity according to
commonly recognized recommendations for log management and system configuration. The
control system shall provide auditing mechanisms to reduce the likelihood of such capacity
being exceeded</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.11" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="id_and_handle_error_conditions" name="The asset shall identify and handle error conditions in a manner such that effective remediation can occur. This shall be done in a manner which does not provide information that could be exploited by adversaries to attack the IACS unless revealing this information is necessary for the timely troubleshooting of problems." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Error messages generated by the control system should provide timely and useful information without revealing potentially harmful information.
2. Vulnerability Assessment &amp; Penetration Testing</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_auth_based_on_role_leas_priv" name="The asset shall provide authorization enforcement for all users based on their assigned responsibilities and least privilege" issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. enforce authorizations assigned to all human users.
2. Use control policies (for example, identity-based policies, role-based policies and rule-based policies) and associated read/write access enforcement mechanisms (for example, access control lists, access control matrices and cryptography).
2. check which roles are assigned to a verified user or asset and which privileges are assigned to these roles – if the requested operation is covered by the permissions, it is executed, otherwise rejected. Only qualified and authorized individuals should obtain the use of control system components for purposes of initiating changes, including upgrades and modifications. Authorization is granting of permissions based on authentication. 
3.All authorization decisions should be made on the server, not the client.  
4. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
5. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
6. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
7. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
8. Server side implementation and presentation layer representations of access control rules must match. 
9. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
10. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
11. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="role_to_define_and_modify_perm_mapping" name="The asset shall provide directly or through a compensating security mechanism, for an authorized role to define and modify the mapping of permissions to roles for all human users" issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>The control system shall provide the capability for an authorized user or role to define and
modify the mapping of permissions to roles for all human users.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="alert_personnel_prevent_svc_loss" name="The asset shall provide the capability to alert personnel and prevent the loss of essential services and functions in the event of an audit processing failure. The control system shall provide the capability to support appropriate actions in response to an audit processing failure according to commonly accepted industry practices and recommendations. " issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Audit generation typically occurs at the source of the event. Audit processing involves
transmission, possible augmentation (such as the addition of a timestamp) and persistent
storage of the audit records. Audit processing failures include, for example, software or
hardware errors, failures in the audit capturing mechanisms and audit storage capacity being
reached or exceeded
1.capability to alert personnel and prevent the loss of essential services and functions in the event of an audit processing failure.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.12" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_config_usage_restriction" name="The asset shall provide the capability to automatically enforce configurable usage restrictions" issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Authenticate &amp; Authorize devices before allowing connection.
2. Digital+E46 Signatures</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="deny_access_via_untrusted_netw_unless_approved" name="The asset shall provide the capability to deny access requests via untrusted networks unless approved by an assigned role." issueId="" platform="" cost="0" risk="74" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.15" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="deny_netw_traffic_allow_netw_traffic_exceptions" name="The asset shall provide the capability to deny network traffic by default and allow network traffic by exception (also termed deny all, permit by exception)." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>deny network traffic by default and allow network traffic by exception (also termed deny all, permit by exception).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="show_sys_use_notification" name="The asset shall provide the capability to display a system use notification message before authenticating. The system use notification message shall be configurable by authorized personnel." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. display a system use notification message or warning banners before authenticating &amp; configurable by authorized personnel.
2. Privacy and security policies and procedures need to be consistent with applicable laws,
directives, policies, regulations, standards and guidance.
3. Examples of elements for inclusion in the system use notification message are:
a) that the individual is accessing a specific control system;
b) that system usage may be monitored, recorded and subject to audit;
c) that unauthorized use of the system is prohibited and subject to criminal and/or civil
penalties; and
d) that use of the system indicates consent to monitoring and recording</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.14" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="employ_cypto_mechs_to_recognize_changes" name="The asset shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="employ_maware_protection" name="The asset shall provide the capability to employ malicious code protection mechanisms at all entry and exit points." issueId="" platform="" cost="0" risk="74" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>prevent, detect, mitigate and report instances of detected malicious code (for example, viruses, worms, Trojan horses and spyware) transported by electronic mail, electronic mail attachments, Internet access, removable media (for example, universal serial bus (USB) devices, diskettes or compact disks), PDF documents, web services, network connections and infected laptops or other
common means.
1. Detection Technique  - binary integrity and attributes monitoring, hashing and signature techniques.
2.Mitigation technique - file cleaning, quarantining, file deletion, host communication restriction and IPSs
3. Prevention Technique - application blacklisting and whitelisting techniques, removable media control, sandbox techniques and specific computing platforms mechanisms such as restricted firmware update capabilities, No Execute (NX) bit, data execution prevention (DEP), address space layout randomization (ASLR), stack corruption detection and mandatory access controls.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" name="The asset shall provide the capability to employ protection mechanisms to prevent, detect, report and mitigate the effects of malicious code or unauthorized software. The asset shall provide the capability to update the protection mechanisms." issueId="" platform="" cost="0" risk="74" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>prevent, detect, mitigate and report instances of detected malicious code (for example, viruses, worms, Trojan horses and spyware) transported by electronic mail, electronic mail attachments, Internet access, removable media (for example, universal serial bus (USB) devices, diskettes or compact disks), PDF documents, web services, network connections and infected laptops or other
common means.
1. Detection Technique  - binary integrity and attributes monitoring, hashing and signature techniques.
2.Mitigation technique - file cleaning, quarantining, file deletion, host communication restriction and IPSs
3. Prevention Technique - application blacklisting and whitelisting techniques, removable media control, sandbox techniques and specific computing platforms mechanisms such as restricted firmware update capabilities, No Execute (NX) bit, data execution prevention (DEP), address space layout randomization (ASLR), stack corruption detection and mandatory access controls.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="limit_invalid_attempts" name="The asset shall provide the capability to enforce a limit of a configurable number of consecutive invalid access attempts by any user (human, software process or device) during a configurable time period. The asset shall provide the capability to deny access for a specified period of time or until unlocked by an administrator when this limit has been exceeded." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. limit of a configurable number of consecutive invalid access attempts by any user (human, software process or device).
2. As per Policy.
3. For all invalid authentication attempts, the server should simply respond "invalid attempt, please retry" or similarly vague statement that does not imply partial success.  
Note: A service should employ one or more tactics to prevent or at least slow down a brute force attack, including: blacklisting an IP after 5 unsuccessful attempts, slowing down attempts with increasing timeout delays introduced after 5 unsuccessful attempts, locking out non-admin accounts after 3 unsuccessful attempts.  The account must be disabled for a period of time sufficient to discourage brute force guessing of credentials, but not so long as to allow for a denial-of-service attack to be performed.  Allow non-admin users to reset their own passwords to prevent administrative burden.  If users are allowed to reset their password, best practice is to email a new password to the users email account and require a reset upon next logon.  It is not best practice to simply reset and display the new password on the authentication screen as an attacker may trigger that reset and change the password without notice to the user.  If using a screen reveal of password, should be accompanied by both a known secret of user, such as mothers maiden name and also an email to notify the user of such a change.  Temporary passwords and links should have a short expiration time.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="restrict_mobile_code" name="The asset shall provide the capability to enforce usage restrictions for mobile code technologies based on the potential to cause damage to the asset." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Mobile code technologies include, but are not limited to, Java, JavaScript, ActiveX, portable
document format (PDF), Postscript, Shockwave movies, Flash animations and VBScript.
1. The control system shall provide the capability to enforce usage restrictions for mobile code technologies based on the potential to cause damage to the control system that include:
a) preventing the execution of mobile code;
b) requiring proper authentication and authorization for origin of the code;
c) restricting mobile code transfer to/from the control system; and
d) monitoring the use of mobile code.
2. verify integrity of the mobile code before allowing code execution with HASH/Codesigning technique.
3. both the selection and use of mobile code installed on servers and
mobile code downloaded and executed.
4. prevent the development, acquisition or introduction of unacceptable mobile code within the control system. For example, mobile code exchanges may be disallowed directly with the
control system, but may be allowed in a controlled adjacent environment.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" name="The asset shall provide the capability to generate audit records relevant to security for the following categories: access control, request errors, operating system events, asset events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Generate audit records relevant to security for the following categories: access control, request errors, operating system events, control system events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" name="The asset shall provide the capability to identify and authenticate all software processes and devices. This capability shall enforce such identification and authentication on all interfaces which provide access to the asset to support least privilege in accordance with applicable security policies and procedures." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. identity bound to the physical device
2. passwords, tokens or location (physical or logical)
3. role-based, group-based or entity-based,
4. Combination of 1) something you know (a secret) -like username and password; (2) something you have - such as a token device or smart phone; and (3) something you are - such as biometrics. 
5. Assign identifiers that uniquely identify users/devices
a. E.g., employ a unique username-password combination for the user
b. Reasoning: This will prevent user 1 from spoofing as user 2. This is a concern for users with different levels of access.
6. Uniquely identify and authenticate users and devices
c. Multi-factor authentication
d. Use of authentication protocols that require no password/multifactor authentication: e.g., OAuth, OpenID, SAML</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_auth_init" name="The asset shall provide the capability to: initialize authenticator content; change all default authenticators upon asset installation; change/refresh all authenticators; protect all authenticators from unauthorized disclosure and modification when stored and transmitted." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>&gt; initialize authenticator content;
&gt; change all default authenticators upon control system installation;
&gt; change/refresh all authenticators; and
&gt; protect all authenticators from unauthorized disclosure and modification when stored and
transmitted
2.  tokens, symmetric keys, private keys (part of a public/private key pair), biometrics,
passwords, physical keys and key card
3. Human users should take reasonable measures to safeguard authenticators, including maintaining possession of their individual authenticators, not loaning or sharing authenticators with others and reporting lost or compromised authenticators immediately.
4. cryptographic protections such as encryption or hashing or by handshake protocols which do not require transmission of the password. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.
5. Lockout or loss of control due to security measures is not acceptable. If the control system is required to have a high level of availability, measures should be taken to maintain this high
level of availability (such as compensating physical countermeasures, duplicate keys and
supervisory override).
6. Complex strength of the authentication mechanism</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="logically_segment_control_system" name="The asset shall provide the capability to logically segment asset networks from non-asset networks and to logically segment critical asset networks from other asset networks." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Access from the control system to the World Wide Web should be clearly justified based on
control system operational requirements.
2. Logical Segmentation.
3. Physical Segmentation.
4. capability to provide network services to control system networks, critical or otherwise, without a connection to non-control system networks.
5. capability to logically and physically isolate critical control system networks from non-critical control system networks.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="mitigate_info_effects_flooding_types" name="The asset shall provide the capability to manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. boundary protection
2. restricting the information flow to be unidirectional outbound
3. manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events.
4. restrict the ability of all users (humans, software processes and devices) to cause DoS events which affect other control systems or networks.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="monitor_control_access_methods" name="The asset shall provide the capability to monitor and control all methods of access to the asset via untrusted networks." issueId="" platform="" cost="0" risk="74" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Examples of access to the control system via untrusted networks typically include remote
access methods (such as dial-up, broadband and wireless) as well as connections from a
company’s office (non-control system) network.
1. restrict access achieved through dial-up connections (for example, limiting dial-up access based upon the source of the request).
2. protect against unauthorized connections or subversion of authorized connections (for example, using virtual private network technology).
3. Access via untrusted networks to geographically remote control system component locations (for example, control centers and field locations) should only be enabled when necessary and authenticated.
4. Multifactor authentication for remote user access to the control system.
5. Use of VPNs &amp; Firewalls.
6. Monitoring &amp; Logging of Access for control systems.
7. deny access requests via untrusted networks unless approved by an assigned role.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.15" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="monitor_control_comms_zone_boundaries" name="The asset shall provide the capability to monitor and control communications at zone boundaries to enforce the compartmentalization defined in the risk-based zones and conduits model." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Any connections to external networks or other control systems should occur through managed
interfaces consisting of appropriate boundary protection devices (for example, proxies,
gateways, routers, firewalls, unidirectional gateways, guards and encrypted tunnels) arranged
in an effective architecture (for example, firewalls protecting application gateways residing in
a DMZ).
1. capability to deny network traffic by default and allow network traffic by exception (also termed deny all, permit by exception).
2. capability to prevent any communication through the control system boundary (also termed island mode).
3. The control system shall provide the capability to prevent any communication through the
control system boundary when there is an operational failure of the boundary protection
mechanisms (also termed fail close). This ‘fail close’ functionality shall be designed such that
it does not interfere with the operation of a SIS or other safety-related functions.
4. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="physically_segment_control_system" name="The asset shall provide the capability to physically segment asset networks from non-asset networks and to physically segment critical asset networks from non-critical asset networks." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="prevent_further_access_init_seslock" name="The asset shall provide the capability to prevent further access by initiating a session lock after a configurable time period of inactivity or by manual initiation. The session lock shall remain in effect until the human user who owns the session or another authorized human user re-establishes access using appropriate identification and authentication procedures." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. activate session lock mechanisms automatically after a configurable time period.
2. In some cases, session lock for control system operator workstations or nodes is not advised (for example, sessions which are required for immediate operator responses in emergency situations).
3. In situations where the control system cannot support session lock, the responsible entity should employ appropriate compensating countermeasures (for example, providing increased physical security, personnel security and auditing measures).
Note: Use the server or framework’s session management controls. The application should only recognize these session identifiers as valid. Session identifier creation must always be done on a trusted system (e.g., The server). Session management controls should use well vetted algorithms that ensure sufficiently random session identifiers. Set the domain and path for cookies containing authenticated session identifiers to an appropriately restricted value for the site. Logout functionality should fully terminate the associated session or connection. Logout functionality should be available from all pages protected by authorization. Establish a session inactivity timeout that is as short as possible, based on balancing risk and business functional requirements. In most cases it should be no more than several hours. Disallow persistent logins and enforce periodic session terminations, even when the session is active. Especially for applications supporting rich network connections or connecting to critical systems. Termination times should support business requirements and the user should receive sufficient notification to mitigate negative impacts. If a session was established before login, close that session and establish a new session after a successful login. Generate a new session identifier on any re-authentication. Do not allow concurrent logins with the same user ID. Supplement standard session management for sensitive server-side operations, like account management, by utilizing per-session strong random tokens or parameters. This method can be used to prevent Cross Site Request Forgery attacks. Supplement standard session management for highly sensitive or critical operations by utilizing per-request, as opposed to per-session, strong random tokens or parameters. Set the "secure" attribute for cookies transmitted over an TLS connection. Set cookies with the HttpOnly attribute, unless you specifically require client-side scripts within your application to read or set a cookie's value</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="prevent_general_purpose_person2person_msg" name="The asset shall provide the capability to prevent general purpose person-to-person messages from being received from users or systems external to the asset." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>General purpose person-to-person communications systems include but are not limited to:
email systems, forms of social media (Twitter, Facebook, picture galleries, etc.) or any
message systems that permit the transmission of any type of executable file.
1. restrictions and limiting data flow as described elsewhere in this standard to general purpose
person-to-person communication systems
2. restrict email or other messaging solutions that provide internal computer-to-external computer communications using outbound messages.
3. Users may not be given the ability to attach files or other information to these outbound-only messages at the time the messages are created by the system.
4. capability to prevent both transmission and receipt of general purpose person-to-person messages.
5. support partitioning of data, applications and services based on criticality to facilitate implementing a zoning model.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_conf_of_info_traversing_netw" name="The asset shall provide the capability to protect the confidentiality of information at rest and remote access sessions traversing an untrusted network." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_conf_of_info_at_rest_remote_access" name="The asset shall provide the capability to protect the confidentiality of information for which explicit read authorization is supported, whether at rest or in transit." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. physical means, compartmentalization or encryption.
2. configuring explicit read authorizations in the control system.
3. Digital Certificates.
4. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_integrity_of_sessions" name="The asset shall provide the capability to protect the integrity of sessions. The asset shall reject any usage of invalid session IDs." issueId="" platform="" cost="0" risk="69" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Use of session integrity mechanisms can have a significant overhead and therefore their use should be considered in light of requirements for real-time communications.
2. capability to invalidate session IDs upon user logout or other session termination (including browser sessions).
3. generate a unique session ID for each session and treat all unexpected session IDs as invalid.
4. generate unique session IDs with commonly accepted sources of randomness.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_integrity_transmitted_info" name="The asset shall provide the capability to protect the integrity of transmitted information." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_relevant_priv_keys" name="The asset shall provide the capability to protect the relevant private keys via hardware mechanisms according to commonly accepted security industry practices and recommendations." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Follow All below Steps:
l) validate certificates by checking the validity of the signature of a given certificate;
m) validate certificates by constructing a certification path to an accepted CA or in the case of
self-signed certificates by deploying leaf certificates to all hosts which communicate with
the subject to which the certificate is issued;
n) validate certificates by checking a given certificate’s revocation status;
o) establish user (human, software process or device) control of the corresponding private
key; and
p) map the authenticated identity to a user (human, software process or device).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.11" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="report_current_list_of_installed_assets" name="The asset shall provide the capability to report the current list of installed assets and their associated properties." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Usage of component ID, capability and revision level.
2. Formal process of configuration management should be deployed to keep control of the
changes in the component inventory baseline
3. The system requires all default passwords and pass phrases to be changed in order to complete the setup, prior to being operational.  This includes SSID passphrases, default accounts, admin accounts, etc.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="partitioning_of_data_based_criticality" name="The asset shall provide the capability to support partitioning of data, applications and services based on criticality to facilitate implementing a zoning model." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>capability to support partitioning of data, applications and services based on criticality to facilitate implementing a zoning model.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_support_mgmt_id_by_user_group_role" name="The asset shall provide the capability to support the management of identifiers by user, group, role or asset interface." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Management of identifiers by group, role or  system interface.
2. Session ID, resource ID, secure cookie management policy.
3. On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.
NOTE: Use the server or framework’s session management controls. The application should only recognize these session identifiers as valid. Session identifier creation must always be done on a trusted system (e.g., The server). Session management controls should use well vetted algorithms that ensure sufficiently random session identifiers. Set the domain and path for cookies containing authenticated session identifiers to an appropriately restricted value for the site. Logout functionality should fully terminate the associated session or connection. Logout functionality should be available from all pages protected by authorization. Establish a session inactivity timeout that is as short as possible, based on balancing risk and business functional requirements. In most cases it should be no more than several hours. Disallow persistent logins and enforce periodic session terminations, even when the session is active. Especially for applications supporting rich network connections or connecting to critical systems. Termination times should support business requirements and the user should receive sufficient notification to mitigate negative impacts. If a session was established before login, close that session and establish a new session after a successful login. Generate a new session identifier on any re-authentication. Do not allow concurrent logins with the same user ID. Supplement standard session management for sensitive server-side operations, like account management, by utilizing per-session strong random tokens or parameters. This method can be used to prevent Cross Site Request Forgery attacks. Supplement standard session management for highly sensitive or critical operations by utilizing per-request, as opposed to per-session, strong random tokens or parameters. Set the "secure" attribute for cookies transmitted over an TLS connection. Set cookies with the HttpOnly attribute, unless you specifically require client-side scripts within your application to read or set a cookie's value
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="verify_intended_ops" name="The asset shall provide the capability to support verification of the intended operation of security functions and report when anomalies are discovered during FAT, SAT and scheduled maintenance. These security functions shall include all those necessary to support the security requirements specified in this standard." issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Security verification functions include:
• Verification of antivirus measures by European Institute for Computer Antivirus Research
(EICAR) testing of the control system file system. Antivirus software should detect this and
appropriate incident handling procedures should be triggered.
• Verification of the identification, authentication and use control measures by attempting
access with an unauthorized account (for some functionality this could be automated).
• Verification of IDSs as a security control by including a rule in the IDS that triggers on
irregular, but known non-malicious traffic. The test could then be performed by introducing
traffic that triggers this rule and the appropriate IDS monitoring and incident handling
procedures.
• Confirmation that audit logging is occurring as required by security policies and
procedures and has not been disabled by an internal or external entity.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="switch_to_and_from_emergency_power_supply" name="The asset shall provide the capability to switch to and from an emergency power supply without affecting the existing security state or a documented degraded mode. " issueId="" platform="" cost="0" risk="68" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>There may be instances where compensating countermeasures such as physical door access
control or control system may be affected by loss of base power supply, in which case the emergency power supply should cover those associated systems.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="unique_id_human_users" name="The asset shall provide the capability to uniquely identify and authenticate all human users." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. passwords, tokens, biometrics, Certificates, geographic location
2. role-based or group-based
3. should be applied to both local and remote access to the control system.
4. Least Privilege 
5. Segregation of Duties
6. Authentication types (factors): (1) something you know (a secret) -like username and password; (2) something you have - such as a token device or smart phone; and (3) something you are - such as biometrics. 
7. On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.
8.  services should run as non-root accounts or use SUID accounts that release privilege after service start.  Non-root accounts used for services should not have a shell enabled, i.e. /dev/null should be shell in passwd file.  In cases where the application must run with elevated privileges, raise privileges as late as possible, and drop them as soon as possible.  For windows based services, it is preferred to run the service as SYSTEM, instead of an administrator account, which would have credentials which may be guessed and used in an attack.
9. Authorization is granting of permissions based on authentication. 
10.All authorization decisions should be made on the server, not the client.  
11. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
12. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
13. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
14. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
15. Server side implementation and presentation layer representations of access control rules must match. 
16. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
17. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
18. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources.
19. Assign identifiers that uniquely identify users/devices
a. E.g., employ a unique username-password combination for the user
b. Reasoning: This will prevent user 1 from spoofing as user 2. This is a concern for users with different levels of access.
20. Uniquely identify and authenticate users and devices
c. Multi-factor authentication
d. Use of authentication protocols that require no password/multifactor authentication: e.g., OAuth, OpenID, SAML
Note: system level forms of identification, such as IP or MAC address are easily spoofable and therefore do not qualify as a valid form of authentication. Establish and utilize standard, tested, authentication services whenever possible. Use a centralized implementation for all authentication controls, including libraries that call external authentication services. Segregate authentication logic from the resource being requested and use redirection to and from the centralized authentication control.  All authentication controls should fail securely. Enforce password complexity requirements established by policy or regulation. Authentication credentials should be sufficient to withstand attacks that are typical of the threats in the deployed environment. (e.g., requiring the use of alphabetic as well as numeric and/or special characters). Enforce password length requirements established by policy or regulation. Eight characters is commonly used, but 16 is better or consider the use of multi-word pass phrases. Password entry should be obscured on the user's screen. (e.g., on web forms use the input type "password")</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="validate_integrity_of_backup_info" name="The asset shall provide the capability to verify the reliability of backup mechanisms" issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>provide the capability to verify the reliability of backup mechanisms</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="id_auth_all_users_engaged_in_wireless_comms" name="The controls system shall provide the capability to identify and authenticate all users (humans, software processes or devices) engaged in wireless communication." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Identification of Wireless technologies include, but are not limited to, microwave, satellite, packet radio, Institute of Electrical and Electronics Engineers (IEEE) 802.11x, IEEE 802.15.4 (ZigBee,IEC 62591 – WirelessHART®, ISA-100.11a), IEEE 802.15.1 (Bluetooth), wireless LAN mobile routers, mobile phones with tethering and various infrared technologies.
1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="uniquely_id_auth_all_users_engaged_in_wireless_comms" name="The controls system shall provide the capability to uniquely identify and authenticate all users (humans, software processes or devices) engaged in wireless communication." issueId="" platform="" cost="0" risk="78" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>Identification of Wireless technologies include, but are not limited to, microwave, satellite, packet radio, Institute of Electrical and Electronics Engineers (IEEE) 802.11x, IEEE 802.15.4 (ZigBee,IEC 62591 – WirelessHART®, ISA-100.11a), IEEE 802.15.1 (Bluetooth), wireless LAN mobile routers, mobile phones with tethering and various infrared technologies.
1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_participate_in_sys_level_backup" name="The identity and location of critical files and the ability to conduct backups of user-level and system-level information (including system state information) shall be supported by the asset without affecting the normal plant operations." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. availability of up-to-date backups.
2. verify the reliability of backup mechanisms.
3. automate the backup function based on a configurable frequency.
4. Review of Failed Backups.
5. Centralize Backup, backup media.
6. Encrypted backup storage</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="obscure_auth_feedback" name="When an asset provides an authentication capability, the asset shall provide the capability to obscure feedback of authenticator information during the authentication process." issueId="" platform="" cost="0" risk="64" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. obscure feedback of authentication information during the authentication process by displaying asterisks or other random characters when a human user types in a password obscures feedback of authentication information.
2. entry of wired equivalent privacy (WEP) keys, secure socket shell (SSH) token entry and
RSA one-time passwords.
3. not provide any hint as to the reason for the authentication failure, such as “unknown user name”.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.12" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="if_pki_can_use_best_practices" name="Where PKI is utilized, the asset shall provide the capability to operate a PKI according to commonly accepted best practices or obtain public key certificates from an existing PKI." issueId="" platform="" cost="0" risk="73" state="Recommended" owner="cnmarrow" library="iec62443" source="RULES" edited="false">
          <desc>1. Obtain public key certificates from an existing PKI.
2. organization’s certificate policy
3. agency should issue public key certificates under an appropriate certificate policy or obtains public key certificates under an appropriate certificate policy from an approved service provider.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="common-sl2-cr1-1" name="SL2 - Common - CR1.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-1-auth_access_token_exploit" name="An adversary exploits a weakness in authentication to create an access token to associate a process/thread" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-287">
                  <countermeasures>
                    <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                    <countermeasure ref="unique_id_human_users" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                <countermeasure ref="unique_id_human_users" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-1-unauth_human_sys_access" name="Unauthorized human access to the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                    <countermeasure ref="unique_id_human_users" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                <countermeasure ref="unique_id_human_users" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-1-unid-sys-user" name="Unidentified user of the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="50" availability="25" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-286">
                  <countermeasures>
                    <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                    <countermeasure ref="unique_id_human_users" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                <countermeasure ref="unique_id_human_users" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-10" name="SL2 - Common - CR1.10" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-10-adv_auth_feedback" name="An adversary receives authenticator feedback which helps him in user enumeration. E.g. invalid username. Invalid password." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-209">
                  <countermeasures>
                    <countermeasure ref="obscure_auth_feedback" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="obscure_auth_feedback" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-11" name="SL2 - Common - CR1.11" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-11-adv_bruteforce_auth_creds" name="And adversary can bruteforce authentication credentials" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-522">
                  <countermeasures>
                    <countermeasure ref="limit_invalid_attempts" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="limit_invalid_attempts" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-12" name="SL2 - Common - CR1.12" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-12-adv_no_motd" name="Adversaries who compromised the asset can dispute there was no message stating access was only for authorized personnel" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="show_sys_use_notification" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="show_sys_use_notification" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-13" name="SL2 - Common - CR1.13" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-13-adv_access_untrusted_netw" name="An adversary accesses the asset via an untrusted network" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="75" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="deny_access_via_untrusted_netw_unless_approved" mitigation="50"/>
                    <countermeasure ref="monitor_control_access_methods" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="deny_access_via_untrusted_netw_unless_approved" mitigation="50"/>
                <countermeasure ref="monitor_control_access_methods" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-14" name="SL2 - Common - CR1.14" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-14-rogue_employee_abuse_key" name="A rogue employee has unfettered access to a key and might use it for a malicious purpose or pass it onto someone else to the same end." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-322">
                  <countermeasures>
                    <countermeasure ref="protect_critical_long_lived_symmetric_keys" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_critical_long_lived_symmetric_keys" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-2" name="SL2 - Common - CR1.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-2-unid_sys_backdoor" name="Unidentified backdoor plugged in the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-2-unid_softw_arb_code_exec" name="Unidentified software that executes arbitrary code" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-123">
                  <countermeasures>
                    <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-3" name="SL2 - Common - CR1.3" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-3-adv_get_netw_info" name="An adversary that has previously obtained unauthorized access to certain device resources, uses that access to obtain information such as location and network information" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="provide_acc_mgmt_for_auth_users" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_acc_mgmt_for_auth_users" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-4" name="SL2 - Common - CR1.4" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-4-adv_guess_trusted_id" name="An adversary guesses, obtains, or &quot;rides&quot; a trusted identifier (e.g. session ID, resource ID, cookie, etc.) to perform authorized actions under the guise of an authenticated user or service." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-384">
                  <countermeasures>
                    <countermeasure ref="provide_support_mgmt_id_by_user_group_role" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_support_mgmt_id_by_user_group_role" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-5" name="SL2 - Common - CR1.5" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-5-adv_guess_default_pw" name="An adversary guesses the default password and user of an authenticator (e.g. admin:admin)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-521">
                  <countermeasures>
                    <countermeasure ref="provide_auth_init" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_auth_init" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-5-adv_retrieve_unencrypted_pw" name="An adversary is able to retrieve unencrypted passwords after a DBMS/DB -server breach" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-261">
                  <countermeasures>
                    <countermeasure ref="provide_auth_init" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_auth_init" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-6" name="SL2 - Common - CR1.6" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-6-adv_rogue_dev_mitm" name="An adversary can plant a rogue device to perform man-in-the-middle attacks" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
                    <countermeasure ref="uniquely_id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
                <countermeasure ref="uniquely_id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-7" name="SL2 - Common - CR1.7" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-7-adv_bruteforce_pw" name="An adversary is able to brute force the password" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-307">
                  <countermeasures>
                    <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-7-adv_guess_pw" name="An adversary is able to guess the password based on identifying an authenticator" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-521">
                  <countermeasures>
                    <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-8" name="SL2 - Common - CR1.8" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-8-adv_imposter_signed" name=" An attacker generates a message or datablock that causes the recipient to believe that the message or datablock was generated and cryptographically signed by an authoritative or reputable source, misleading a victim or victim operating system into performing malicious actions" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-347">
                  <countermeasures>
                    <countermeasure ref="if_pki_can_use_best_practices" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="if_pki_can_use_best_practices" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-9" name="SL2 - Common - CR1.9" desc="" library="iec62443">
          <threats>
            <threat ref="cr1-9-adv_gen_certificate" name="An adversary exploits a weakness resulting from using a hashing algorithm with weak collision resistance to generate a certificate signing request (CSR) that contains collision blocks in the &quot;to be signed&quot; part" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-916">
                  <countermeasures>
                    <countermeasure ref="protect_relevant_priv_keys" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_relevant_priv_keys" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-1" name="SL2 - Common - CR2.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-1-adv_connect_with_compromised_acc_make_changes" name="An adversary is able to connect to the asset with a compromised account and is able to make changes to all content available on the asset. (no roles)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_auth_all_users_based_on_resp" mitigation="34"/>
                    <countermeasure ref="enforce_auth_based_on_role_leas_priv" mitigation="33"/>
                    <countermeasure ref="role_to_define_and_modify_perm_mapping" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_auth_all_users_based_on_resp" mitigation="34"/>
                <countermeasure ref="enforce_auth_based_on_role_leas_priv" mitigation="33"/>
                <countermeasure ref="role_to_define_and_modify_perm_mapping" mitigation="33"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-10" name="SL2 - Common - CR2.10" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-10-a_system_user_admin_is_not_notified_when_there_is_an_error_logging_the_system" name="A system user admin is not notified when there is an error logging the asset. Adversaries can use this by making the logging of the asset prone to errors by introducing a bug in the process. Now adversaries can compromise the system without it being logged." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="75" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="alert_personnel_prevent_svc_loss" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="alert_personnel_prevent_svc_loss" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-11" name="SL2 - Common - CR2.11" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-11-an_adversary_compromises_a_system_without_knowing_when_he_compromised_it" name="An adversary compromises a system without knowing when he compromised it." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                    <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-12" name="SL2 - Common - CR2.12" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-12-an_adversary_compromised_the_system_not_knowing_from_where_he_compromised_the_system" name="An adversary compromised the asset, not knowing from where he compromised the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="provide_human_user_interface_determine_user_took_action" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_human_user_interface_determine_user_took_action" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-2" name="SL2 - Common - CR2.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-2-adv_wifi_access" name="An adversary is able to get access to the asset via wireless protocols without authorization" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-3" name="SL2 - Common - CR2.3" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-3-adv_portable_dev_access" name="An adversary can access the asset using a portable device" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_config_usage_restriction" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_config_usage_restriction" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-4" name="SL2 - Common - CR2.4" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-4-an_adversary_can_execute_remote_code" name="An adversary can execute remote code" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-94">
                  <countermeasures>
                    <countermeasure ref="restrict_mobile_code" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="restrict_mobile_code" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-5" name="SL2 - Common - CR2.5" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-5-an_adversary_can_perform_a_dos_attack_by_making_consecutive_authorization_requests" name="An adversary can perform a DoS attack by making consecutive authorization requests" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-307">
                  <countermeasures>
                    <countermeasure ref="prevent_further_access_init_seslock" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="prevent_further_access_init_seslock" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-6" name="SL2 - Common - CR2.6" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-6-an_adversary_could_have_maintained_a_stored_session" name="An adversary could have maintained a stored session. By doing so he keeps access to the asset with the role identified with that corresponding session." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-384">
                  <countermeasures>
                    <countermeasure ref="terminate_remote_session_auto_or_manual" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="terminate_remote_session_auto_or_manual" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-8" name="SL2 - Common - CR2.8" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-8-an_aversary_could_have_compromised_the_sytem_without_you_knowing" name="An adversary could have compromised the system without you knowing what part in the asset was compromised or how he compromised the asset " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-9" name="SL2 - Common - CR2.9" desc="" library="iec62443">
          <threats>
            <threat ref="cr2-9-logging_of_the_system_will_fail_when_allocated_storage_capacity_is_satisfied" name="Logging of the asset will fail when allocated storage capacity is satisfied. Attackers can take advantage of this by creating space-eater malware." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-117">
                  <countermeasures>
                    <countermeasure ref="allocate_sufficient_audit_record_storage" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="allocate_sufficient_audit_record_storage" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-1" name="SL2 - Common - CR3.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-1-adv_intercept_netw_traffic" name="An adversary can intercept network traffic" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="25" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-5">
                  <countermeasures>
                    <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                    <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-2" name="SL2 - Common - CR3.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-2-adv_phishing_mail" name="An adversary sends a phishing mail with a trojan as email attachment" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-507">
                  <countermeasures>
                    <countermeasure ref="employ_maware_protection" mitigation="50"/>
                    <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="employ_maware_protection" mitigation="50"/>
                <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-3" name="SL2 - Common - CR3.3" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-3-adv_plant_backdoor" name="An adversary could have planted a backdoor on the asset without the user ever knowing (no anti-virus)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-147">
                  <countermeasures>
                    <countermeasure ref="verify_intended_ops" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="verify_intended_ops" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-4" name="SL2 - Common - CR3.4" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-4-adv_tamper_software" name="An adversary is able to tamper with software running on a system. On the asset no integrity check is in place." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-354">
                  <countermeasures>
                    <countermeasure ref="integrity_check_software" mitigation="50"/>
                    <countermeasure ref="support_auth_check_on_software_config" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="integrity_check_software" mitigation="50"/>
                <countermeasure ref="support_auth_check_on_software_config" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-5" name="SL2 - Common - CR3.5" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-5-adv_xss" name="An adversary can perform cross site scripting when input is not validated" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-79">
                  <countermeasures>
                    <countermeasure ref="validate_syntax_length_content_of_any_input" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="validate_syntax_length_content_of_any_input" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-6" name="SL2 - Common - CR3.6" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-6-adv_fuzz_sensor" name="An adversary can fuzz a sensor connected to a PLC which will cause the controller to generate wrong output values which can cause big system failures (DoS)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="75" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-20">
                  <countermeasures>
                    <countermeasure ref="phys_logical_connect_to_automation_process" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="phys_logical_connect_to_automation_process" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-7" name="SL2 - Common - CR3.7" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-7-adv_disclose_info_via_error_msg" name="An adversary can use error messages that contain too much information, such as stack traces, to discover vulnerabilities in the running service." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-209">
                  <countermeasures>
                    <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-8" name="SL2 - Common - CR3.8" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-8-adv_mitm_random_sessionid" name="An adversary can perform a man in the middle attack when generating a session with a random session-ID." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="protect_integrity_of_sessions" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_integrity_of_sessions" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-9" name="SL2 - Common - CR3.9" desc="" library="iec62443">
          <threats>
            <threat ref="cr3-9-adv_delete_audit_records_after_breach" name="An adversary is able to delete audit records after a system breach which can make investigations very difficult  " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-732">
                  <countermeasures>
                    <countermeasure ref="protect_audit_info_logs_tools" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_audit_info_logs_tools" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr4-1" name="SL2 - Common - CR4.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr4-1-adv_intercept_unecrypted_file_in_transit" name="An adversary is able to intercept an unencrypted file in transit" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="protect_conf_of_info_at_rest_remote_access" mitigation="50"/>
                    <countermeasure ref="protect_conf_of_info_traversing_netw" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_conf_of_info_at_rest_remote_access" mitigation="50"/>
                <countermeasure ref="protect_conf_of_info_traversing_netw" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr4-2" name="SL2 - Common - CR4.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr4-adv_access_file_unpurged_dev" name="An adversary can access files through a device which was released from active service and which was not purged" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-672">
                  <countermeasures>
                    <countermeasure ref="explicit_read_auth_protect_conf_info" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="explicit_read_auth_protect_conf_info" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr4-3" name="SL2 - Common - CR4.3" desc="" library="iec62443">
          <threats>
            <threat ref="cr4-3-adv_break_alg_weak_encryption" name="When a weak encryption algorithm is used an adversary is capable of breaking the algorithm with standard available tools" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-326">
                  <countermeasures>
                    <countermeasure ref="user_crypto_algs" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="user_crypto_algs" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr5-1" name="SL2 - Common - CR5.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr5-1-network_segmentation_exploit" name="An adversary is able to hop between internal networks since they are not segregated" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="logically_segment_control_system" mitigation="50"/>
                    <countermeasure ref="physically_segment_control_system" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="logically_segment_control_system" mitigation="50"/>
                <countermeasure ref="physically_segment_control_system" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr5-2" name="SL2 - Common - CR5.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr5-2-lateralmovement_exploit" name="An adversary can complete lateral movement within the asset when no protection is set up" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="deny_netw_traffic_allow_netw_traffic_exceptions" mitigation="50"/>
                    <countermeasure ref="monitor_control_comms_zone_boundaries" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="deny_netw_traffic_allow_netw_traffic_exceptions" mitigation="50"/>
                <countermeasure ref="monitor_control_comms_zone_boundaries" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr5-3" name="SL2 - Common - CR5.3" desc="" library="iec62443">
          <threats>
            <threat ref="cr5-3-social_engineering_exploit" name="An adversary may introduce malware into the asset by phishing (email,facebook,...)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-601">
                  <countermeasures>
                    <countermeasure ref="prevent_general_purpose_person2person_msg" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="prevent_general_purpose_person2person_msg" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr5-4" name="SL2 - Common - CR5.4" desc="" library="iec62443">
          <threats>
            <threat ref="cr5-4-adv_dos_nonessential_sys_part" name="An adversary performs a DoS attack on a non-essential part of the asset which causes the core service to break" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-400">
                  <countermeasures>
                    <countermeasure ref="partitioning_of_data_based_criticality" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="partitioning_of_data_based_criticality" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr6-1" name="SL2 - Common - CR6.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr6-1-audit_log_exploit" name="An adversary may compromise the asset and edit the logfiles with non root privileges" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-532">
                  <countermeasures>
                    <countermeasure ref="auth_humans_tools_audit_logs" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="auth_humans_tools_audit_logs" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr6-2" name="SL2 - Common - CR6.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr6-2-continuous_monitoring_exploit" name="An adversary compromises a system  without it being timely notified and detected by for example a IDS" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-693">
                  <countermeasures>
                    <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-1" name="SL2 - Common - CR7.1" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-1-dos_no_protect" name="Assets might lose the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event.&#10;" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-1100">
                  <countermeasures>
                    <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                    <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-2" name="SL2 - Common - CR7.2" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-2-rsrc_exhaustion" name="Assets might lose the capability to maintain essential functions as a result of resource exhaustion." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-400">
                  <countermeasures>
                    <countermeasure ref="limit_rsrc_by_sec" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="limit_rsrc_by_sec" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-3" name="SL2 - Common - CR7.3" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-3-no_usr_sys_info_backup" name="Assets might not regain their state (user- and system-level information) due to storage failure." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="50" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-636">
                  <countermeasures>
                    <countermeasure ref="provide_participate_in_sys_level_backup" mitigation="50"/>
                    <countermeasure ref="validate_integrity_of_backup_info" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_participate_in_sys_level_backup" mitigation="50"/>
                <countermeasure ref="validate_integrity_of_backup_info" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-4" name="SL2 - Common - CR7.4" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-4-no_usr_sys_info_backup" name="Assets might not regain their state (user- and system-level information) due to storage failure." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="50" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-636">
                  <countermeasures>
                    <countermeasure ref="cap_to_be_recovered_to_known_secure_state" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="cap_to_be_recovered_to_known_secure_state" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-5" name="SL2 - Common - CR7.5" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-5-emergency_power" name="An adversary can cause a power outage of a security system which will give an adversary to compromise the asset." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="switch_to_and_from_emergency_power_supply" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="switch_to_and_from_emergency_power_supply" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-6" name="SL2 - Common - CR7.6" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-6-unauth_access_default_creds" name="Unauthorized component access might occur as a result of not being able to change default access credentials" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-798">
                  <countermeasures>
                    <countermeasure ref="config_according_to_recommended_netw_and_security" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="config_according_to_recommended_netw_and_security" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-7" name="SL2 - Common - CR7.7" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-7-unauth_access_unnecessary_func" name="Unauthorized component access might occur as a result of not being able to restrict unnecessary functions, ports, protocols and/or services." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-8" name="SL2 - Common - CR7.8" desc="" library="iec62443">
          <threats>
            <threat ref="cr7-8-rogue_assets" name="Rogue assets might enter the network as a result of not being able to verify component identities." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iec62443" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
  </components>
  <threadFixScans/>
</project>
