<?xml version="1.0" encoding="UTF-8"?>
<project ref="medical-devices-ot-iot-cloud-infrastructure" name="Medical Devices - OT - IoT - Cloud Infrastructure" tags="" modelUpdated="2022-01-18 11:24:40" workflowState="" locked="false">
  <desc/>
  <diagram draft="false">
    <schema></schema>
  </diagram>
  <trustZones>
    <trustZone ref="iec62443-sl1" uuid="741f1950-077d-45f0-8b4b-0b4415380acf" name="iec62443-sl1" desc="" trustRating="1"/>
    <trustZone ref="iec62443-sl2" uuid="4acd4ed7-d176-4d50-9896-b16faf20924c" name="iec62443-sl2" desc="" trustRating="2"/>
    <trustZone ref="trusted-partner" uuid="531315a7-41a2-40ed-ab87-22c3a4c3c7ff" name="Trusted Partner" desc="Vetted and trusted partner" trustRating="80"/>
    <trustZone ref="private-secured" uuid="2ab4effa-40b7-4cd2-ba81-8247d29a6f2d" name="Private Secured" desc="A secured zone within a trusted private zone" trustRating="100"/>
  </trustZones>
  <questions/>
  <assets/>
  <settings>
    <issueTrackers>
      <jira>
        <fields/>
      </jira>
    </issueTrackers>
  </settings>
  <dataflows>
    <dataflow name="Serial Interface - RS485 Port -&gt; Sensors" ref="31918f1e-7809-4907-aa65-22fbab8ce1e3" source="d2253644-dbf2-4ae9-97e6-0fcd3713c378" target="3b0f5a33-e86d-4105-a5f3-6ab225733193">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="SNS - Simple Notification Service -&gt; IoT Analytics" ref="4d714245-d756-41ee-ba49-ba73207949b2" source="59adf111-1637-42fe-bbed-e0c66cbafffc" target="9aafa62e-844a-489a-84aa-e63325748cf4">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Serial Interface - RS485 Port -&gt; Sensors" ref="680c4b9f-5602-4c90-8c28-14c1f9c29570" source="d2253644-dbf2-4ae9-97e6-0fcd3713c378" target="381c61a9-0000-4cfa-8bd6-4f8707a65e2f">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Serial Interface - SPI Bus -&gt; Controller - PLC,ECU,ControlServers" ref="6a1b6793-a82f-4ad0-a180-080bc01aae95" source="8859a3f0-0d5f-455f-b00a-c2229c3d5385" target="9e822149-1757-4020-b315-66440371d95f">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="SNS - Simple Notification Service -&gt; Kinesis Data Streams" ref="77487a7b-820f-4528-9d18-339c13a216ad" source="59adf111-1637-42fe-bbed-e0c66cbafffc" target="885f0d5d-bc59-4a63-be40-8b626140f8d6">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Other data store -&gt; QuickSight" ref="a7254244-32b0-4b0f-bc9d-96f199a06583" source="9ea622a7-a672-4fce-b489-3c86b00b2ee7" target="aed6502c-56ba-4dbf-942d-008c1151dd60">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Patient Sensor - IoMT -&gt; MQTT Client" ref="b17599ea-5b60-437d-9ca3-3f929380867b" source="07017200-5604-494c-98b5-be7ec5de66b5" target="ca4a3744-ee80-4b47-9c45-caee9183a2fe">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Serial Interface - SPI Bus -&gt; Medical Air/Gas Compressor" ref="c271328b-9860-469a-857a-ac79e7862215" source="d472faa0-7648-48d6-ae95-cc42f85a602f" target="016991f0-9d1d-4412-80be-ad4e3e3c8364">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="MQTT Client -&gt; MQTT Broker" ref="c6176d8c-267f-4e95-960e-c5c2633f8ebf" source="ca4a3744-ee80-4b47-9c45-caee9183a2fe" target="d640190e-0666-40a9-a978-918b55966181">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="IoT Core -&gt; SNS - Simple Notification Service" ref="d0fd535c-8a83-4580-ab15-6cfa27f5835e" source="938d6fce-4ffd-4fa0-a8f9-d4f17468b91b" target="59adf111-1637-42fe-bbed-e0c66cbafffc">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Switch L2/L3 -&gt; Gateway,Router" ref="dd368efc-b5f5-40b6-acdb-98b671971b63" source="e4582591-a38c-4813-84b6-54477a6c7359" target="95ade30b-5a44-42d8-a6b9-c744760cdde9">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Serial Interface - SPI Bus -&gt; HMI,GUI,Display" ref="f43b471b-151a-4cf0-a3a5-e5dc5ac2bcce" source="80b994c4-90e3-4b14-869c-eca6fd3e097e" target="fc0620de-795a-49fe-84ed-4ca86ae86bed">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Kinesis Data Streams -&gt; Kinesis Data Analytics" ref="feab7017-c31f-47d2-8b6e-72677c15ba28" source="885f0d5d-bc59-4a63-be40-8b626140f8d6" target="ed6c9c4c-cdee-4224-bd85-8d964a6f5685">
      <assets/>
      <tags/>
    </dataflow>
  </dataflows>
  <customFields>
    <customField ref="TRAININGCUSTOM1" value="protocol"/>
    <customField ref="new-custom-field" value=""/>
  </customFields>
  <components>
    <component uuid="742ad10b-0929-45f1-81f2-3325513907bc" diagramComponentId="1dfaf4d9-cb53-4fb8-adf7-97b8de3feb94" ref="e4582591-a38c-4813-84b6-54477a6c7359" name="Switch L2/L3" desc="" library="" parentComponentRef="" componentDefinitionRef="switch-l2/l3">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="iec62443-sl2"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-300" name="Channel Accessible by Non-Endpoint ('Man-in-the-Middle')" state="0" impact="100" issueId="">
          <desc>The product does not adequately verify the identity of actors at both ends of a communication channel, or does not adequately ensure the integrity of the channel, in a way that allows the channel to be accessed or influenced by an actor that is not an endpoint.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-284" name="Improper Access Control" state="0" impact="100" issueId="">
          <desc>The software does not restrict or incorrectly restricts access to a resource from an unauthorized actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-287" name="Improper Authentication" state="0" impact="100" issueId="">
          <desc>When an actor claims to have a given identity, the software does not prove or insufficiently proves that the claim is correct.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-94" name="Improper Control of Generation of Code ('Code Injection')" state="0" impact="100" issueId="">
          <desc>The software constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behaviour of the intended code segment.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-20" name="Improper Input Validation" state="0" impact="100" issueId="">
          <desc>The product does not validate or incorrectly validates input that can affect the control flow or data flow of a program.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-79" name="Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')" state="0" impact="100" issueId="">
          <desc>The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-147" name="Improper Neutralization of Input Terminators" state="0" impact="100" issueId="">
          <desc>The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as input terminators when they are sent to a downstream component.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-117" name="Improper Output Neutralization for Logs" state="0" impact="100" issueId="">
          <desc>The software does not neutralize or incorrectly neutralizes output that is written to logs.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-307" name="Improper Restriction of Excessive Authentication Attempts" state="0" impact="100" issueId="">
          <desc>The software does not implement sufficient measures to prevent multiple failed authentication attempts within in a short time frame, making it more susceptible to brute force attacks.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-354" name="Improper Validation of Integrity Check Value" state="0" impact="100" issueId="">
          <desc>The software does not validate or incorrectly validates the integrity check values or "checksums" of a message. This may prevent it from detecting if the data has been modified or corrupted in transmission.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-347" name="Improper Verification of Cryptographic Signature" state="0" impact="100" issueId="">
          <desc>The software does not verify, or incorrectly verifies, the cryptographic signature for data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-326" name="Inadequate Encryption Strength" state="0" impact="100" issueId="">
          <desc>The software stores or transmits sensitive data using an encryption scheme that is theoretically sound, but is not strong enough for the level of protection required.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-532" name="Inclusion of Sensitive Information in Log Files" state="0" impact="100" issueId="">
          <desc>Information written to log files can be of a sensitive nature and give valuable guidance to an attacker or expose sensitive user information.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-732" name="Incorrect Permission Assignment for Critical Resource" state="0" impact="100" issueId="">
          <desc>The software specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-286" name="Incorrect User Management" state="0" impact="100" issueId="">
          <desc>The software does not properly manage a user within its environment.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-209" name="Information Exposure Through an Error Message" state="0" impact="100" issueId="">
          <desc>The software generates an error message that includes sensitive information about its environment, users, or associated data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-1100" name="Insufficient Isolation of System-Dependent Functions" state="0" impact="100" issueId="">
          <desc>The product or code does not isolate system-dependent
					functionality into separate stand-alone modules.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="">
          <desc>When a security-critical event occurs, the software either does not record the event or omits important details about the event when logging it.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-522" name="Insufficiently Protected Credentials" state="0" impact="100" issueId="">
          <desc>This weakness occurs when the application transmits or stores authentication credentials and uses an insecure method that is susceptible to unauthorized interception and/or retrieval.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-5" name="J2EE Misconfiguration: Data Transmission Without Encryption" state="0" impact="100" issueId="">
          <desc>Information sent over a network can be compromised while in transit. An attacker may be able to read or modify the contents if the data are sent in plaintext or are weakly encrypted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-322" name="Key Exchange without Entity Authentication" state="0" impact="100" issueId="">
          <desc>The software performs a key exchange with an actor without verifying the identity of that actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-311" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="">
          <desc>The software does not encrypt sensitive or critical information before storage or transmission.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-636" name="Not Failing Securely ('Failing Open')" state="0" impact="100" issueId="">
          <desc>When the product encounters an error condition or failure, its design requires it to fall back to a state that is less secure than other options that are available, such as selecting the weakest encryption algorithm or using the most permissive access control restrictions.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-672" name="Operation on a Resource after Expiration or Release" state="0" impact="100" issueId="">
          <desc>The software uses, accesses, or otherwise operates on a resource after that resource has been expired, released, or revoked.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-693" name="Protection Mechanism Failure" state="0" impact="100" issueId="">
          <desc>The product does not use or incorrectly uses a protection mechanism that provides sufficient defence against directed attacks against the product.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-384" name="Session Fixation" state="0" impact="100" issueId="">
          <desc>Authenticating a user, or otherwise establishing a new user session, without invalidating any existing session identifier gives an attacker the opportunity to steal authenticated sessions.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-507" name="Trojan Horse" state="0" impact="100" issueId="">
          <desc>The software appears to contain benign or useful functionality, but it also contains code that is hidden from normal operation that violates the intended security policy of the user or the system administrator.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-400" name="Uncontrolled Resource Consumption" state="0" impact="100" issueId="">
          <desc>The software does not properly control the allocation and maintenance of a limited resource thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-798" name="Use of Hard-coded Credentials" state="0" impact="100" issueId="">
          <desc>The software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-916" name="Use of Password Hash With Insufficient Computational Effort" state="0" impact="100" issueId="">
          <desc>The software generates a hash for a password, but it uses a scheme that does not provide a sufficient level of computational effort that would make password cracking attacks infeasible or expensive.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-261" name="Weak Cryptography for Passwords" state="0" impact="100" issueId="">
          <desc>Obscuring a password with a trivial encoding does not protect the password.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-521" name="Weak Password Requirements" state="0" impact="100" issueId="">
          <desc>The product does not require that users should have strong passwords, which makes it easier for attackers to compromise user accounts.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-123" name="Write-what-where Condition" state="0" impact="100" issueId="">
          <desc>Any condition where the attacker has the ability to write an arbitrary value to an arbitrary location, often as the result of a buffer overflow.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="protect_audit_info_logs_tools" name="Assets shall protect audit information, audit logs, and audit tools (if present) from unauthorized access, modification and deletion." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. the storage of audit information to hardware-enforced write-once media.
2. Access Management Process</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.11" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_auth_all_users_based_on_resp" name="Assets shall provide an authorization enforcement mechanism for all identified and authenticated users based on their assigned responsibilities." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. On all interfaces, the control system shall provide the capability to enforce authorizations assigned to all users (humans, software processes and devices) for controlling use of the control system to support segregation of duties and least privilege.
2. Authorization is granting of permissions based on authentication. 
3.All authorization decisions should be made on the server, not the client.  
4. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
5. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
6. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
7. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
8. Server side implementation and presentation layer representations of access control rules must match. 
9. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
10. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
11. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="auth_humans_tools_audit_logs" name="Assets shall provide the capability for authorized humans and/or tools to access audit logs on a read-only basis." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Access Control - Authorize members
2. Least Privilege &amp; Need to Know Basis
3. Review of access </desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="config_according_to_recommended_netw_and_security" name="Assets shall provide the capability to be configured according to recommended network and security configurations as described in guidelines provided by the asset supplier. The asset shall provide an interface to the currently deployed network and security configuration settings." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Devices with network connectivity are capable of being updated from the network.
2. provide the capability to generate a report listing the currently deployed security settings in a machine-readable format.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="continuous_monitor_accepted_sec" name="Assets shall provide the capability to be continuously monitored using commonly accepted security industry practices and recommendations to detect, characterize and report security breaches in a timely manner." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Control system monitoring capability can be achieved through a variety of tools and
techniques (for example, IDS, IPS, malicious code protection mechanisms and network monitoring mechanisms).
2. Monitoring devices should be strategically deployed within the control system (for example, at
selected perimeter locations and near server farms supporting critical applications) to collect
essential information. Monitoring mechanisms may also be deployed at ad hoc locations
within the control system to track specific transactions
3. SIEM Implementation</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="cap_to_be_recovered_to_known_secure_state" name="Assets shall provide the capability to be recovered and reconstituted to a known secure state after a disruption or failure." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Control system recovery and reconstitution to a known secure state means that all system
parameters (either default or configurable) are set to secure values, security-critical patches
are reinstalled, security-related configuration settings are reestablished, system documentation and operating procedures are available, application and system software is reinstalled and configured with secure settings, information from the most recent, known secure backups is loaded and the system is fully tested and functional.
1. Roll back procedure.
2. Secure storage of previous version</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_for_audit_records" name="Assets shall provide the capability to create timestamps (including date and time) for use in audit records." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Timestamps (including date and time) of audit records should be generated using internal
system clocks.
1. provide timestamps for use in audit record generation.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" name="Assets shall provide the capability to create timestamps that are synchronized with a system wide time source." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>to synchronize internal system clocks at a configurable frequency.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="explicit_read_auth_protect_conf_info" name="Assets shall provide the capability to erase all information, for which explicit read authorization is supported, from assets to be released from active service and/or decommissioned." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Removal of a control system component from active service should not provide the
opportunity for unintentional release of information for which explicit read authorization is
supported.
1. Information produced by the actions of a user or role (or the actions of a software process
acting on behalf of a user or role) should not be disclosed to a different user or role in an
uncontrolled fashion.
2. Purging of all information from volatile memory, active service or decommissioned system.
3. Ensure purging successfully occurs
NOTE Volatile memory resources are those that typically do not retain information after being released to memory management. However, there are attacks against random access memory (RAM) that have the potential to extract key material or other confidential data before it is actually over-written. Therefore, it is a commonly accepted practice to purge all unique data and connections to unique data from volatile shared memory when that memory is released back to the control system for use by a different user, such that this data is not visible or accessible to the new user.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="limit_rsrc_by_sec" name="Assets shall provide the capability to limit the use of resources by security functions to protect against resource exhaustion." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Resource management (for example, network segmentation or priority schemes) prevents a
lower-priority software process from delaying or interfering with the control system servicing
any higher-priority software process.
1. initiating network scans, patching and/or antivirus checks on an operating system.
2. Traffic rate limiting schemes should be considered as a mitigation technique.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="maintain_essential_functions" name="Assets shall provide the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>provide the capability to manage communication loads (such as
using rate limiting) to mitigate the effects of information flooding types of DoS events.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="support_auth_check_on_software_config" name="Assets shall provide the capability to perform or support authenticity checks on software, configuration and other information as well as the recording and reporting of the results of these checks or be integrated into a system that can perform or support authenticity checks." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Integrity verification methods are employed to detect, record, report and protect against software and information tampering.
1. cryptographic hashes
2. Notification of unauthorize changes
Integrity verification methods are employed to detect, record, report and protect against software and information tampering that may occur if other protection mechanisms (such as authorization enforcement) have been circumvented. The control system should employ formal or recommended integrity mechanisms (such as cryptographic hashes).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="integrity_check_software" name="Assets shall provide the capability to perform or support integrity checks on software, configuration and other information as well as the recording and reporting of the results of these checks or be integrated into a system that can perform or support integrity checks." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Integrity verification methods are employed to detect, record, report and protect against software and information tampering.
1. cryptographic hashes
2. Notification of unauthorize changes
Integrity verification methods are employed to detect, record, report and protect against software and information tampering that may occur if other protection mechanisms (such as authorization enforcement) have been circumvented. The control system should employ formal or recommended integrity mechanisms (such as cryptographic hashes).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_critical_long_lived_symmetric_keys" name="Assets shall provide the capability to protect critical, long lived symmetric keys via hardware mechanisms." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. establish the mutual trust using the symmetric key; store securely the shared secret (the authentication is valid as long as the shared secret remains secret); restrict access to the shared secret; ensure that the algorithms and keys used for the symmetric key authentication</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.16" supportedStandardRef="iec-62443-4-2:2019"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" name="Assets shall provide the capability to specifically restrict the use of unnecessary functions, ports, protocols and/or services." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc> 1. capability to specifically prohibit and/or restrict the use of unnecessary functions, ports, protocols and/or services.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="validate_syntax_length_content_of_any_input" name="Assets shall validate the syntax, length and content of any input data that is used as an industrial process control input or input via external interfaces that directly impacts the action of the asset." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. input data validation include out-of-range values for a defined field type, invalid characters in data fields, missing or incomplete data and buffer overflow.
2. SAST &amp; DAST
3. Data from external sources are sanitized based on acceptable formats and lengths.  It is preferred to use white listing, over black listing.
4. Data is validated when crossing API boundaries</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="phys_logical_connect_to_automation_process" name="Assets that physically or logically connect to an automation process shall provide the capability to set outputs to a predetermined state if normal operation as defined by the asset supplier cannot be maintained." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. The appropriate predetermined state of control system outputs is application dependent and could be one of the following user configurable options:
• Unpowered – the outputs fail to the unpowered state
• Hold – the outputs fail to the last-known good value
• Fixed – the outputs fail to a fixed value that is determined by the asset owner or an
application
2. All user supplied data is encoded prior to output. (i.e.. Html encoding, special character encoding).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_pw_policy_enforce" name="For assets utilizing password-based authentication, the asset shall provide the capability to enforce configurable password strength based on minimum length and variety of character types. " issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.
Note: A service should employ one or more tactics to prevent or at least slow down a brute force attack, including: blacklisting an IP after 5 unsuccessful attempts, slowing down attempts with increasing timeout delays introduced after 5 unsuccessful attempts, locking out non-admin accounts after 3 unsuccessful attempts.  The account must be disabled for a period of time sufficient to discourage brute force guessing of credentials, but not so long as to allow for a denial-of-service attack to be performed.  Allow non-admin users to reset their own passwords to prevent administrative burden.  If users are allowed to reset their password, best practice is to email a new password to the users email account and require a reset upon next logon.  It is not best practice to simply reset and display the new password on the authentication screen as an attacker may trigger that reset and change the password without notice to the user.  If using a screen reveal of password, should be accompanied by both a known secret of user, such as mothers maiden name and also an email to notify the user of such a change.  Temporary passwords and links should have a short expiration time.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_id_and_auth_for_human_users" name="Identify and authenticate all human users" issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. passwords, tokens, biometrics, Certificates, geographic location
2. role-based or group-based
3. should be applied to both local and remote access to the control system.
4. Least Privilege 
5. Segregation of Duties
6. Authentication types (factors): (1) something you know (a secret) -like username and password; (2) something you have - such as a token device or smart phone; and (3) something you are - such as biometrics. 
7. On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.
8.  services should run as non-root accounts or use SUID accounts that release privilege after service start.  Non-root accounts used for services should not have a shell enabled, i.e. /dev/null should be shell in passwd file.  In cases where the application must run with elevated privileges, raise privileges as late as possible, and drop them as soon as possible.  For windows based services, it is preferred to run the service as SYSTEM, instead of an administrator account, which would have credentials which may be guessed and used in an attack.
9. Authorization is granting of permissions based on authentication. 
10.All authorization decisions should be made on the server, not the client.  
11. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
12. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
13. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
14. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
15. Server side implementation and presentation layer representations of access control rules must match. 
16. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
17. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
18. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources
Note: system level forms of identification, such as IP or MAC address are easily spoofable and therefore do not qualify as a valid form of authentication. Establish and utilize standard, tested, authentication services whenever possible. Use a centralized implementation for all authentication controls, including libraries that call external authentication services. Segregate authentication logic from the resource being requested and use redirection to and from the centralized authentication control.  All authentication controls should fail securely. Enforce password complexity requirements established by policy or regulation. Authentication credentials should be sufficient to withstand attacks that are typical of the threats in the deployed environment. (e.g., requiring the use of alphabetic as well as numeric and/or special characters). Enforce password length requirements established by policy or regulation. Eight characters is commonly used, but 16 is better or consider the use of multi-word pass phrases. Password entry should be obscured on the user's screen. (e.g., on web forms use the input type "password")</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_human_user_interface_determine_user_took_action" name="If an asset provides a human user interface, the asset shall provide the capability to determine whether a given human user took a particular action. Control elements that are not able to support such capability shall be listed in component documents." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Examples of particular actions taken by a user include performing operator actions, changing
control system configurations, creating information, sending a message, approving
information (such as indicating concurrence) and receiving a message.
1. digital signatures, digital message receipts and timestamps</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.14" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="terminate_remote_session_auto_or_manual" name="If an asset supports remote sessions, the asset shall provide the capability to terminate a remote session either automatically after a configurable time period of inactivity, manually by a local authority, or manually by the user (human, software process or device) who initiated the session." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Terminate a remote session either automatically after a configurable time period of inactivity, manually by a local authority, or manually by the user (human, software process or device) who initiated the session.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" name="If an asset supports usage through wireless interfaces it shall provide the capability to integrate into the asset that supports usage authorization, monitoring and restrictions according to commonly accepted industry practices." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>provide the capability to authorize, monitor and enforce usage restrictions for wireless connectivity to the control system.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="user_crypto_algs" name="If cryptography is required, the asset shall use cryptographic algorithms, key sizes and mechanisms for key establishment and management according to commonly accepted security industry practices and recommendations." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. document the practices and procedures relating to cryptographic key establishment and management.
2. utilize established and tested encryption and hash algorithms, such as the advanced
encryption standard (AES) and the secure hash algorithm (SHA) series, and key sizes based
on an assigned standard.
3. Key generation needs to be performed using an effective random number generator.
4. The security policies and procedures for key management need to address
periodic key changes, key destruction, key distribution and encryption key backup in
accordance with defined standards</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_acc_mgmt_for_auth_users" name="Provide support of management of all accounts by authorized users" issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. individual, role-based, device-based, Service &amp;  default account management Policy.
2. Review of accounts.
3. Approvals for creating, disabling, removing or modifying accounts.
4.  On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="allocate_sufficient_audit_record_storage" name="The asset shall allocate sufficient audit record storage capacity according to commonly recognized recommendations for log management and system configuration. The asset shall provide auditing mechanisms to reduce the likelihood of such capacity being exceeded." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>The control system shall allocate sufficient audit record storage capacity according to
commonly recognized recommendations for log management and system configuration. The
control system shall provide auditing mechanisms to reduce the likelihood of such capacity
being exceeded</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.11" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="id_and_handle_error_conditions" name="The asset shall identify and handle error conditions in a manner such that effective remediation can occur. This shall be done in a manner which does not provide information that could be exploited by adversaries to attack the IACS unless revealing this information is necessary for the timely troubleshooting of problems." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Error messages generated by the control system should provide timely and useful information without revealing potentially harmful information.
2. Vulnerability Assessment &amp; Penetration Testing</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_auth_based_on_role_leas_priv" name="The asset shall provide authorization enforcement for all users based on their assigned responsibilities and least privilege" issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. enforce authorizations assigned to all human users.
2. Use control policies (for example, identity-based policies, role-based policies and rule-based policies) and associated read/write access enforcement mechanisms (for example, access control lists, access control matrices and cryptography).
2. check which roles are assigned to a verified user or asset and which privileges are assigned to these roles – if the requested operation is covered by the permissions, it is executed, otherwise rejected. Only qualified and authorized individuals should obtain the use of control system components for purposes of initiating changes, including upgrades and modifications. Authorization is granting of permissions based on authentication. 
3.All authorization decisions should be made on the server, not the client.  
4. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
5. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
6. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
7. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
8. Server side implementation and presentation layer representations of access control rules must match. 
9. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
10. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
11. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="role_to_define_and_modify_perm_mapping" name="The asset shall provide directly or through a compensating security mechanism, for an authorized role to define and modify the mapping of permissions to roles for all human users" issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>The control system shall provide the capability for an authorized user or role to define and
modify the mapping of permissions to roles for all human users.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="alert_personnel_prevent_svc_loss" name="The asset shall provide the capability to alert personnel and prevent the loss of essential services and functions in the event of an audit processing failure. The control system shall provide the capability to support appropriate actions in response to an audit processing failure according to commonly accepted industry practices and recommendations. " issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Audit generation typically occurs at the source of the event. Audit processing involves
transmission, possible augmentation (such as the addition of a timestamp) and persistent
storage of the audit records. Audit processing failures include, for example, software or
hardware errors, failures in the audit capturing mechanisms and audit storage capacity being
reached or exceeded
1.capability to alert personnel and prevent the loss of essential services and functions in the event of an audit processing failure.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.12" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_config_usage_restriction" name="The asset shall provide the capability to automatically enforce configurable usage restrictions" issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Authenticate &amp; Authorize devices before allowing connection.
2. Digital+E46 Signatures</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="deny_access_via_untrusted_netw_unless_approved" name="The asset shall provide the capability to deny access requests via untrusted networks unless approved by an assigned role." issueId="" platform="" cost="0" risk="83" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.15" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="deny_netw_traffic_allow_netw_traffic_exceptions" name="The asset shall provide the capability to deny network traffic by default and allow network traffic by exception (also termed deny all, permit by exception)." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>deny network traffic by default and allow network traffic by exception (also termed deny all, permit by exception).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="show_sys_use_notification" name="The asset shall provide the capability to display a system use notification message before authenticating. The system use notification message shall be configurable by authorized personnel." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. display a system use notification message or warning banners before authenticating &amp; configurable by authorized personnel.
2. Privacy and security policies and procedures need to be consistent with applicable laws,
directives, policies, regulations, standards and guidance.
3. Examples of elements for inclusion in the system use notification message are:
a) that the individual is accessing a specific control system;
b) that system usage may be monitored, recorded and subject to audit;
c) that unauthorized use of the system is prohibited and subject to criminal and/or civil
penalties; and
d) that use of the system indicates consent to monitoring and recording</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.14" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="employ_cypto_mechs_to_recognize_changes" name="The asset shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="employ_maware_protection" name="The asset shall provide the capability to employ malicious code protection mechanisms at all entry and exit points." issueId="" platform="" cost="0" risk="83" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>prevent, detect, mitigate and report instances of detected malicious code (for example, viruses, worms, Trojan horses and spyware) transported by electronic mail, electronic mail attachments, Internet access, removable media (for example, universal serial bus (USB) devices, diskettes or compact disks), PDF documents, web services, network connections and infected laptops or other
common means.
1. Detection Technique  - binary integrity and attributes monitoring, hashing and signature techniques.
2.Mitigation technique - file cleaning, quarantining, file deletion, host communication restriction and IPSs
3. Prevention Technique - application blacklisting and whitelisting techniques, removable media control, sandbox techniques and specific computing platforms mechanisms such as restricted firmware update capabilities, No Execute (NX) bit, data execution prevention (DEP), address space layout randomization (ASLR), stack corruption detection and mandatory access controls.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" name="The asset shall provide the capability to employ protection mechanisms to prevent, detect, report and mitigate the effects of malicious code or unauthorized software. The asset shall provide the capability to update the protection mechanisms." issueId="" platform="" cost="0" risk="83" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>prevent, detect, mitigate and report instances of detected malicious code (for example, viruses, worms, Trojan horses and spyware) transported by electronic mail, electronic mail attachments, Internet access, removable media (for example, universal serial bus (USB) devices, diskettes or compact disks), PDF documents, web services, network connections and infected laptops or other
common means.
1. Detection Technique  - binary integrity and attributes monitoring, hashing and signature techniques.
2.Mitigation technique - file cleaning, quarantining, file deletion, host communication restriction and IPSs
3. Prevention Technique - application blacklisting and whitelisting techniques, removable media control, sandbox techniques and specific computing platforms mechanisms such as restricted firmware update capabilities, No Execute (NX) bit, data execution prevention (DEP), address space layout randomization (ASLR), stack corruption detection and mandatory access controls.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="limit_invalid_attempts" name="The asset shall provide the capability to enforce a limit of a configurable number of consecutive invalid access attempts by any user (human, software process or device) during a configurable time period. The asset shall provide the capability to deny access for a specified period of time or until unlocked by an administrator when this limit has been exceeded." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. limit of a configurable number of consecutive invalid access attempts by any user (human, software process or device).
2. As per Policy.
3. For all invalid authentication attempts, the server should simply respond "invalid attempt, please retry" or similarly vague statement that does not imply partial success.  
Note: A service should employ one or more tactics to prevent or at least slow down a brute force attack, including: blacklisting an IP after 5 unsuccessful attempts, slowing down attempts with increasing timeout delays introduced after 5 unsuccessful attempts, locking out non-admin accounts after 3 unsuccessful attempts.  The account must be disabled for a period of time sufficient to discourage brute force guessing of credentials, but not so long as to allow for a denial-of-service attack to be performed.  Allow non-admin users to reset their own passwords to prevent administrative burden.  If users are allowed to reset their password, best practice is to email a new password to the users email account and require a reset upon next logon.  It is not best practice to simply reset and display the new password on the authentication screen as an attacker may trigger that reset and change the password without notice to the user.  If using a screen reveal of password, should be accompanied by both a known secret of user, such as mothers maiden name and also an email to notify the user of such a change.  Temporary passwords and links should have a short expiration time.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="restrict_mobile_code" name="The asset shall provide the capability to enforce usage restrictions for mobile code technologies based on the potential to cause damage to the asset." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Mobile code technologies include, but are not limited to, Java, JavaScript, ActiveX, portable
document format (PDF), Postscript, Shockwave movies, Flash animations and VBScript.
1. The control system shall provide the capability to enforce usage restrictions for mobile code technologies based on the potential to cause damage to the control system that include:
a) preventing the execution of mobile code;
b) requiring proper authentication and authorization for origin of the code;
c) restricting mobile code transfer to/from the control system; and
d) monitoring the use of mobile code.
2. verify integrity of the mobile code before allowing code execution with HASH/Codesigning technique.
3. both the selection and use of mobile code installed on servers and
mobile code downloaded and executed.
4. prevent the development, acquisition or introduction of unacceptable mobile code within the control system. For example, mobile code exchanges may be disallowed directly with the
control system, but may be allowed in a controlled adjacent environment.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" name="The asset shall provide the capability to generate audit records relevant to security for the following categories: access control, request errors, operating system events, asset events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Generate audit records relevant to security for the following categories: access control, request errors, operating system events, control system events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" name="The asset shall provide the capability to identify and authenticate all software processes and devices. This capability shall enforce such identification and authentication on all interfaces which provide access to the asset to support least privilege in accordance with applicable security policies and procedures." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. identity bound to the physical device
2. passwords, tokens or location (physical or logical)
3. role-based, group-based or entity-based,
4. Combination of 1) something you know (a secret) -like username and password; (2) something you have - such as a token device or smart phone; and (3) something you are - such as biometrics. 
5. Assign identifiers that uniquely identify users/devices
a. E.g., employ a unique username-password combination for the user
b. Reasoning: This will prevent user 1 from spoofing as user 2. This is a concern for users with different levels of access.
6. Uniquely identify and authenticate users and devices
c. Multi-factor authentication
d. Use of authentication protocols that require no password/multifactor authentication: e.g., OAuth, OpenID, SAML</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_auth_init" name="The asset shall provide the capability to: initialize authenticator content; change all default authenticators upon asset installation; change/refresh all authenticators; protect all authenticators from unauthorized disclosure and modification when stored and transmitted." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>&gt; initialize authenticator content;
&gt; change all default authenticators upon control system installation;
&gt; change/refresh all authenticators; and
&gt; protect all authenticators from unauthorized disclosure and modification when stored and
transmitted
2.  tokens, symmetric keys, private keys (part of a public/private key pair), biometrics,
passwords, physical keys and key card
3. Human users should take reasonable measures to safeguard authenticators, including maintaining possession of their individual authenticators, not loaning or sharing authenticators with others and reporting lost or compromised authenticators immediately.
4. cryptographic protections such as encryption or hashing or by handshake protocols which do not require transmission of the password. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.
5. Lockout or loss of control due to security measures is not acceptable. If the control system is required to have a high level of availability, measures should be taken to maintain this high
level of availability (such as compensating physical countermeasures, duplicate keys and
supervisory override).
6. Complex strength of the authentication mechanism</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="logically_segment_control_system" name="The asset shall provide the capability to logically segment asset networks from non-asset networks and to logically segment critical asset networks from other asset networks." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Access from the control system to the World Wide Web should be clearly justified based on
control system operational requirements.
2. Logical Segmentation.
3. Physical Segmentation.
4. capability to provide network services to control system networks, critical or otherwise, without a connection to non-control system networks.
5. capability to logically and physically isolate critical control system networks from non-critical control system networks.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="mitigate_info_effects_flooding_types" name="The asset shall provide the capability to manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. boundary protection
2. restricting the information flow to be unidirectional outbound
3. manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events.
4. restrict the ability of all users (humans, software processes and devices) to cause DoS events which affect other control systems or networks.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="monitor_control_access_methods" name="The asset shall provide the capability to monitor and control all methods of access to the asset via untrusted networks." issueId="" platform="" cost="0" risk="83" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Examples of access to the control system via untrusted networks typically include remote
access methods (such as dial-up, broadband and wireless) as well as connections from a
company’s office (non-control system) network.
1. restrict access achieved through dial-up connections (for example, limiting dial-up access based upon the source of the request).
2. protect against unauthorized connections or subversion of authorized connections (for example, using virtual private network technology).
3. Access via untrusted networks to geographically remote control system component locations (for example, control centers and field locations) should only be enabled when necessary and authenticated.
4. Multifactor authentication for remote user access to the control system.
5. Use of VPNs &amp; Firewalls.
6. Monitoring &amp; Logging of Access for control systems.
7. deny access requests via untrusted networks unless approved by an assigned role.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.15" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="monitor_control_comms_zone_boundaries" name="The asset shall provide the capability to monitor and control communications at zone boundaries to enforce the compartmentalization defined in the risk-based zones and conduits model." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Any connections to external networks or other control systems should occur through managed
interfaces consisting of appropriate boundary protection devices (for example, proxies,
gateways, routers, firewalls, unidirectional gateways, guards and encrypted tunnels) arranged
in an effective architecture (for example, firewalls protecting application gateways residing in
a DMZ).
1. capability to deny network traffic by default and allow network traffic by exception (also termed deny all, permit by exception).
2. capability to prevent any communication through the control system boundary (also termed island mode).
3. The control system shall provide the capability to prevent any communication through the
control system boundary when there is an operational failure of the boundary protection
mechanisms (also termed fail close). This ‘fail close’ functionality shall be designed such that
it does not interfere with the operation of a SIS or other safety-related functions.
4. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="physically_segment_control_system" name="The asset shall provide the capability to physically segment asset networks from non-asset networks and to physically segment critical asset networks from non-critical asset networks." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="prevent_further_access_init_seslock" name="The asset shall provide the capability to prevent further access by initiating a session lock after a configurable time period of inactivity or by manual initiation. The session lock shall remain in effect until the human user who owns the session or another authorized human user re-establishes access using appropriate identification and authentication procedures." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. activate session lock mechanisms automatically after a configurable time period.
2. In some cases, session lock for control system operator workstations or nodes is not advised (for example, sessions which are required for immediate operator responses in emergency situations).
3. In situations where the control system cannot support session lock, the responsible entity should employ appropriate compensating countermeasures (for example, providing increased physical security, personnel security and auditing measures).
Note: Use the server or framework’s session management controls. The application should only recognize these session identifiers as valid. Session identifier creation must always be done on a trusted system (e.g., The server). Session management controls should use well vetted algorithms that ensure sufficiently random session identifiers. Set the domain and path for cookies containing authenticated session identifiers to an appropriately restricted value for the site. Logout functionality should fully terminate the associated session or connection. Logout functionality should be available from all pages protected by authorization. Establish a session inactivity timeout that is as short as possible, based on balancing risk and business functional requirements. In most cases it should be no more than several hours. Disallow persistent logins and enforce periodic session terminations, even when the session is active. Especially for applications supporting rich network connections or connecting to critical systems. Termination times should support business requirements and the user should receive sufficient notification to mitigate negative impacts. If a session was established before login, close that session and establish a new session after a successful login. Generate a new session identifier on any re-authentication. Do not allow concurrent logins with the same user ID. Supplement standard session management for sensitive server-side operations, like account management, by utilizing per-session strong random tokens or parameters. This method can be used to prevent Cross Site Request Forgery attacks. Supplement standard session management for highly sensitive or critical operations by utilizing per-request, as opposed to per-session, strong random tokens or parameters. Set the "secure" attribute for cookies transmitted over an TLS connection. Set cookies with the HttpOnly attribute, unless you specifically require client-side scripts within your application to read or set a cookie's value</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_conf_of_info_traversing_netw" name="The asset shall provide the capability to protect the confidentiality of information at rest and remote access sessions traversing an untrusted network." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_conf_of_info_at_rest_remote_access" name="The asset shall provide the capability to protect the confidentiality of information for which explicit read authorization is supported, whether at rest or in transit." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. physical means, compartmentalization or encryption.
2. configuring explicit read authorizations in the control system.
3. Digital Certificates.
4. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_integrity_of_sessions" name="The asset shall provide the capability to protect the integrity of sessions. The asset shall reject any usage of invalid session IDs." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Use of session integrity mechanisms can have a significant overhead and therefore their use should be considered in light of requirements for real-time communications.
2. capability to invalidate session IDs upon user logout or other session termination (including browser sessions).
3. generate a unique session ID for each session and treat all unexpected session IDs as invalid.
4. generate unique session IDs with commonly accepted sources of randomness.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_integrity_transmitted_info" name="The asset shall provide the capability to protect the integrity of transmitted information." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_relevant_priv_keys" name="The asset shall provide the capability to protect the relevant private keys via hardware mechanisms according to commonly accepted security industry practices and recommendations." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Follow All below Steps:
l) validate certificates by checking the validity of the signature of a given certificate;
m) validate certificates by constructing a certification path to an accepted CA or in the case of
self-signed certificates by deploying leaf certificates to all hosts which communicate with
the subject to which the certificate is issued;
n) validate certificates by checking a given certificate’s revocation status;
o) establish user (human, software process or device) control of the corresponding private
key; and
p) map the authenticated identity to a user (human, software process or device).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.11" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="report_current_list_of_installed_assets" name="The asset shall provide the capability to report the current list of installed assets and their associated properties." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Usage of component ID, capability and revision level.
2. Formal process of configuration management should be deployed to keep control of the
changes in the component inventory baseline
3. The system requires all default passwords and pass phrases to be changed in order to complete the setup, prior to being operational.  This includes SSID passphrases, default accounts, admin accounts, etc.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_support_mgmt_id_by_user_group_role" name="The asset shall provide the capability to support the management of identifiers by user, group, role or asset interface." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Management of identifiers by group, role or  system interface.
2. Session ID, resource ID, secure cookie management policy.
3. On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.
NOTE: Use the server or framework’s session management controls. The application should only recognize these session identifiers as valid. Session identifier creation must always be done on a trusted system (e.g., The server). Session management controls should use well vetted algorithms that ensure sufficiently random session identifiers. Set the domain and path for cookies containing authenticated session identifiers to an appropriately restricted value for the site. Logout functionality should fully terminate the associated session or connection. Logout functionality should be available from all pages protected by authorization. Establish a session inactivity timeout that is as short as possible, based on balancing risk and business functional requirements. In most cases it should be no more than several hours. Disallow persistent logins and enforce periodic session terminations, even when the session is active. Especially for applications supporting rich network connections or connecting to critical systems. Termination times should support business requirements and the user should receive sufficient notification to mitigate negative impacts. If a session was established before login, close that session and establish a new session after a successful login. Generate a new session identifier on any re-authentication. Do not allow concurrent logins with the same user ID. Supplement standard session management for sensitive server-side operations, like account management, by utilizing per-session strong random tokens or parameters. This method can be used to prevent Cross Site Request Forgery attacks. Supplement standard session management for highly sensitive or critical operations by utilizing per-request, as opposed to per-session, strong random tokens or parameters. Set the "secure" attribute for cookies transmitted over an TLS connection. Set cookies with the HttpOnly attribute, unless you specifically require client-side scripts within your application to read or set a cookie's value
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="verify_intended_ops" name="The asset shall provide the capability to support verification of the intended operation of security functions and report when anomalies are discovered during FAT, SAT and scheduled maintenance. These security functions shall include all those necessary to support the security requirements specified in this standard." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Security verification functions include:
• Verification of antivirus measures by European Institute for Computer Antivirus Research
(EICAR) testing of the control system file system. Antivirus software should detect this and
appropriate incident handling procedures should be triggered.
• Verification of the identification, authentication and use control measures by attempting
access with an unauthorized account (for some functionality this could be automated).
• Verification of IDSs as a security control by including a rule in the IDS that triggers on
irregular, but known non-malicious traffic. The test could then be performed by introducing
traffic that triggers this rule and the appropriate IDS monitoring and incident handling
procedures.
• Confirmation that audit logging is occurring as required by security policies and
procedures and has not been disabled by an internal or external entity.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="switch_to_and_from_emergency_power_supply" name="The asset shall provide the capability to switch to and from an emergency power supply without affecting the existing security state or a documented degraded mode. " issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>There may be instances where compensating countermeasures such as physical door access
control or control system may be affected by loss of base power supply, in which case the emergency power supply should cover those associated systems.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="unique_id_human_users" name="The asset shall provide the capability to uniquely identify and authenticate all human users." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. passwords, tokens, biometrics, Certificates, geographic location
2. role-based or group-based
3. should be applied to both local and remote access to the control system.
4. Least Privilege 
5. Segregation of Duties
6. Authentication types (factors): (1) something you know (a secret) -like username and password; (2) something you have - such as a token device or smart phone; and (3) something you are - such as biometrics. 
7. On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.
8.  services should run as non-root accounts or use SUID accounts that release privilege after service start.  Non-root accounts used for services should not have a shell enabled, i.e. /dev/null should be shell in passwd file.  In cases where the application must run with elevated privileges, raise privileges as late as possible, and drop them as soon as possible.  For windows based services, it is preferred to run the service as SYSTEM, instead of an administrator account, which would have credentials which may be guessed and used in an attack.
9. Authorization is granting of permissions based on authentication. 
10.All authorization decisions should be made on the server, not the client.  
11. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
12. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
13. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
14. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
15. Server side implementation and presentation layer representations of access control rules must match. 
16. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
17. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
18. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources.
19. Assign identifiers that uniquely identify users/devices
a. E.g., employ a unique username-password combination for the user
b. Reasoning: This will prevent user 1 from spoofing as user 2. This is a concern for users with different levels of access.
20. Uniquely identify and authenticate users and devices
c. Multi-factor authentication
d. Use of authentication protocols that require no password/multifactor authentication: e.g., OAuth, OpenID, SAML
Note: system level forms of identification, such as IP or MAC address are easily spoofable and therefore do not qualify as a valid form of authentication. Establish and utilize standard, tested, authentication services whenever possible. Use a centralized implementation for all authentication controls, including libraries that call external authentication services. Segregate authentication logic from the resource being requested and use redirection to and from the centralized authentication control.  All authentication controls should fail securely. Enforce password complexity requirements established by policy or regulation. Authentication credentials should be sufficient to withstand attacks that are typical of the threats in the deployed environment. (e.g., requiring the use of alphabetic as well as numeric and/or special characters). Enforce password length requirements established by policy or regulation. Eight characters is commonly used, but 16 is better or consider the use of multi-word pass phrases. Password entry should be obscured on the user's screen. (e.g., on web forms use the input type "password")</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="validate_integrity_of_backup_info" name="The asset shall provide the capability to verify the reliability of backup mechanisms" issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>provide the capability to verify the reliability of backup mechanisms</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_participate_in_sys_level_backup" name="The identity and location of critical files and the ability to conduct backups of user-level and system-level information (including system state information) shall be supported by the asset without affecting the normal plant operations." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. availability of up-to-date backups.
2. verify the reliability of backup mechanisms.
3. automate the backup function based on a configurable frequency.
4. Review of Failed Backups.
5. Centralize Backup, backup media.
6. Encrypted backup storage</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="obscure_auth_feedback" name="When an asset provides an authentication capability, the asset shall provide the capability to obscure feedback of authenticator information during the authentication process." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. obscure feedback of authentication information during the authentication process by displaying asterisks or other random characters when a human user types in a password obscures feedback of authentication information.
2. entry of wired equivalent privacy (WEP) keys, secure socket shell (SSH) token entry and
RSA one-time passwords.
3. not provide any hint as to the reason for the authentication failure, such as “unknown user name”.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.12" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="if_pki_can_use_best_practices" name="Where PKI is utilized, the asset shall provide the capability to operate a PKI according to commonly accepted best practices or obtain public key certificates from an existing PKI." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Obtain public key certificates from an existing PKI.
2. organization’s certificate policy
3. agency should issue public key certificates under an appropriate certificate policy or obtains public key certificates under an appropriate certificate policy from an approved service provider.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="common-sl2-cr1-1" name="SL2 - Common - CR1.1" desc="" library="">
          <threats>
            <threat ref="cr1-1-auth_access_token_exploit" name="An adversary exploits a weakness in authentication to create an access token to associate a process/thread" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-287">
                  <countermeasures>
                    <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                    <countermeasure ref="unique_id_human_users" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                <countermeasure ref="unique_id_human_users" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-1-unauth_human_sys_access" name="Unauthorized human access to the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                    <countermeasure ref="unique_id_human_users" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                <countermeasure ref="unique_id_human_users" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-1-unid-sys-user" name="Unidentified user of the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="50" availability="25" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-286">
                  <countermeasures>
                    <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                    <countermeasure ref="unique_id_human_users" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                <countermeasure ref="unique_id_human_users" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-10" name="SL2 - Common - CR1.10" desc="" library="">
          <threats>
            <threat ref="cr1-10-adv_auth_feedback" name="An adversary receives authenticator feedback which helps him in user enumeration. E.g. invalid username. Invalid password." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-209">
                  <countermeasures>
                    <countermeasure ref="obscure_auth_feedback" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="obscure_auth_feedback" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-11" name="SL2 - Common - CR1.11" desc="" library="">
          <threats>
            <threat ref="cr1-11-adv_bruteforce_auth_creds" name="And adversary can bruteforce authentication credentials" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-522">
                  <countermeasures>
                    <countermeasure ref="limit_invalid_attempts" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="limit_invalid_attempts" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-12" name="SL2 - Common - CR1.12" desc="" library="">
          <threats>
            <threat ref="cr1-12-adv_no_motd" name="Adversaries who compromised the asset can dispute there was no message stating access was only for authorized personnel" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="show_sys_use_notification" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="show_sys_use_notification" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-13" name="SL2 - Common - CR1.13" desc="" library="">
          <threats>
            <threat ref="cr1-13-adv_access_untrusted_netw" name="An adversary accesses the asset via an untrusted network" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="75" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="deny_access_via_untrusted_netw_unless_approved" mitigation="50"/>
                    <countermeasure ref="monitor_control_access_methods" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="deny_access_via_untrusted_netw_unless_approved" mitigation="50"/>
                <countermeasure ref="monitor_control_access_methods" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-14" name="SL2 - Common - CR1.14" desc="" library="">
          <threats>
            <threat ref="cr1-14-rogue_employee_abuse_key" name="A rogue employee has unfettered access to a key and might use it for a malicious purpose or pass it onto someone else to the same end." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-322">
                  <countermeasures>
                    <countermeasure ref="protect_critical_long_lived_symmetric_keys" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_critical_long_lived_symmetric_keys" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-2" name="SL2 - Common - CR1.2" desc="" library="">
          <threats>
            <threat ref="cr1-2-unid_sys_backdoor" name="Unidentified backdoor plugged in the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-2-unid_softw_arb_code_exec" name="Unidentified software that executes arbitrary code" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-123">
                  <countermeasures>
                    <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-3" name="SL2 - Common - CR1.3" desc="" library="">
          <threats>
            <threat ref="cr1-3-adv_get_netw_info" name="An adversary that has previously obtained unauthorized access to certain device resources, uses that access to obtain information such as location and network information" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="provide_acc_mgmt_for_auth_users" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_acc_mgmt_for_auth_users" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-4" name="SL2 - Common - CR1.4" desc="" library="">
          <threats>
            <threat ref="cr1-4-adv_guess_trusted_id" name="An adversary guesses, obtains, or &quot;rides&quot; a trusted identifier (e.g. session ID, resource ID, cookie, etc.) to perform authorized actions under the guise of an authenticated user or service." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-384">
                  <countermeasures>
                    <countermeasure ref="provide_support_mgmt_id_by_user_group_role" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_support_mgmt_id_by_user_group_role" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-5" name="SL2 - Common - CR1.5" desc="" library="">
          <threats>
            <threat ref="cr1-5-adv_guess_default_pw" name="An adversary guesses the default password and user of an authenticator (e.g. admin:admin)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-521">
                  <countermeasures>
                    <countermeasure ref="provide_auth_init" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_auth_init" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-5-adv_retrieve_unencrypted_pw" name="An adversary is able to retrieve unencrypted passwords after a DBMS/DB -server breach" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-261">
                  <countermeasures>
                    <countermeasure ref="provide_auth_init" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_auth_init" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-7" name="SL2 - Common - CR1.7" desc="" library="">
          <threats>
            <threat ref="cr1-7-adv_bruteforce_pw" name="An adversary is able to brute force the password" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-307">
                  <countermeasures>
                    <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-7-adv_guess_pw" name="An adversary is able to guess the password based on identifying an authenticator" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-521">
                  <countermeasures>
                    <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-8" name="SL2 - Common - CR1.8" desc="" library="">
          <threats>
            <threat ref="cr1-8-adv_imposter_signed" name=" An attacker generates a message or datablock that causes the recipient to believe that the message or datablock was generated and cryptographically signed by an authoritative or reputable source, misleading a victim or victim operating system into performing malicious actions" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-347">
                  <countermeasures>
                    <countermeasure ref="if_pki_can_use_best_practices" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="if_pki_can_use_best_practices" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-9" name="SL2 - Common - CR1.9" desc="" library="">
          <threats>
            <threat ref="cr1-9-adv_gen_certificate" name="An adversary exploits a weakness resulting from using a hashing algorithm with weak collision resistance to generate a certificate signing request (CSR) that contains collision blocks in the &quot;to be signed&quot; part" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-916">
                  <countermeasures>
                    <countermeasure ref="protect_relevant_priv_keys" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_relevant_priv_keys" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-1" name="SL2 - Common - CR2.1" desc="" library="">
          <threats>
            <threat ref="cr2-1-adv_connect_with_compromised_acc_make_changes" name="An adversary is able to connect to the asset with a compromised account and is able to make changes to all content available on the asset. (no roles)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_auth_all_users_based_on_resp" mitigation="34"/>
                    <countermeasure ref="enforce_auth_based_on_role_leas_priv" mitigation="33"/>
                    <countermeasure ref="role_to_define_and_modify_perm_mapping" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_auth_all_users_based_on_resp" mitigation="34"/>
                <countermeasure ref="enforce_auth_based_on_role_leas_priv" mitigation="33"/>
                <countermeasure ref="role_to_define_and_modify_perm_mapping" mitigation="33"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-10" name="SL2 - Common - CR2.10" desc="" library="">
          <threats>
            <threat ref="cr2-10-a_system_user_admin_is_not_notified_when_there_is_an_error_logging_the_system" name="A system user admin is not notified when there is an error logging the asset. Adversaries can use this by making the logging of the asset prone to errors by introducing a bug in the process. Now adversaries can compromise the system without it being logged." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="75" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="alert_personnel_prevent_svc_loss" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="alert_personnel_prevent_svc_loss" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-11" name="SL2 - Common - CR2.11" desc="" library="">
          <threats>
            <threat ref="cr2-11-an_adversary_compromises_a_system_without_knowing_when_he_compromised_it" name="An adversary compromises a system without knowing when he compromised it." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                    <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-12" name="SL2 - Common - CR2.12" desc="" library="">
          <threats>
            <threat ref="cr2-12-an_adversary_compromised_the_system_not_knowing_from_where_he_compromised_the_system" name="An adversary compromised the asset, not knowing from where he compromised the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="provide_human_user_interface_determine_user_took_action" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_human_user_interface_determine_user_took_action" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-2" name="SL2 - Common - CR2.2" desc="" library="">
          <threats>
            <threat ref="cr2-2-adv_wifi_access" name="An adversary is able to get access to the asset via wireless protocols without authorization" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-3" name="SL2 - Common - CR2.3" desc="" library="">
          <threats>
            <threat ref="cr2-3-adv_portable_dev_access" name="An adversary can access the asset using a portable device" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_config_usage_restriction" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_config_usage_restriction" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-4" name="SL2 - Common - CR2.4" desc="" library="">
          <threats>
            <threat ref="cr2-4-an_adversary_can_execute_remote_code" name="An adversary can execute remote code" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-94">
                  <countermeasures>
                    <countermeasure ref="restrict_mobile_code" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="restrict_mobile_code" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-5" name="SL2 - Common - CR2.5" desc="" library="">
          <threats>
            <threat ref="cr2-5-an_adversary_can_perform_a_dos_attack_by_making_consecutive_authorization_requests" name="An adversary can perform a DoS attack by making consecutive authorization requests" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-307">
                  <countermeasures>
                    <countermeasure ref="prevent_further_access_init_seslock" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="prevent_further_access_init_seslock" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-6" name="SL2 - Common - CR2.6" desc="" library="">
          <threats>
            <threat ref="cr2-6-an_adversary_could_have_maintained_a_stored_session" name="An adversary could have maintained a stored session. By doing so he keeps access to the asset with the role identified with that corresponding session." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-384">
                  <countermeasures>
                    <countermeasure ref="terminate_remote_session_auto_or_manual" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="terminate_remote_session_auto_or_manual" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-8" name="SL2 - Common - CR2.8" desc="" library="">
          <threats>
            <threat ref="cr2-8-an_aversary_could_have_compromised_the_sytem_without_you_knowing" name="An adversary could have compromised the system without you knowing what part in the asset was compromised or how he compromised the asset " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-9" name="SL2 - Common - CR2.9" desc="" library="">
          <threats>
            <threat ref="cr2-9-logging_of_the_system_will_fail_when_allocated_storage_capacity_is_satisfied" name="Logging of the asset will fail when allocated storage capacity is satisfied. Attackers can take advantage of this by creating space-eater malware." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-117">
                  <countermeasures>
                    <countermeasure ref="allocate_sufficient_audit_record_storage" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="allocate_sufficient_audit_record_storage" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-1" name="SL2 - Common - CR3.1" desc="" library="">
          <threats>
            <threat ref="cr3-1-adv_intercept_netw_traffic" name="An adversary can intercept network traffic" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="25" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-5">
                  <countermeasures>
                    <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                    <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-2" name="SL2 - Common - CR3.2" desc="" library="">
          <threats>
            <threat ref="cr3-2-adv_phishing_mail" name="An adversary sends a phishing mail with a trojan as email attachment" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-507">
                  <countermeasures>
                    <countermeasure ref="employ_maware_protection" mitigation="50"/>
                    <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="employ_maware_protection" mitigation="50"/>
                <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-3" name="SL2 - Common - CR3.3" desc="" library="">
          <threats>
            <threat ref="cr3-3-adv_plant_backdoor" name="An adversary could have planted a backdoor on the asset without the user ever knowing (no anti-virus)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-147">
                  <countermeasures>
                    <countermeasure ref="verify_intended_ops" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="verify_intended_ops" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-4" name="SL2 - Common - CR3.4" desc="" library="">
          <threats>
            <threat ref="cr3-4-adv_tamper_software" name="An adversary is able to tamper with software running on a system. On the asset no integrity check is in place." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-354">
                  <countermeasures>
                    <countermeasure ref="integrity_check_software" mitigation="50"/>
                    <countermeasure ref="support_auth_check_on_software_config" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="integrity_check_software" mitigation="50"/>
                <countermeasure ref="support_auth_check_on_software_config" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-5" name="SL2 - Common - CR3.5" desc="" library="">
          <threats>
            <threat ref="cr3-5-adv_xss" name="An adversary can perform cross site scripting when input is not validated" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-79">
                  <countermeasures>
                    <countermeasure ref="validate_syntax_length_content_of_any_input" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="validate_syntax_length_content_of_any_input" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-6" name="SL2 - Common - CR3.6" desc="" library="">
          <threats>
            <threat ref="cr3-6-adv_fuzz_sensor" name="An adversary can fuzz a sensor connected to a PLC which will cause the controller to generate wrong output values which can cause big system failures (DoS)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="75" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-20">
                  <countermeasures>
                    <countermeasure ref="phys_logical_connect_to_automation_process" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="phys_logical_connect_to_automation_process" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-7" name="SL2 - Common - CR3.7" desc="" library="">
          <threats>
            <threat ref="cr3-7-adv_disclose_info_via_error_msg" name="An adversary can use error messages that contain too much information, such as stack traces, to discover vulnerabilities in the running service." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-209">
                  <countermeasures>
                    <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-8" name="SL2 - Common - CR3.8" desc="" library="">
          <threats>
            <threat ref="cr3-8-adv_mitm_random_sessionid" name="An adversary can perform a man in the middle attack when generating a session with a random session-ID." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="protect_integrity_of_sessions" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_integrity_of_sessions" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-9" name="SL2 - Common - CR3.9" desc="" library="">
          <threats>
            <threat ref="cr3-9-adv_delete_audit_records_after_breach" name="An adversary is able to delete audit records after a system breach which can make investigations very difficult  " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-732">
                  <countermeasures>
                    <countermeasure ref="protect_audit_info_logs_tools" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_audit_info_logs_tools" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr4-1" name="SL2 - Common - CR4.1" desc="" library="">
          <threats>
            <threat ref="cr4-1-adv_intercept_unecrypted_file_in_transit" name="An adversary is able to intercept an unencrypted file in transit" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="protect_conf_of_info_at_rest_remote_access" mitigation="50"/>
                    <countermeasure ref="protect_conf_of_info_traversing_netw" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_conf_of_info_at_rest_remote_access" mitigation="50"/>
                <countermeasure ref="protect_conf_of_info_traversing_netw" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr4-2" name="SL2 - Common - CR4.2" desc="" library="">
          <threats>
            <threat ref="cr4-adv_access_file_unpurged_dev" name="An adversary can access files through a device which was released from active service and which was not purged" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-672">
                  <countermeasures>
                    <countermeasure ref="explicit_read_auth_protect_conf_info" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="explicit_read_auth_protect_conf_info" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr4-3" name="SL2 - Common - CR4.3" desc="" library="">
          <threats>
            <threat ref="cr4-3-adv_break_alg_weak_encryption" name="When a weak encryption algorithm is used an adversary is capable of breaking the algorithm with standard available tools" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-326">
                  <countermeasures>
                    <countermeasure ref="user_crypto_algs" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="user_crypto_algs" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr5-1" name="SL2 - Common - CR5.1" desc="" library="">
          <threats>
            <threat ref="cr5-1-network_segmentation_exploit" name="An adversary is able to hop between internal networks since they are not segregated" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="logically_segment_control_system" mitigation="50"/>
                    <countermeasure ref="physically_segment_control_system" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="logically_segment_control_system" mitigation="50"/>
                <countermeasure ref="physically_segment_control_system" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr5-2" name="SL2 - Common - CR5.2" desc="" library="">
          <threats>
            <threat ref="cr5-2-lateralmovement_exploit" name="An adversary can complete lateral movement within the asset when no protection is set up" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="deny_netw_traffic_allow_netw_traffic_exceptions" mitigation="50"/>
                    <countermeasure ref="monitor_control_comms_zone_boundaries" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="deny_netw_traffic_allow_netw_traffic_exceptions" mitigation="50"/>
                <countermeasure ref="monitor_control_comms_zone_boundaries" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr6-1" name="SL2 - Common - CR6.1" desc="" library="">
          <threats>
            <threat ref="cr6-1-audit_log_exploit" name="An adversary may compromise the asset and edit the logfiles with non root privileges" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-532">
                  <countermeasures>
                    <countermeasure ref="auth_humans_tools_audit_logs" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="auth_humans_tools_audit_logs" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr6-2" name="SL2 - Common - CR6.2" desc="" library="">
          <threats>
            <threat ref="cr6-2-continuous_monitoring_exploit" name="An adversary compromises a system  without it being timely notified and detected by for example a IDS" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-693">
                  <countermeasures>
                    <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-1" name="SL2 - Common - CR7.1" desc="" library="">
          <threats>
            <threat ref="cr7-1-dos_no_protect" name="Assets might lose the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event.&#10;" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-1100">
                  <countermeasures>
                    <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                    <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-2" name="SL2 - Common - CR7.2" desc="" library="">
          <threats>
            <threat ref="cr7-2-rsrc_exhaustion" name="Assets might lose the capability to maintain essential functions as a result of resource exhaustion." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-400">
                  <countermeasures>
                    <countermeasure ref="limit_rsrc_by_sec" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="limit_rsrc_by_sec" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-3" name="SL2 - Common - CR7.3" desc="" library="">
          <threats>
            <threat ref="cr7-3-no_usr_sys_info_backup" name="Assets might not regain their state (user- and system-level information) due to storage failure." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="50" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-636">
                  <countermeasures>
                    <countermeasure ref="provide_participate_in_sys_level_backup" mitigation="50"/>
                    <countermeasure ref="validate_integrity_of_backup_info" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_participate_in_sys_level_backup" mitigation="50"/>
                <countermeasure ref="validate_integrity_of_backup_info" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-4" name="SL2 - Common - CR7.4" desc="" library="">
          <threats>
            <threat ref="cr7-4-no_usr_sys_info_backup" name="Assets might not regain their state (user- and system-level information) due to storage failure." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="50" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-636">
                  <countermeasures>
                    <countermeasure ref="cap_to_be_recovered_to_known_secure_state" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="cap_to_be_recovered_to_known_secure_state" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-5" name="SL2 - Common - CR7.5" desc="" library="">
          <threats>
            <threat ref="cr7-5-emergency_power" name="An adversary can cause a power outage of a security system which will give an adversary to compromise the asset." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="switch_to_and_from_emergency_power_supply" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="switch_to_and_from_emergency_power_supply" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-6" name="SL2 - Common - CR7.6" desc="" library="">
          <threats>
            <threat ref="cr7-6-unauth_access_default_creds" name="Unauthorized component access might occur as a result of not being able to change default access credentials" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-798">
                  <countermeasures>
                    <countermeasure ref="config_according_to_recommended_netw_and_security" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="config_according_to_recommended_netw_and_security" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-7" name="SL2 - Common - CR7.7" desc="" library="">
          <threats>
            <threat ref="cr7-7-unauth_access_unnecessary_func" name="Unauthorized component access might occur as a result of not being able to restrict unnecessary functions, ports, protocols and/or services." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-8" name="SL2 - Common - CR7.8" desc="" library="">
          <threats>
            <threat ref="cr7-8-rogue_assets" name="Rogue assets might enter the network as a result of not being able to verify component identities." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="ed92607b-65f4-414a-b509-f29c985962db" diagramComponentId="75a2bcf8-f060-4b37-9679-a10a4e3f5672" ref="80b994c4-90e3-4b14-869c-eca6fd3e097e" name="Serial Interface - SPI Bus" desc="" library="" parentComponentRef="" componentDefinitionRef="serial-interface-spi-bus">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="iec62443-sl2"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-300" name="Channel Accessible by Non-Endpoint ('Man-in-the-Middle')" state="0" impact="100" issueId="">
          <desc>The product does not adequately verify the identity of actors at both ends of a communication channel, or does not adequately ensure the integrity of the channel, in a way that allows the channel to be accessed or influenced by an actor that is not an endpoint.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-209" name="Information Exposure Through an Error Message" state="0" impact="100" issueId="">
          <desc>The software generates an error message that includes sensitive information about its environment, users, or associated data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-1100" name="Insufficient Isolation of System-Dependent Functions" state="0" impact="100" issueId="">
          <desc>The product or code does not isolate system-dependent
					functionality into separate stand-alone modules.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="">
          <desc>When a security-critical event occurs, the software either does not record the event or omits important details about the event when logging it.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-5" name="J2EE Misconfiguration: Data Transmission Without Encryption" state="0" impact="100" issueId="">
          <desc>Information sent over a network can be compromised while in transit. An attacker may be able to read or modify the contents if the data are sent in plaintext or are weakly encrypted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-693" name="Protection Mechanism Failure" state="0" impact="100" issueId="">
          <desc>The product does not use or incorrectly uses a protection mechanism that provides sufficient defence against directed attacks against the product.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="continuous_monitor_accepted_sec" name="Assets shall provide the capability to be continuously monitored using commonly accepted security industry practices and recommendations to detect, characterize and report security breaches in a timely manner." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Control system monitoring capability can be achieved through a variety of tools and
techniques (for example, IDS, IPS, malicious code protection mechanisms and network monitoring mechanisms).
2. Monitoring devices should be strategically deployed within the control system (for example, at
selected perimeter locations and near server farms supporting critical applications) to collect
essential information. Monitoring mechanisms may also be deployed at ad hoc locations
within the control system to track specific transactions
3. SIEM Implementation</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_for_audit_records" name="Assets shall provide the capability to create timestamps (including date and time) for use in audit records." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Timestamps (including date and time) of audit records should be generated using internal
system clocks.
1. provide timestamps for use in audit record generation.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" name="Assets shall provide the capability to create timestamps that are synchronized with a system wide time source." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>to synchronize internal system clocks at a configurable frequency.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="maintain_essential_functions" name="Assets shall provide the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>provide the capability to manage communication loads (such as
using rate limiting) to mitigate the effects of information flooding types of DoS events.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="id_and_handle_error_conditions" name="The asset shall identify and handle error conditions in a manner such that effective remediation can occur. This shall be done in a manner which does not provide information that could be exploited by adversaries to attack the IACS unless revealing this information is necessary for the timely troubleshooting of problems." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Error messages generated by the control system should provide timely and useful information without revealing potentially harmful information.
2. Vulnerability Assessment &amp; Penetration Testing</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="employ_cypto_mechs_to_recognize_changes" name="The asset shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" name="The asset shall provide the capability to generate audit records relevant to security for the following categories: access control, request errors, operating system events, asset events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Generate audit records relevant to security for the following categories: access control, request errors, operating system events, control system events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="mitigate_info_effects_flooding_types" name="The asset shall provide the capability to manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. boundary protection
2. restricting the information flow to be unidirectional outbound
3. manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events.
4. restrict the ability of all users (humans, software processes and devices) to cause DoS events which affect other control systems or networks.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_integrity_transmitted_info" name="The asset shall provide the capability to protect the integrity of transmitted information." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="report_current_list_of_installed_assets" name="The asset shall provide the capability to report the current list of installed assets and their associated properties." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Usage of component ID, capability and revision level.
2. Formal process of configuration management should be deployed to keep control of the
changes in the component inventory baseline
3. The system requires all default passwords and pass phrases to be changed in order to complete the setup, prior to being operational.  This includes SSID passphrases, default accounts, admin accounts, etc.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="common-sl2-cr2-11" name="SL2 - Common - CR2.11" desc="" library="">
          <threats>
            <threat ref="cr2-11-an_adversary_compromises_a_system_without_knowing_when_he_compromised_it" name="An adversary compromises a system without knowing when he compromised it." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                    <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-8" name="SL2 - Common - CR2.8" desc="" library="">
          <threats>
            <threat ref="cr2-8-an_aversary_could_have_compromised_the_sytem_without_you_knowing" name="An adversary could have compromised the system without you knowing what part in the asset was compromised or how he compromised the asset " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-1" name="SL2 - Common - CR3.1" desc="" library="">
          <threats>
            <threat ref="cr3-1-adv_intercept_netw_traffic" name="An adversary can intercept network traffic" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="25" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-5">
                  <countermeasures>
                    <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                    <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-7" name="SL2 - Common - CR3.7" desc="" library="">
          <threats>
            <threat ref="cr3-7-adv_disclose_info_via_error_msg" name="An adversary can use error messages that contain too much information, such as stack traces, to discover vulnerabilities in the running service." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-209">
                  <countermeasures>
                    <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr6-2" name="SL2 - Common - CR6.2" desc="" library="">
          <threats>
            <threat ref="cr6-2-continuous_monitoring_exploit" name="An adversary compromises a system  without it being timely notified and detected by for example a IDS" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-693">
                  <countermeasures>
                    <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-1" name="SL2 - Common - CR7.1" desc="" library="">
          <threats>
            <threat ref="cr7-1-dos_no_protect" name="Assets might lose the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event.&#10;" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-1100">
                  <countermeasures>
                    <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                    <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-8" name="SL2 - Common - CR7.8" desc="" library="">
          <threats>
            <threat ref="cr7-8-rogue_assets" name="Rogue assets might enter the network as a result of not being able to verify component identities." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="45a3fa3a-ea21-4e2b-91a3-e121aa071d30" diagramComponentId="fcaa0442-d409-44a1-b497-909ee6b73552" ref="d472faa0-7648-48d6-ae95-cc42f85a602f" name="Serial Interface - SPI Bus" desc="" library="" parentComponentRef="" componentDefinitionRef="serial-interface-spi-bus">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="iec62443-sl2"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-300" name="Channel Accessible by Non-Endpoint ('Man-in-the-Middle')" state="0" impact="100" issueId="">
          <desc>The product does not adequately verify the identity of actors at both ends of a communication channel, or does not adequately ensure the integrity of the channel, in a way that allows the channel to be accessed or influenced by an actor that is not an endpoint.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-209" name="Information Exposure Through an Error Message" state="0" impact="100" issueId="">
          <desc>The software generates an error message that includes sensitive information about its environment, users, or associated data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-1100" name="Insufficient Isolation of System-Dependent Functions" state="0" impact="100" issueId="">
          <desc>The product or code does not isolate system-dependent
					functionality into separate stand-alone modules.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="">
          <desc>When a security-critical event occurs, the software either does not record the event or omits important details about the event when logging it.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-5" name="J2EE Misconfiguration: Data Transmission Without Encryption" state="0" impact="100" issueId="">
          <desc>Information sent over a network can be compromised while in transit. An attacker may be able to read or modify the contents if the data are sent in plaintext or are weakly encrypted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-693" name="Protection Mechanism Failure" state="0" impact="100" issueId="">
          <desc>The product does not use or incorrectly uses a protection mechanism that provides sufficient defence against directed attacks against the product.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="continuous_monitor_accepted_sec" name="Assets shall provide the capability to be continuously monitored using commonly accepted security industry practices and recommendations to detect, characterize and report security breaches in a timely manner." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Control system monitoring capability can be achieved through a variety of tools and
techniques (for example, IDS, IPS, malicious code protection mechanisms and network monitoring mechanisms).
2. Monitoring devices should be strategically deployed within the control system (for example, at
selected perimeter locations and near server farms supporting critical applications) to collect
essential information. Monitoring mechanisms may also be deployed at ad hoc locations
within the control system to track specific transactions
3. SIEM Implementation</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_for_audit_records" name="Assets shall provide the capability to create timestamps (including date and time) for use in audit records." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Timestamps (including date and time) of audit records should be generated using internal
system clocks.
1. provide timestamps for use in audit record generation.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" name="Assets shall provide the capability to create timestamps that are synchronized with a system wide time source." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>to synchronize internal system clocks at a configurable frequency.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="maintain_essential_functions" name="Assets shall provide the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>provide the capability to manage communication loads (such as
using rate limiting) to mitigate the effects of information flooding types of DoS events.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="id_and_handle_error_conditions" name="The asset shall identify and handle error conditions in a manner such that effective remediation can occur. This shall be done in a manner which does not provide information that could be exploited by adversaries to attack the IACS unless revealing this information is necessary for the timely troubleshooting of problems." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Error messages generated by the control system should provide timely and useful information without revealing potentially harmful information.
2. Vulnerability Assessment &amp; Penetration Testing</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="employ_cypto_mechs_to_recognize_changes" name="The asset shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" name="The asset shall provide the capability to generate audit records relevant to security for the following categories: access control, request errors, operating system events, asset events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Generate audit records relevant to security for the following categories: access control, request errors, operating system events, control system events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="mitigate_info_effects_flooding_types" name="The asset shall provide the capability to manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. boundary protection
2. restricting the information flow to be unidirectional outbound
3. manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events.
4. restrict the ability of all users (humans, software processes and devices) to cause DoS events which affect other control systems or networks.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_integrity_transmitted_info" name="The asset shall provide the capability to protect the integrity of transmitted information." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="report_current_list_of_installed_assets" name="The asset shall provide the capability to report the current list of installed assets and their associated properties." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Usage of component ID, capability and revision level.
2. Formal process of configuration management should be deployed to keep control of the
changes in the component inventory baseline
3. The system requires all default passwords and pass phrases to be changed in order to complete the setup, prior to being operational.  This includes SSID passphrases, default accounts, admin accounts, etc.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="common-sl2-cr2-11" name="SL2 - Common - CR2.11" desc="" library="">
          <threats>
            <threat ref="cr2-11-an_adversary_compromises_a_system_without_knowing_when_he_compromised_it" name="An adversary compromises a system without knowing when he compromised it." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                    <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-8" name="SL2 - Common - CR2.8" desc="" library="">
          <threats>
            <threat ref="cr2-8-an_aversary_could_have_compromised_the_sytem_without_you_knowing" name="An adversary could have compromised the system without you knowing what part in the asset was compromised or how he compromised the asset " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-1" name="SL2 - Common - CR3.1" desc="" library="">
          <threats>
            <threat ref="cr3-1-adv_intercept_netw_traffic" name="An adversary can intercept network traffic" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="25" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-5">
                  <countermeasures>
                    <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                    <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-7" name="SL2 - Common - CR3.7" desc="" library="">
          <threats>
            <threat ref="cr3-7-adv_disclose_info_via_error_msg" name="An adversary can use error messages that contain too much information, such as stack traces, to discover vulnerabilities in the running service." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-209">
                  <countermeasures>
                    <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr6-2" name="SL2 - Common - CR6.2" desc="" library="">
          <threats>
            <threat ref="cr6-2-continuous_monitoring_exploit" name="An adversary compromises a system  without it being timely notified and detected by for example a IDS" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-693">
                  <countermeasures>
                    <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-1" name="SL2 - Common - CR7.1" desc="" library="">
          <threats>
            <threat ref="cr7-1-dos_no_protect" name="Assets might lose the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event.&#10;" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-1100">
                  <countermeasures>
                    <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                    <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-8" name="SL2 - Common - CR7.8" desc="" library="">
          <threats>
            <threat ref="cr7-8-rogue_assets" name="Rogue assets might enter the network as a result of not being able to verify component identities." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="eee8f237-5b73-4540-8ed1-e8d5a251ca90" diagramComponentId="9e4a15a3-71fa-42f2-9857-1fee955a238b" ref="59adf111-1637-42fe-bbed-e0c66cbafffc" name="SNS - Simple Notification Service" desc="" library="Hydras-AWS-Foundation" parentComponentRef="" componentDefinitionRef="sns">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="trusted-partner"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="log-actions-sending-out-notifications" name="Log the actions to send out notifications" state="0" impact="100" issueId="">
          <desc>The sensitive data is not encrypted in transit with HTTPS or SSL, and the data is accessible
                        in the canal.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="no-access-control-publish-sns-topics" name="No access control to publish on SNS topics" state="0" impact="100" issueId="">
          <desc>The notifications are not centralized; therefore, the control of these notifications and who
                        receives them is not easily managed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="no-access-control-subscribe-sns-topics" name="No access control to subscribe on SNS topics" state="0" impact="100" issueId="">
          <desc>The notifications are not centralized; therefore, the control of these notifications and who
                        receives them is not easily managed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-SNS-01" name="Notifications are not centralized" state="0" impact="100" issueId="">
          <desc>The notifications are not centralized; therefore, the control of these notifications and who
                        receives them is not easily managed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-S3-7.3" name="Sensitive data is exposed in transit" state="0" impact="100" issueId="">
          <desc>&lt;p&gt;Sensitive data is not encrypted in transit with HTTPS or SSL, and is accessible while traversing the network.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-06-11T03:47:18.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="aws-tier-4.1" name="Create a SNS topic for sending out notifications from Cloudtwatch Alarms" issueId="" platform="" cost="1" risk="44" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>&lt;div&gt;
  For the Cloudwatch alarms and Auto-Scaling Groups to be able to send out notifications, a SNS topic should be created. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  Amazon Simple Notification Service (Amazon SNS) is a web service that coordinates and manages the delivery or sending of messages to subscribing endpoints or clients. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  When using Amazon SNS, you (as the owner) create a topic and control access to it by defining policies that determine which publishers and subscribers can communicate with the topic. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  Cloudwatch alarms and certain actions inside Auto-Scaling Groups needs to be sent out to administrators, in order to be acted upon. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified CLI: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create a new topic, and note the topic-arn value:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws sns create-topic --name &amp;lt;sns_topic_name&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create a subscription to the new topic:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws sns subscribe --topic-arn &amp;lt;sns_topic_arn&amp;gt; --protocol &amp;lt;protocol_for_sns&amp;gt; --notification-endpoint &amp;lt;sns_subscription_endpoints&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: sns get topic attributes" url="https://docs.aws.amazon.com/cli/latest/reference/sns/get-topic-attributes.html"/>
            <reference name="Amazon docs: sns list subscriptions by topic" url="https://docs.aws.amazon.com/cli/latest/reference/sns/list-subscriptions-by-topic.html"/>
            <reference name="Amazon docs: sns set topic attributes" url="https://docs.aws.amazon.com/cli/latest/reference/sns/create-topic.html"/>
            <reference name="Amazon docs: sns subscribe" url="https://docs.aws.amazon.com/cli/latest/reference/sns/subscribe.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="4.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified CLI: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List all cloudwatch alarms and filter by alarm action (review &amp;quot;AlarmActions&amp;quot;: []):&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws cloudwatch describe-alarms --query 'MetricAlarms[*].{AlarmName:AlarmName, AlarmActions:AlarmActions, Dimensions:Dimensions}' 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List SNS topic attributes:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws sns list-topic-attributes --topic-arn &amp;lt;sns_topic_arn&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List SNS topic subscriptions (endpoint which receives messages captured by the SNS topic):&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws sns list-subscriptions-by-topic --topic-arn &amp;lt;sns_topic_arn&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="aws-tier-4.2" name="Create a SNS topic for sending out notifications from RDS events" issueId="" platform="" cost="1" risk="44" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>&lt;div&gt;
  For the RDS event subscriptions to be able to send out notifications, a SNS topic should be created. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  Amazon Simple Notification Service (Amazon SNS) is a web service that coordinates and manages the delivery or sending of messages to subscribing endpoints or clients. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  When using Amazon SNS, you (as the owner) create a topic and control access to it by defining policies that determine which publishers and subscribers can communicate with the topic. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  RDS events generated through defined RDS event subscriptions needs to be sent out to administrators, in order to be acted upon. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified CLI: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create a new topic, and note the topic-arn value:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws sns create-topic --name &amp;lt;sns_topic_name&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create a subscription to the new topic:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws sns subscribe --topic-arn &amp;lt;sns_topic_arn&amp;gt; --protocol &amp;lt;protocol_for_sns&amp;gt; --notification-endpoint &amp;lt;sns_subscription_endpoints&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: sns get topic attributes" url="https://docs.aws.amazon.com/cli/latest/reference/sns/get-topic-attributes.html"/>
            <reference name="Amazon docs: sns list subscriptions by topic" url="https://docs.aws.amazon.com/cli/latest/reference/sns/list-subscriptions-by-topic.html"/>
            <reference name="Amazon docs: sns set topic attributes" url="https://docs.aws.amazon.com/cli/latest/reference/sns/create-topic.html"/>
            <reference name="Amazon docs: sns subscribe" url="https://docs.aws.amazon.com/cli/latest/reference/sns/subscribe.html"/>
          </references>
          <standards>
            <standard ref="4.2" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified CLI: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List all RDS event subscriptions in order to capture the topic-arn:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws rds describe-event-subscriptions --query 'EventSubscriptionsList[*].{SourceType:SourceType, SourceIdsList:SourceIdsList, EventCategoriesList:EventCategoriesList}' 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List SNS topic attributes:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws sns list-topic-attributes --topic-arn &amp;lt;sns_topic_arn&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List SNS topic subscriptions (endpoint which receives messages captured by the SNS topic):&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws sns list-subscriptions-by-topic --topic-arn &amp;lt;sns_topic_arn&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="aws-tier-2.9" name="Do not permit 'Everyone' to publish SNS topics" issueId="" platform="" cost="1" risk="49" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>&lt;div&gt;
  Amazon Simple Notification Service (Amazon SNS) is a web service that coordinates and manages the delivery or sending of messages to subscribing endpoints or clients. In Amazon SNS, there are two types of clients - publishers and subscribers - also referred to as producers and consumers. Publishers communicate asynchronously with subscribers by producing and sending a message to a topic, which is a logical access point and communication channel. Subscribers (i.e., web servers, email addresses, Amazon SQS queues, AWS Lambda functions) consume or receive the message or notification over one of the supported protocols (i.e., Amazon SQS, HTTP/S, email, SMS, Lambda) when they are subscribed to the topic. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  The entities who can publish messages to a SNS topic can be controlled by modifying the topic policy, and they can be: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;The topic owner&lt;/li&gt; 
  &lt;li&gt;Everyone&lt;/li&gt; 
  &lt;li&gt;Specific AWS users or resources&lt;/li&gt; 
 &lt;/ul&gt;From the above message publisher options you should make sure that &amp;quot;Everyone&amp;quot; is not used with any SNS topic in the AWS account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  If an SNS topic policy allows &amp;quot;Everyone&amp;quot; to publish messages to a specific topic, this could pose a security risk as any unauthenticated entity could send malicious messages to all the topic subscribers. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Edit your existing policy by deleting the above snippet or replacing &amp;quot;Principal&amp;quot;:{&amp;quot;AWS&amp;quot; : &amp;quot;*&amp;quot;} with &amp;quot;Principal&amp;quot;:{&amp;quot;AWS&amp;quot; : &amp;quot;&amp;quot;}, and save it locally as a .json file named policy.json. 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;br /&gt; 
 &lt;/div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Set the new policy to the SNS topic&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws sns set-topic-attributes --topic-arn sns_topic_arn --attribute-name Policy --attribute-value file://policy.json 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;b&gt;&lt;br /&gt;&lt;/b&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: Using IAM with SNS" url="https://docs.aws.amazon.com/sns/latest/dg/UsingIAMwithSNS.html#ExamplePolicies_SNS"/>
            <reference name="Amazon docs: sns get topic attributes" url="https://docs.aws.amazon.com/cli/latest/reference/sns/get-topic-attributes.html"/>
            <reference name="Amazon docs: sns list topics" url="https://docs.aws.amazon.com/cli/latest/reference/sns/list-topics.html"/>
            <reference name="Amazon docs: sns set topic attributes" url="https://docs.aws.amazon.com/cli/latest/reference/sns/create-topic.html"/>
          </references>
          <standards>
            <standard ref="2.9" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List all the SNS topics from your AWS account:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws sns list-topics 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;For each topic in step 1, list the topic attributes:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws sns get-topic-attributes --topic-arn &amp;lt;sns_topic_arn&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Check the Policy field for the presence of:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    { 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    &amp;quot;Effect&amp;quot;:&amp;quot;Allow&amp;quot;, 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    &amp;quot;Principal&amp;quot;:{ 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt;
      &amp;quot;AWS&amp;quot;:&amp;quot;*&amp;quot; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt;
      }, 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    &amp;quot;Action&amp;quot;:&amp;quot;SNS:Publish&amp;quot;, 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    &amp;quot;Resource&amp;quot;:&amp;quot;&amp;lt;sns_topic_arn&amp;gt;&amp;quot; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    } 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="aws-tier-2.10" name="Do not permit 'Everyone' to subscribe on SNS topics" issueId="" platform="" cost="1" risk="49" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>&lt;div&gt;
  Amazon Simple Notification Service (Amazon SNS) is a web service that coordinates and manages the delivery or sending of messages to subscribing endpoints or clients. In Amazon SNS, there are two types of clients - publishers and subscribers - also referred to as producers and consumers. Publishers communicate asynchronously with subscribers by producing and sending a message to a topic, which is a logical access point and communication channel. Subscribers (i.e., web servers, email addresses, Amazon SQS queues, AWS Lambda functions) consume or receive the message or notification over one of the supported protocols (i.e., Amazon SQS, HTTP/S, email, SMS, Lambda) when they are subscribed to the topic. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  The entities who can subscribe to a SNS topic can be controlled by modifying the topic policy, and they can be: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;The topic owner&lt;/li&gt; 
  &lt;li&gt;Everyone&lt;/li&gt; 
  &lt;li&gt;Specific AWS users or resources&lt;/li&gt; 
  &lt;li&gt;Users whose endpoint URL,protocol, email address, or ARN from a Subscribe request match a specified value&lt;/li&gt; 
 &lt;/ul&gt; 
  From the above topic subscribers, you should make sure that &amp;quot;Everyone&amp;quot; is not used with any SNS topic in the AWS account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  If a SNS topic policy allows &amp;quot;Everyone&amp;quot; to subscribe to a specific topic, this could pose a security risk as any unauthenticated entity could subscribe and receive messages from the topic publishers, messages that should be destined only to specific, known subscribers. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Edit your existing policy by deleting the above snippet or replacing &amp;quot;Principal&amp;quot;:{&amp;quot;AWS&amp;quot; : &amp;quot;*&amp;quot;} with &amp;quot;Principal&amp;quot;:{&amp;quot;AWS&amp;quot; : &amp;quot;&amp;quot;}, and save it locally as a .json file named policy.json. 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;br /&gt; 
 &lt;/div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Set the new policy to the SNS topic&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws sns set-topic-attributes --topic-arn sns_topic_arn --attribute-name Policy --attribute-value file://policy.json 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: Using IAM with SNS" url="https://docs.aws.amazon.com/sns/latest/dg/UsingIAMwithSNS.html#ExamplePolicies_SNS"/>
            <reference name="Amazon docs: sns get topic attributes" url="https://docs.aws.amazon.com/cli/latest/reference/sns/get-topic-attributes.html"/>
            <reference name="Amazon docs: sns list topics" url="https://docs.aws.amazon.com/cli/latest/reference/sns/list-topics.html"/>
            <reference name="Amazon docs: sns set topic attributes" url="https://docs.aws.amazon.com/cli/latest/reference/sns/create-topic.html"/>
          </references>
          <standards>
            <standard ref="2.10" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List all the SNS topics from your AWS account:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws sns list-topics 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;For each topic in step 1, list the topic attributes:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws sns get-topic-attributes --topic-arn &amp;lt;sns_topic_arn&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Check the Policy field for the presence of:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    { 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    &amp;quot;Effect&amp;quot;:&amp;quot;Allow&amp;quot;, 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    &amp;quot;Principal&amp;quot;:{ 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt;
      &amp;quot;AWS&amp;quot;:&amp;quot;*&amp;quot; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt;
      }, 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    &amp;quot;Action&amp;quot;: [ 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt;
      &amp;quot;SNS:Subscribe&amp;quot;, 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt;
      &amp;quot;SNS:Receive&amp;quot; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt;
      ], 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    &amp;quot;Resource&amp;quot;:&amp;quot;&amp;lt;sns_topic_arn&amp;gt;&amp;quot; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    } 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-SNS-02" name="Enforce HTTPS to encrypt notifications" issueId="" platform="" cost="1" risk="49" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>To send messages to an HTTPS endpoint through a topic, you must subscribe the endpoint to the
                        Amazon SNS topic. You specify the endpoint using its URL. To subscribe to a topic, you can use
                        the Amazon SNS console, the sns-subscribe command, or the Subscribe API action.
                        &lt;br /&gt;
                        &lt;br /&gt;
                        &lt;b&gt; &lt;b&gt;Remediation:&lt;/b&gt; &lt;/b&gt;
                        &lt;br /&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Sign in to the AWS Management Console and open the Amazon SNS console at
                        https://console.aws.amazon.com/sns/v2/home.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;In the left navigation pane, click Topics and then select the topic.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Click the Other actions drop-down list and select Subscribe to topic.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;In the Protocol drop-down list, select HTTPS.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;In the Endpoint box, paste in the URL for the endpoint that you want the topic to send
                        messages to and then click Create subscription.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;For the Subscription request received! message, click Close.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Your new subscription's Subscription ID displays PendingConfirmation. When you confirm
                        the subscription, Subscription ID will display the subscription ID.&amp;nbsp;&lt;/li&gt;
                        &lt;/ol&gt;.</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Sign in to the AWS Management Console and open the Amazon SNS console at
                            https://console.aws.amazon.com/sns/v2/home.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;In the left navigation panel, click Topics and then select the topic.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Click the Other actions drop-down list and select Subscribe to topic.I&lt;/li&gt;
                            &lt;li&gt;In the Protocol drop-down list, check that the protocol HTTPS is selected.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-SNS-01" name="Use Amazon SNS to centralize notifications" issueId="" platform="" cost="1" risk="44" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>Configure all alerts from the Amazon environment with the Amazon Simple Notification Service
                        (SNS) to have centralized notifications and control over who receives these notifications, in
                        the same place.
                        &lt;br /&gt;
                        &lt;br /&gt;
                        &lt;b&gt; &lt;b&gt;Remediation:&lt;/b&gt; &lt;/b&gt;
                        &lt;br /&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Go to CoudWatch alarms.&lt;/li&gt;
                        &lt;li&gt;Edit each alarm and change the notification configuration to the SNS service.&lt;/li&gt;
                        &lt;/ol&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that all alerts from the Amazon environment are configured with the Amazon Simple
                            Notification Service (SNS).</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="CLOUDWATCH-METRIC-ALERTS" name="Cloudwatch Metric Alerts" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="AWS-LOST-CONTROL-NOTIFICATION" name="Sensitive data is compromised through notifications" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="Hydras-AWS-Foundation" editable="true">
              <desc>Attackers can gain access to the resources sensitive data if the system notifications
                                and alerts are not configured properly and the notifications are not received by the
                                appropriate personnel.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-SNS-01">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-SNS-01" mitigation="34"/>
                  </countermeasures>
                </weakness>
                <weakness ref="log-actions-sending-out-notifications">
                  <countermeasures>
                    <countermeasure ref="aws-tier-4.1" mitigation="33"/>
                    <countermeasure ref="aws-tier-4.2" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="Hydras-AWS-SNS-01" mitigation="34"/>
                <countermeasure ref="aws-tier-4.1" mitigation="33"/>
                <countermeasure ref="aws-tier-4.2" mitigation="33"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="VIRTUAL-PRIVATE-CLOUD-VPC-NETWORK" name="Virtual Private Cloud (VPC) Network" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="ACCESS-TO-DATA-AWS" name="Sensitive data is compromised through unauthorized access to data" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers can gain access to sensitive data when the data is in transit in clear text, or when the data is stored without encryption.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-S3-7.3">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-SNS-02" mitigation="34"/>
                  </countermeasures>
                </weakness>
                <weakness ref="no-access-control-publish-sns-topics">
                  <countermeasures>
                    <countermeasure ref="aws-tier-2.9" mitigation="33"/>
                  </countermeasures>
                </weakness>
                <weakness ref="no-access-control-subscribe-sns-topics">
                  <countermeasures>
                    <countermeasure ref="aws-tier-2.10" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="Hydras-AWS-SNS-02" mitigation="34"/>
                <countermeasure ref="aws-tier-2.10" mitigation="33"/>
                <countermeasure ref="aws-tier-2.9" mitigation="33"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="34ede0ba-674b-4bc3-9c67-f99742ccc17d" diagramComponentId="c2e0b00f-584b-4d30-af6e-ca0d0e742f85" ref="9ea622a7-a672-4fce-b489-3c86b00b2ee7" name="Other data store" desc="" library="CS-Default" parentComponentRef="" componentDefinitionRef="other-database">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="trusted-partner"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-250" name="Execution with Unnecessary Privileges" state="0" impact="100" issueId="">
          <desc>The software performs an operation at a privilege level that is higher than the minimum level
                        required, which creates new weaknesses or amplifies the consequences of other weaknesses.

                        New weaknesses can be exposed because running with extra privileges, such as root or
                        Administrator, can disable the normal security checks being performed by the operating system or
                        surrounding environment. Other pre-existing weaknesses can turn into security vulnerabilities if
                        they occur while operating at raised privileges. Privilege management functions can behave in
                        some less-than-obvious ways, and they have different quirks on different platforms. These
                        inconsistencies are particularly pronounced if you are transitioning from one non-root user to
                        another. Signal handlers and spawned processes run at the privilege of the owning process, so if
                        a process is running as root when a signal fires or a sub-process is executed, the signal
                        handler or sub-process will operate with root privileges.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2018-05-29T09:16:00.986">
              <output/>
            </source>
            <references>
              <reference name="CWE-250: Execution with Unnecessary Privileges" url="https://cwe.mitre.org/data/definitions/250.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-284" name="Improper Access Control" state="0" impact="100" issueId="">
          <desc>The software does not restrict or incorrectly restricts access to a resource from an unauthorized actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-06-27T13:08:23.410">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-306" name="Missing Authentication for Critical Function" state="0" impact="100" issueId="">
          <desc>The software does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-03-13T16:00:44.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="EU-GDPR-MISSING-ENCRYPTION-SENSITIVE-DATA" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="">
          <desc>&lt;ul&gt; 
 &lt;li&gt;Weak encryption algorithms&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Loss of encryption keys&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Compromised encryption keys&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Revoked keys are still active (bad key lifecycle management)&lt;/li&gt; 
&lt;/ul&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-03-13T16:00:47.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="RESTRICT-ACCESS-DATABASE" name="Access the data store from an account with the least privileges necessary" issueId="" platform="" cost="1" risk="44" state="Recommended" owner="cnmarrow" library="CS-Default" source="RULES" edited="false">
          <desc>	&lt;p&gt;Use an account with only the minimum set of permissions required to access the data store. The account should not be able to perform operations that are not explicitly required by the component that performs these operations. For example, if a web application needs to read data from certain tables and insert and update data from others, then a database account with only those specific permissions should be used by the application server.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AC-06 Least Privilege" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/28-08_02_AC-06"/>
            <reference name="OWASP Juice Shop: Injection" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/injection.html"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="1.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AC-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-6" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-3" supportedStandardRef="nist-csf"/>
            <standard ref="fedramp-high-baseline" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="fedramp-low-baseline" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="fedramp-moderate-baseline" supportedStandardRef="fedramp-moderate-baseline"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Identify the user account used by external components to access this data store.&lt;/li&gt; 
 &lt;li&gt;Check which permissions are assigned to this user account.&lt;/li&gt; 
 &lt;li&gt;Verify that they are the minimum set of permissions necessary and no unnecessary permissions are assigned.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-03-13T16:00:45.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="PATCH-SERVICE" name="Apply required security patches to the service" issueId="" platform="" cost="1" risk="73" state="Recommended" owner="cnmarrow" library="CS-Default" source="RULES" edited="false">
          <desc>&lt;p&gt;Vendors and other maintainers of software release patches in response to security flaws and other bugs in their products.&amp;nbsp; The longer a system is exposed with a known security vulnerability, the easier to compromise it. &amp;nbsp;As the exploit enters the public domain, they get included in automated exploitation suites like Metasploit and a wider less skilled miscreant is able to leverage them.&amp;nbsp; &amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Apply patches and other software updates in a timely manner to prevent unexpected failures or exploitation.&lt;/li&gt;&lt;li&gt;Clearly define an approach for testing and applying patches, in particular security patches, with expected timescales. &amp;nbsp;There is often a small window between the release of a patch, and potentially malicious actors reverse-engineering the patch to identify and exploit the flaw.&lt;/li&gt;&lt;li&gt;Use a threat intelligence, vulnerability scanning, or other alerting services to ensure the project team is promptly aware of issues within the project or its components.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA CM-01 Configuration Management Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/152-08_02_CM-01"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="14.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API1:2019-Broken Object Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="CM-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;br /&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check with the software or service vendor whether security vulnerabilities and
                            their associated patches are available for the version deployed.&lt;/li&gt;
                            &lt;li&gt;Evaluate the criticality of the vulnerability and schedule a fix accordingly.&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2015-08-15T17:17:18.535">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="EU-GDPR-ENCRYPT-PERSONAL-DATA" name="Encrypt personal data" issueId="" platform="" cost="0" risk="39" state="Recommended" owner="cnmarrow" library="CS-Default" source="RULES" edited="false">
          <desc>Implement encryption at rest (see guidance below) or give a risk-based explanation as to why encryption was not implemented.&lt;br /&gt;&lt;br /&gt;Use well-known encryption libraries, taking into account the data use, and do not invent your own. 
          &lt;br /&gt;
              &lt;ul&gt;
              &lt;li&gt;personal data must be encrypted&lt;/li&gt;
              &lt;li&gt;data that is not used by the application (e.g. passwords, ...) should be hashed so they cannot be recovered easily&lt;/li&gt;
              &lt;/ul&gt;
          </desc>
          <implementations/>
          <references>
            <reference name="EU GDPR - EU Data Protection" url="https://ec.europa.eu/justice/data-protection/reform/files/regulation_oj_en.pdf"/>
            <reference name="OWASP Proactive controls [C8]" url="https://www.owasp.org/images/b/bc/OWASP_Top_10_Proactive_Controls_V3.pdf"/>
          </references>
          <standards>
            <standard ref="2.4.12.2" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.12.2" supportedStandardRef="iotsf-class-2"/>
            <standard ref="8.3.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.3.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="Art.32" supportedStandardRef="EU-GDPR"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                &lt;ol&gt;
                &lt;li&gt;Verify that users' personal data processed by the application is encrypted at rest (e.g. databases).&lt;/li&gt;
                &lt;li&gt;If encryption is not being leveraged, verify that there is documentation outlining the reasoning for that decision.&lt;/li&gt;
                &lt;/ol&gt;
                &lt;/div&gt;
            </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-03-13T16:00:47.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-306-SERVICE" name="Require authentication before presenting restricted data" issueId="" platform="" cost="0" risk="44" state="Recommended" owner="cnmarrow" library="CS-Default" source="RULES" edited="false">
          <desc>&lt;p&gt;The application should ensure users have undergone an Identification and Verification (ID&amp;amp;V) process before allowing access to secret, sensitive or otherwise restricted data. For less sensitive but still restricted data, simple verification of the location of the user may suffice (e.g. IP restrictions).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;For non-sensitive but non-public data, access could be restricted by IP address, limiting access to internal networks, workstations, or gateways&lt;/li&gt;&lt;li&gt;For more sensitive data, TLS client-side certificates may be appropriate&lt;/li&gt;&lt;li&gt;Where secret or other sensitive data is handled, a full authentication process to identify and validate users with single or multi-factor authentication may be required&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="EU GDPR - EU Data Protection" url="https://ec.europa.eu/justice/data-protection/reform/files/regulation_oj_en.pdf"/>
            <reference name="OSA AC-14 Permitted Actions Without Identification Or Authentication" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/38-08_02_AC-14"/>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OSA SI-04 Information System Monitoring Tools And Techniques" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/42-08_02_SI-04"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
            <reference name="OWASP Juice Shop: Broken Authentication" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/broken-authentication.html"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="1.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AC-14" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-21" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-22" supportedStandardRef="NIST 800-53"/>
            <standard ref="Art.32" supportedStandardRef="EU-GDPR"/>
            <standard ref="DE.AE-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-5" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-6" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-7" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-5" supportedStandardRef="nist-csf"/>
            <standard ref="IA-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-2" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-8" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-1" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-3" supportedStandardRef="nist-csf"/>
            <standard ref="SI-12" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-4" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
            <standard ref="fedramp-high-baseline" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="fedramp-low-baseline" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="fedramp-moderate-baseline" supportedStandardRef="fedramp-moderate-baseline"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                &lt;li&gt;Identify which parts of the service present sensitive data.&amp;nbsp;&lt;/li&gt;
                &lt;li&gt;Try to obtain access to this information without any type of authentication, for example, attempt to navigate directly to URLs that present sensitive data.&lt;/li&gt;
                &lt;/ol&gt;
            </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2015-08-15T17:17:14.585">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="RESTRICT-SERVICE" name="Restrict access to the service at the network layer to reduce exposure" issueId="" platform="" cost="1" risk="73" state="Recommended" owner="cnmarrow" library="CS-Default" source="RULES" edited="false">
          <desc>&lt;p&gt;Access to services should be restricted to expected sources, limiting the exposure of the service and its attack surface; and the likelihood of a malicious actor gaining access to the system.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;Apply network layer security controls so that only the necessary and expected IP addresses are permitted access to connect to the service.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Juice Shop: Broken Authentication" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/broken-authentication.html"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://bkimminich.gitbooks.io/pwning-owasp-juice-shop/content/part2/insecure-deserialization.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.4.7.18" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.7.18" supportedStandardRef="iotsf-class-2"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API1:2019-Broken Object Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check that the network access to the service is only allowed for the components which need it.&lt;/li&gt; 
 &lt;li&gt;There should be a firewall protecting the network segment in which the service is installed.&lt;/li&gt; 
 &lt;li&gt;Check that the firewall restricts all access and only permits the minimum connections required using the principal of least privilege.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-03-13T16:00:43.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="ACCESS SERVICE" name="Access service" desc="" library="CS-Default">
          <threats>
            <threat ref="VULN-SERVICE" name="Attackers gain access to unauthorised data by exploiting vulnerabilities in the service" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="CS-Default" editable="true">
              <desc>Attackers exploit vulnerabilities in the service and gain access to data, or to
                                services for which they are not authorized.
                            </desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="PATCH-SERVICE" mitigation="50"/>
                    <countermeasure ref="RESTRICT-SERVICE" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="PATCH-SERVICE" mitigation="50"/>
                <countermeasure ref="RESTRICT-SERVICE" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="CAPEC-115" name="Authentication Bypass" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An attacker gains access to the application, service, or device with the privileges of an authorized or privileged user by evading - or circumventing - an authentication mechanism. The attacker is therefore able to access protected data without authentication ever having taken place. This refers to an attacker gaining access equivalent to an authenticated user without ever going through an authentication procedure. &lt;/p&gt; This is usually the result of the attacker using an unexpected access procedure that does not go through the proper checkpoints where authentication should occur. For example, a web site might assume that all users will click through a given link in order to access secure material and simply authenticate everyone that clicks the link. However, an attacker might be able to reach secured web content by explicitly entering the path to the content rather than clicking through the authentication link, thereby avoiding the check entirely. This attack pattern differs from other authentication attacks in that attacks of this pattern avoid authentication entirely, rather than faking authentication by exploiting flaws or by stealing credentials from legitimate users.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-306">
                  <countermeasures>
                    <countermeasure ref="CWE-306-SERVICE" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-306-SERVICE" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="EU-GDPR-DATA_LEAKAGE-UNAUTHZ-PARTIES" name="Data leakage or disclosure to unauthorized parties" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An unauthorized party might access/breach the personal data of a data subject.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="EU-GDPR-MISSING-ENCRYPTION-SENSITIVE-DATA">
                  <countermeasures>
                    <countermeasure ref="EU-GDPR-ENCRYPT-PERSONAL-DATA" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="EU-GDPR-ENCRYPT-PERSONAL-DATA" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="authentication" name="Authentication" desc="" library="CS-Default">
          <threats>
            <threat ref="AUTH-DATASTORE-LEAST-PRIV" name="Attackers who compromise the application or application server could directly access and modify the data store" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="CS-Default" editable="true">
              <desc>If attackers gain access to the application or the application server, then they could
                                directly access the data store using the privilege assigned to the application.
                                &lt;div&gt;
                                If the data store user account used by the application has elevated privileges then this
                                could allow attackers to perform unauthorized operations such as dropping tables,
                                modifying the database schema or modifying data.
                                &lt;/div&gt;
                            </desc>
              <riskRating confidentiality="1" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-250">
                  <countermeasures>
                    <countermeasure ref="RESTRICT-ACCESS-DATABASE" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="RESTRICT-ACCESS-DATABASE" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="f12c27e0-267a-4af5-becb-6c1bbd47abe4" diagramComponentId="f2bcdce0-4602-48e7-a041-9884bb2b6919" ref="fc0620de-795a-49fe-84ed-4ca86ae86bed" name="HMI,GUI,Display" desc="" library="" parentComponentRef="" componentDefinitionRef="hmi-gui-display">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="iec62443-sl2"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-300" name="Channel Accessible by Non-Endpoint ('Man-in-the-Middle')" state="0" impact="100" issueId="">
          <desc>The product does not adequately verify the identity of actors at both ends of a communication channel, or does not adequately ensure the integrity of the channel, in a way that allows the channel to be accessed or influenced by an actor that is not an endpoint.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-284" name="Improper Access Control" state="0" impact="100" issueId="">
          <desc>The software does not restrict or incorrectly restricts access to a resource from an unauthorized actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-287" name="Improper Authentication" state="0" impact="100" issueId="">
          <desc>When an actor claims to have a given identity, the software does not prove or insufficiently proves that the claim is correct.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-94" name="Improper Control of Generation of Code ('Code Injection')" state="0" impact="100" issueId="">
          <desc>The software constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behaviour of the intended code segment.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-20" name="Improper Input Validation" state="0" impact="100" issueId="">
          <desc>The product does not validate or incorrectly validates input that can affect the control flow or data flow of a program.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-79" name="Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')" state="0" impact="100" issueId="">
          <desc>The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-147" name="Improper Neutralization of Input Terminators" state="0" impact="100" issueId="">
          <desc>The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as input terminators when they are sent to a downstream component.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-117" name="Improper Output Neutralization for Logs" state="0" impact="100" issueId="">
          <desc>The software does not neutralize or incorrectly neutralizes output that is written to logs.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-307" name="Improper Restriction of Excessive Authentication Attempts" state="0" impact="100" issueId="">
          <desc>The software does not implement sufficient measures to prevent multiple failed authentication attempts within in a short time frame, making it more susceptible to brute force attacks.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-354" name="Improper Validation of Integrity Check Value" state="0" impact="100" issueId="">
          <desc>The software does not validate or incorrectly validates the integrity check values or "checksums" of a message. This may prevent it from detecting if the data has been modified or corrupted in transmission.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-347" name="Improper Verification of Cryptographic Signature" state="0" impact="100" issueId="">
          <desc>The software does not verify, or incorrectly verifies, the cryptographic signature for data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-326" name="Inadequate Encryption Strength" state="0" impact="100" issueId="">
          <desc>The software stores or transmits sensitive data using an encryption scheme that is theoretically sound, but is not strong enough for the level of protection required.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-532" name="Inclusion of Sensitive Information in Log Files" state="0" impact="100" issueId="">
          <desc>Information written to log files can be of a sensitive nature and give valuable guidance to an attacker or expose sensitive user information.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-732" name="Incorrect Permission Assignment for Critical Resource" state="0" impact="100" issueId="">
          <desc>The software specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-286" name="Incorrect User Management" state="0" impact="100" issueId="">
          <desc>The software does not properly manage a user within its environment.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-209" name="Information Exposure Through an Error Message" state="0" impact="100" issueId="">
          <desc>The software generates an error message that includes sensitive information about its environment, users, or associated data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-1100" name="Insufficient Isolation of System-Dependent Functions" state="0" impact="100" issueId="">
          <desc>The product or code does not isolate system-dependent
					functionality into separate stand-alone modules.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="">
          <desc>When a security-critical event occurs, the software either does not record the event or omits important details about the event when logging it.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-522" name="Insufficiently Protected Credentials" state="0" impact="100" issueId="">
          <desc>This weakness occurs when the application transmits or stores authentication credentials and uses an insecure method that is susceptible to unauthorized interception and/or retrieval.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-5" name="J2EE Misconfiguration: Data Transmission Without Encryption" state="0" impact="100" issueId="">
          <desc>Information sent over a network can be compromised while in transit. An attacker may be able to read or modify the contents if the data are sent in plaintext or are weakly encrypted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-322" name="Key Exchange without Entity Authentication" state="0" impact="100" issueId="">
          <desc>The software performs a key exchange with an actor without verifying the identity of that actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-311" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="">
          <desc>The software does not encrypt sensitive or critical information before storage or transmission.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-636" name="Not Failing Securely ('Failing Open')" state="0" impact="100" issueId="">
          <desc>When the product encounters an error condition or failure, its design requires it to fall back to a state that is less secure than other options that are available, such as selecting the weakest encryption algorithm or using the most permissive access control restrictions.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-672" name="Operation on a Resource after Expiration or Release" state="0" impact="100" issueId="">
          <desc>The software uses, accesses, or otherwise operates on a resource after that resource has been expired, released, or revoked.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-693" name="Protection Mechanism Failure" state="0" impact="100" issueId="">
          <desc>The product does not use or incorrectly uses a protection mechanism that provides sufficient defence against directed attacks against the product.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-384" name="Session Fixation" state="0" impact="100" issueId="">
          <desc>Authenticating a user, or otherwise establishing a new user session, without invalidating any existing session identifier gives an attacker the opportunity to steal authenticated sessions.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-507" name="Trojan Horse" state="0" impact="100" issueId="">
          <desc>The software appears to contain benign or useful functionality, but it also contains code that is hidden from normal operation that violates the intended security policy of the user or the system administrator.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-400" name="Uncontrolled Resource Consumption" state="0" impact="100" issueId="">
          <desc>The software does not properly control the allocation and maintenance of a limited resource thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-601" name="URL Redirection to Untrusted Site ('Open Redirect')" state="0" impact="100" issueId="">
          <desc>A web application accepts a user-controlled input that specifies a link to an external site, and uses that link in a Redirect. This simplifies phishing attacks.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-798" name="Use of Hard-coded Credentials" state="0" impact="100" issueId="">
          <desc>The software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-916" name="Use of Password Hash With Insufficient Computational Effort" state="0" impact="100" issueId="">
          <desc>The software generates a hash for a password, but it uses a scheme that does not provide a sufficient level of computational effort that would make password cracking attacks infeasible or expensive.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-261" name="Weak Cryptography for Passwords" state="0" impact="100" issueId="">
          <desc>Obscuring a password with a trivial encoding does not protect the password.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-521" name="Weak Password Requirements" state="0" impact="100" issueId="">
          <desc>The product does not require that users should have strong passwords, which makes it easier for attackers to compromise user accounts.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-123" name="Write-what-where Condition" state="0" impact="100" issueId="">
          <desc>Any condition where the attacker has the ability to write an arbitrary value to an arbitrary location, often as the result of a buffer overflow.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="protect_audit_info_logs_tools" name="Assets shall protect audit information, audit logs, and audit tools (if present) from unauthorized access, modification and deletion." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. the storage of audit information to hardware-enforced write-once media.
2. Access Management Process</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.11" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_auth_all_users_based_on_resp" name="Assets shall provide an authorization enforcement mechanism for all identified and authenticated users based on their assigned responsibilities." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. On all interfaces, the control system shall provide the capability to enforce authorizations assigned to all users (humans, software processes and devices) for controlling use of the control system to support segregation of duties and least privilege.
2. Authorization is granting of permissions based on authentication. 
3.All authorization decisions should be made on the server, not the client.  
4. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
5. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
6. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
7. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
8. Server side implementation and presentation layer representations of access control rules must match. 
9. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
10. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
11. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="auth_humans_tools_audit_logs" name="Assets shall provide the capability for authorized humans and/or tools to access audit logs on a read-only basis." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Access Control - Authorize members
2. Least Privilege &amp; Need to Know Basis
3. Review of access </desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="config_according_to_recommended_netw_and_security" name="Assets shall provide the capability to be configured according to recommended network and security configurations as described in guidelines provided by the asset supplier. The asset shall provide an interface to the currently deployed network and security configuration settings." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Devices with network connectivity are capable of being updated from the network.
2. provide the capability to generate a report listing the currently deployed security settings in a machine-readable format.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="continuous_monitor_accepted_sec" name="Assets shall provide the capability to be continuously monitored using commonly accepted security industry practices and recommendations to detect, characterize and report security breaches in a timely manner." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Control system monitoring capability can be achieved through a variety of tools and
techniques (for example, IDS, IPS, malicious code protection mechanisms and network monitoring mechanisms).
2. Monitoring devices should be strategically deployed within the control system (for example, at
selected perimeter locations and near server farms supporting critical applications) to collect
essential information. Monitoring mechanisms may also be deployed at ad hoc locations
within the control system to track specific transactions
3. SIEM Implementation</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="cap_to_be_recovered_to_known_secure_state" name="Assets shall provide the capability to be recovered and reconstituted to a known secure state after a disruption or failure." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Control system recovery and reconstitution to a known secure state means that all system
parameters (either default or configurable) are set to secure values, security-critical patches
are reinstalled, security-related configuration settings are reestablished, system documentation and operating procedures are available, application and system software is reinstalled and configured with secure settings, information from the most recent, known secure backups is loaded and the system is fully tested and functional.
1. Roll back procedure.
2. Secure storage of previous version</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_for_audit_records" name="Assets shall provide the capability to create timestamps (including date and time) for use in audit records." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Timestamps (including date and time) of audit records should be generated using internal
system clocks.
1. provide timestamps for use in audit record generation.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" name="Assets shall provide the capability to create timestamps that are synchronized with a system wide time source." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>to synchronize internal system clocks at a configurable frequency.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="explicit_read_auth_protect_conf_info" name="Assets shall provide the capability to erase all information, for which explicit read authorization is supported, from assets to be released from active service and/or decommissioned." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Removal of a control system component from active service should not provide the
opportunity for unintentional release of information for which explicit read authorization is
supported.
1. Information produced by the actions of a user or role (or the actions of a software process
acting on behalf of a user or role) should not be disclosed to a different user or role in an
uncontrolled fashion.
2. Purging of all information from volatile memory, active service or decommissioned system.
3. Ensure purging successfully occurs
NOTE Volatile memory resources are those that typically do not retain information after being released to memory management. However, there are attacks against random access memory (RAM) that have the potential to extract key material or other confidential data before it is actually over-written. Therefore, it is a commonly accepted practice to purge all unique data and connections to unique data from volatile shared memory when that memory is released back to the control system for use by a different user, such that this data is not visible or accessible to the new user.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="limit_rsrc_by_sec" name="Assets shall provide the capability to limit the use of resources by security functions to protect against resource exhaustion." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Resource management (for example, network segmentation or priority schemes) prevents a
lower-priority software process from delaying or interfering with the control system servicing
any higher-priority software process.
1. initiating network scans, patching and/or antivirus checks on an operating system.
2. Traffic rate limiting schemes should be considered as a mitigation technique.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="maintain_essential_functions" name="Assets shall provide the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>provide the capability to manage communication loads (such as
using rate limiting) to mitigate the effects of information flooding types of DoS events.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="support_auth_check_on_software_config" name="Assets shall provide the capability to perform or support authenticity checks on software, configuration and other information as well as the recording and reporting of the results of these checks or be integrated into a system that can perform or support authenticity checks." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Integrity verification methods are employed to detect, record, report and protect against software and information tampering.
1. cryptographic hashes
2. Notification of unauthorize changes
Integrity verification methods are employed to detect, record, report and protect against software and information tampering that may occur if other protection mechanisms (such as authorization enforcement) have been circumvented. The control system should employ formal or recommended integrity mechanisms (such as cryptographic hashes).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="integrity_check_software" name="Assets shall provide the capability to perform or support integrity checks on software, configuration and other information as well as the recording and reporting of the results of these checks or be integrated into a system that can perform or support integrity checks." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Integrity verification methods are employed to detect, record, report and protect against software and information tampering.
1. cryptographic hashes
2. Notification of unauthorize changes
Integrity verification methods are employed to detect, record, report and protect against software and information tampering that may occur if other protection mechanisms (such as authorization enforcement) have been circumvented. The control system should employ formal or recommended integrity mechanisms (such as cryptographic hashes).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_critical_long_lived_symmetric_keys" name="Assets shall provide the capability to protect critical, long lived symmetric keys via hardware mechanisms." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. establish the mutual trust using the symmetric key; store securely the shared secret (the authentication is valid as long as the shared secret remains secret); restrict access to the shared secret; ensure that the algorithms and keys used for the symmetric key authentication</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.16" supportedStandardRef="iec-62443-4-2:2019"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" name="Assets shall provide the capability to specifically restrict the use of unnecessary functions, ports, protocols and/or services." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc> 1. capability to specifically prohibit and/or restrict the use of unnecessary functions, ports, protocols and/or services.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="validate_syntax_length_content_of_any_input" name="Assets shall validate the syntax, length and content of any input data that is used as an industrial process control input or input via external interfaces that directly impacts the action of the asset." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. input data validation include out-of-range values for a defined field type, invalid characters in data fields, missing or incomplete data and buffer overflow.
2. SAST &amp; DAST
3. Data from external sources are sanitized based on acceptable formats and lengths.  It is preferred to use white listing, over black listing.
4. Data is validated when crossing API boundaries</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="phys_logical_connect_to_automation_process" name="Assets that physically or logically connect to an automation process shall provide the capability to set outputs to a predetermined state if normal operation as defined by the asset supplier cannot be maintained." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. The appropriate predetermined state of control system outputs is application dependent and could be one of the following user configurable options:
• Unpowered – the outputs fail to the unpowered state
• Hold – the outputs fail to the last-known good value
• Fixed – the outputs fail to a fixed value that is determined by the asset owner or an
application
2. All user supplied data is encoded prior to output. (i.e.. Html encoding, special character encoding).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_pw_policy_enforce" name="For assets utilizing password-based authentication, the asset shall provide the capability to enforce configurable password strength based on minimum length and variety of character types. " issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.
Note: A service should employ one or more tactics to prevent or at least slow down a brute force attack, including: blacklisting an IP after 5 unsuccessful attempts, slowing down attempts with increasing timeout delays introduced after 5 unsuccessful attempts, locking out non-admin accounts after 3 unsuccessful attempts.  The account must be disabled for a period of time sufficient to discourage brute force guessing of credentials, but not so long as to allow for a denial-of-service attack to be performed.  Allow non-admin users to reset their own passwords to prevent administrative burden.  If users are allowed to reset their password, best practice is to email a new password to the users email account and require a reset upon next logon.  It is not best practice to simply reset and display the new password on the authentication screen as an attacker may trigger that reset and change the password without notice to the user.  If using a screen reveal of password, should be accompanied by both a known secret of user, such as mothers maiden name and also an email to notify the user of such a change.  Temporary passwords and links should have a short expiration time.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_id_and_auth_for_human_users" name="Identify and authenticate all human users" issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. passwords, tokens, biometrics, Certificates, geographic location
2. role-based or group-based
3. should be applied to both local and remote access to the control system.
4. Least Privilege 
5. Segregation of Duties
6. Authentication types (factors): (1) something you know (a secret) -like username and password; (2) something you have - such as a token device or smart phone; and (3) something you are - such as biometrics. 
7. On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.
8.  services should run as non-root accounts or use SUID accounts that release privilege after service start.  Non-root accounts used for services should not have a shell enabled, i.e. /dev/null should be shell in passwd file.  In cases where the application must run with elevated privileges, raise privileges as late as possible, and drop them as soon as possible.  For windows based services, it is preferred to run the service as SYSTEM, instead of an administrator account, which would have credentials which may be guessed and used in an attack.
9. Authorization is granting of permissions based on authentication. 
10.All authorization decisions should be made on the server, not the client.  
11. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
12. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
13. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
14. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
15. Server side implementation and presentation layer representations of access control rules must match. 
16. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
17. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
18. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources
Note: system level forms of identification, such as IP or MAC address are easily spoofable and therefore do not qualify as a valid form of authentication. Establish and utilize standard, tested, authentication services whenever possible. Use a centralized implementation for all authentication controls, including libraries that call external authentication services. Segregate authentication logic from the resource being requested and use redirection to and from the centralized authentication control.  All authentication controls should fail securely. Enforce password complexity requirements established by policy or regulation. Authentication credentials should be sufficient to withstand attacks that are typical of the threats in the deployed environment. (e.g., requiring the use of alphabetic as well as numeric and/or special characters). Enforce password length requirements established by policy or regulation. Eight characters is commonly used, but 16 is better or consider the use of multi-word pass phrases. Password entry should be obscured on the user's screen. (e.g., on web forms use the input type "password")</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_human_user_interface_determine_user_took_action" name="If an asset provides a human user interface, the asset shall provide the capability to determine whether a given human user took a particular action. Control elements that are not able to support such capability shall be listed in component documents." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Examples of particular actions taken by a user include performing operator actions, changing
control system configurations, creating information, sending a message, approving
information (such as indicating concurrence) and receiving a message.
1. digital signatures, digital message receipts and timestamps</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.14" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="terminate_remote_session_auto_or_manual" name="If an asset supports remote sessions, the asset shall provide the capability to terminate a remote session either automatically after a configurable time period of inactivity, manually by a local authority, or manually by the user (human, software process or device) who initiated the session." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Terminate a remote session either automatically after a configurable time period of inactivity, manually by a local authority, or manually by the user (human, software process or device) who initiated the session.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" name="If an asset supports usage through wireless interfaces it shall provide the capability to integrate into the asset that supports usage authorization, monitoring and restrictions according to commonly accepted industry practices." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>provide the capability to authorize, monitor and enforce usage restrictions for wireless connectivity to the control system.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="user_crypto_algs" name="If cryptography is required, the asset shall use cryptographic algorithms, key sizes and mechanisms for key establishment and management according to commonly accepted security industry practices and recommendations." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. document the practices and procedures relating to cryptographic key establishment and management.
2. utilize established and tested encryption and hash algorithms, such as the advanced
encryption standard (AES) and the secure hash algorithm (SHA) series, and key sizes based
on an assigned standard.
3. Key generation needs to be performed using an effective random number generator.
4. The security policies and procedures for key management need to address
periodic key changes, key destruction, key distribution and encryption key backup in
accordance with defined standards</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_acc_mgmt_for_auth_users" name="Provide support of management of all accounts by authorized users" issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. individual, role-based, device-based, Service &amp;  default account management Policy.
2. Review of accounts.
3. Approvals for creating, disabling, removing or modifying accounts.
4.  On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="allocate_sufficient_audit_record_storage" name="The asset shall allocate sufficient audit record storage capacity according to commonly recognized recommendations for log management and system configuration. The asset shall provide auditing mechanisms to reduce the likelihood of such capacity being exceeded." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>The control system shall allocate sufficient audit record storage capacity according to
commonly recognized recommendations for log management and system configuration. The
control system shall provide auditing mechanisms to reduce the likelihood of such capacity
being exceeded</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.11" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="id_and_handle_error_conditions" name="The asset shall identify and handle error conditions in a manner such that effective remediation can occur. This shall be done in a manner which does not provide information that could be exploited by adversaries to attack the IACS unless revealing this information is necessary for the timely troubleshooting of problems." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Error messages generated by the control system should provide timely and useful information without revealing potentially harmful information.
2. Vulnerability Assessment &amp; Penetration Testing</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_auth_based_on_role_leas_priv" name="The asset shall provide authorization enforcement for all users based on their assigned responsibilities and least privilege" issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. enforce authorizations assigned to all human users.
2. Use control policies (for example, identity-based policies, role-based policies and rule-based policies) and associated read/write access enforcement mechanisms (for example, access control lists, access control matrices and cryptography).
2. check which roles are assigned to a verified user or asset and which privileges are assigned to these roles – if the requested operation is covered by the permissions, it is executed, otherwise rejected. Only qualified and authorized individuals should obtain the use of control system components for purposes of initiating changes, including upgrades and modifications. Authorization is granting of permissions based on authentication. 
3.All authorization decisions should be made on the server, not the client.  
4. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
5. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
6. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
7. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
8. Server side implementation and presentation layer representations of access control rules must match. 
9. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
10. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
11. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="role_to_define_and_modify_perm_mapping" name="The asset shall provide directly or through a compensating security mechanism, for an authorized role to define and modify the mapping of permissions to roles for all human users" issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>The control system shall provide the capability for an authorized user or role to define and
modify the mapping of permissions to roles for all human users.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="alert_personnel_prevent_svc_loss" name="The asset shall provide the capability to alert personnel and prevent the loss of essential services and functions in the event of an audit processing failure. The control system shall provide the capability to support appropriate actions in response to an audit processing failure according to commonly accepted industry practices and recommendations. " issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Audit generation typically occurs at the source of the event. Audit processing involves
transmission, possible augmentation (such as the addition of a timestamp) and persistent
storage of the audit records. Audit processing failures include, for example, software or
hardware errors, failures in the audit capturing mechanisms and audit storage capacity being
reached or exceeded
1.capability to alert personnel and prevent the loss of essential services and functions in the event of an audit processing failure.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.12" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_config_usage_restriction" name="The asset shall provide the capability to automatically enforce configurable usage restrictions" issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Authenticate &amp; Authorize devices before allowing connection.
2. Digital+E46 Signatures</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="deny_access_via_untrusted_netw_unless_approved" name="The asset shall provide the capability to deny access requests via untrusted networks unless approved by an assigned role." issueId="" platform="" cost="0" risk="83" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.15" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="deny_netw_traffic_allow_netw_traffic_exceptions" name="The asset shall provide the capability to deny network traffic by default and allow network traffic by exception (also termed deny all, permit by exception)." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>deny network traffic by default and allow network traffic by exception (also termed deny all, permit by exception).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="show_sys_use_notification" name="The asset shall provide the capability to display a system use notification message before authenticating. The system use notification message shall be configurable by authorized personnel." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. display a system use notification message or warning banners before authenticating &amp; configurable by authorized personnel.
2. Privacy and security policies and procedures need to be consistent with applicable laws,
directives, policies, regulations, standards and guidance.
3. Examples of elements for inclusion in the system use notification message are:
a) that the individual is accessing a specific control system;
b) that system usage may be monitored, recorded and subject to audit;
c) that unauthorized use of the system is prohibited and subject to criminal and/or civil
penalties; and
d) that use of the system indicates consent to monitoring and recording</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.14" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="employ_cypto_mechs_to_recognize_changes" name="The asset shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="employ_maware_protection" name="The asset shall provide the capability to employ malicious code protection mechanisms at all entry and exit points." issueId="" platform="" cost="0" risk="83" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>prevent, detect, mitigate and report instances of detected malicious code (for example, viruses, worms, Trojan horses and spyware) transported by electronic mail, electronic mail attachments, Internet access, removable media (for example, universal serial bus (USB) devices, diskettes or compact disks), PDF documents, web services, network connections and infected laptops or other
common means.
1. Detection Technique  - binary integrity and attributes monitoring, hashing and signature techniques.
2.Mitigation technique - file cleaning, quarantining, file deletion, host communication restriction and IPSs
3. Prevention Technique - application blacklisting and whitelisting techniques, removable media control, sandbox techniques and specific computing platforms mechanisms such as restricted firmware update capabilities, No Execute (NX) bit, data execution prevention (DEP), address space layout randomization (ASLR), stack corruption detection and mandatory access controls.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" name="The asset shall provide the capability to employ protection mechanisms to prevent, detect, report and mitigate the effects of malicious code or unauthorized software. The asset shall provide the capability to update the protection mechanisms." issueId="" platform="" cost="0" risk="83" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>prevent, detect, mitigate and report instances of detected malicious code (for example, viruses, worms, Trojan horses and spyware) transported by electronic mail, electronic mail attachments, Internet access, removable media (for example, universal serial bus (USB) devices, diskettes or compact disks), PDF documents, web services, network connections and infected laptops or other
common means.
1. Detection Technique  - binary integrity and attributes monitoring, hashing and signature techniques.
2.Mitigation technique - file cleaning, quarantining, file deletion, host communication restriction and IPSs
3. Prevention Technique - application blacklisting and whitelisting techniques, removable media control, sandbox techniques and specific computing platforms mechanisms such as restricted firmware update capabilities, No Execute (NX) bit, data execution prevention (DEP), address space layout randomization (ASLR), stack corruption detection and mandatory access controls.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="limit_invalid_attempts" name="The asset shall provide the capability to enforce a limit of a configurable number of consecutive invalid access attempts by any user (human, software process or device) during a configurable time period. The asset shall provide the capability to deny access for a specified period of time or until unlocked by an administrator when this limit has been exceeded." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. limit of a configurable number of consecutive invalid access attempts by any user (human, software process or device).
2. As per Policy.
3. For all invalid authentication attempts, the server should simply respond "invalid attempt, please retry" or similarly vague statement that does not imply partial success.  
Note: A service should employ one or more tactics to prevent or at least slow down a brute force attack, including: blacklisting an IP after 5 unsuccessful attempts, slowing down attempts with increasing timeout delays introduced after 5 unsuccessful attempts, locking out non-admin accounts after 3 unsuccessful attempts.  The account must be disabled for a period of time sufficient to discourage brute force guessing of credentials, but not so long as to allow for a denial-of-service attack to be performed.  Allow non-admin users to reset their own passwords to prevent administrative burden.  If users are allowed to reset their password, best practice is to email a new password to the users email account and require a reset upon next logon.  It is not best practice to simply reset and display the new password on the authentication screen as an attacker may trigger that reset and change the password without notice to the user.  If using a screen reveal of password, should be accompanied by both a known secret of user, such as mothers maiden name and also an email to notify the user of such a change.  Temporary passwords and links should have a short expiration time.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="restrict_mobile_code" name="The asset shall provide the capability to enforce usage restrictions for mobile code technologies based on the potential to cause damage to the asset." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Mobile code technologies include, but are not limited to, Java, JavaScript, ActiveX, portable
document format (PDF), Postscript, Shockwave movies, Flash animations and VBScript.
1. The control system shall provide the capability to enforce usage restrictions for mobile code technologies based on the potential to cause damage to the control system that include:
a) preventing the execution of mobile code;
b) requiring proper authentication and authorization for origin of the code;
c) restricting mobile code transfer to/from the control system; and
d) monitoring the use of mobile code.
2. verify integrity of the mobile code before allowing code execution with HASH/Codesigning technique.
3. both the selection and use of mobile code installed on servers and
mobile code downloaded and executed.
4. prevent the development, acquisition or introduction of unacceptable mobile code within the control system. For example, mobile code exchanges may be disallowed directly with the
control system, but may be allowed in a controlled adjacent environment.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" name="The asset shall provide the capability to generate audit records relevant to security for the following categories: access control, request errors, operating system events, asset events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Generate audit records relevant to security for the following categories: access control, request errors, operating system events, control system events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" name="The asset shall provide the capability to identify and authenticate all software processes and devices. This capability shall enforce such identification and authentication on all interfaces which provide access to the asset to support least privilege in accordance with applicable security policies and procedures." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. identity bound to the physical device
2. passwords, tokens or location (physical or logical)
3. role-based, group-based or entity-based,
4. Combination of 1) something you know (a secret) -like username and password; (2) something you have - such as a token device or smart phone; and (3) something you are - such as biometrics. 
5. Assign identifiers that uniquely identify users/devices
a. E.g., employ a unique username-password combination for the user
b. Reasoning: This will prevent user 1 from spoofing as user 2. This is a concern for users with different levels of access.
6. Uniquely identify and authenticate users and devices
c. Multi-factor authentication
d. Use of authentication protocols that require no password/multifactor authentication: e.g., OAuth, OpenID, SAML</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_auth_init" name="The asset shall provide the capability to: initialize authenticator content; change all default authenticators upon asset installation; change/refresh all authenticators; protect all authenticators from unauthorized disclosure and modification when stored and transmitted." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>&gt; initialize authenticator content;
&gt; change all default authenticators upon control system installation;
&gt; change/refresh all authenticators; and
&gt; protect all authenticators from unauthorized disclosure and modification when stored and
transmitted
2.  tokens, symmetric keys, private keys (part of a public/private key pair), biometrics,
passwords, physical keys and key card
3. Human users should take reasonable measures to safeguard authenticators, including maintaining possession of their individual authenticators, not loaning or sharing authenticators with others and reporting lost or compromised authenticators immediately.
4. cryptographic protections such as encryption or hashing or by handshake protocols which do not require transmission of the password. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.
5. Lockout or loss of control due to security measures is not acceptable. If the control system is required to have a high level of availability, measures should be taken to maintain this high
level of availability (such as compensating physical countermeasures, duplicate keys and
supervisory override).
6. Complex strength of the authentication mechanism</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="logically_segment_control_system" name="The asset shall provide the capability to logically segment asset networks from non-asset networks and to logically segment critical asset networks from other asset networks." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Access from the control system to the World Wide Web should be clearly justified based on
control system operational requirements.
2. Logical Segmentation.
3. Physical Segmentation.
4. capability to provide network services to control system networks, critical or otherwise, without a connection to non-control system networks.
5. capability to logically and physically isolate critical control system networks from non-critical control system networks.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="mitigate_info_effects_flooding_types" name="The asset shall provide the capability to manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. boundary protection
2. restricting the information flow to be unidirectional outbound
3. manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events.
4. restrict the ability of all users (humans, software processes and devices) to cause DoS events which affect other control systems or networks.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="monitor_control_access_methods" name="The asset shall provide the capability to monitor and control all methods of access to the asset via untrusted networks." issueId="" platform="" cost="0" risk="83" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Examples of access to the control system via untrusted networks typically include remote
access methods (such as dial-up, broadband and wireless) as well as connections from a
company’s office (non-control system) network.
1. restrict access achieved through dial-up connections (for example, limiting dial-up access based upon the source of the request).
2. protect against unauthorized connections or subversion of authorized connections (for example, using virtual private network technology).
3. Access via untrusted networks to geographically remote control system component locations (for example, control centers and field locations) should only be enabled when necessary and authenticated.
4. Multifactor authentication for remote user access to the control system.
5. Use of VPNs &amp; Firewalls.
6. Monitoring &amp; Logging of Access for control systems.
7. deny access requests via untrusted networks unless approved by an assigned role.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.15" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="monitor_control_comms_zone_boundaries" name="The asset shall provide the capability to monitor and control communications at zone boundaries to enforce the compartmentalization defined in the risk-based zones and conduits model." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Any connections to external networks or other control systems should occur through managed
interfaces consisting of appropriate boundary protection devices (for example, proxies,
gateways, routers, firewalls, unidirectional gateways, guards and encrypted tunnels) arranged
in an effective architecture (for example, firewalls protecting application gateways residing in
a DMZ).
1. capability to deny network traffic by default and allow network traffic by exception (also termed deny all, permit by exception).
2. capability to prevent any communication through the control system boundary (also termed island mode).
3. The control system shall provide the capability to prevent any communication through the
control system boundary when there is an operational failure of the boundary protection
mechanisms (also termed fail close). This ‘fail close’ functionality shall be designed such that
it does not interfere with the operation of a SIS or other safety-related functions.
4. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="physically_segment_control_system" name="The asset shall provide the capability to physically segment asset networks from non-asset networks and to physically segment critical asset networks from non-critical asset networks." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="prevent_further_access_init_seslock" name="The asset shall provide the capability to prevent further access by initiating a session lock after a configurable time period of inactivity or by manual initiation. The session lock shall remain in effect until the human user who owns the session or another authorized human user re-establishes access using appropriate identification and authentication procedures." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. activate session lock mechanisms automatically after a configurable time period.
2. In some cases, session lock for control system operator workstations or nodes is not advised (for example, sessions which are required for immediate operator responses in emergency situations).
3. In situations where the control system cannot support session lock, the responsible entity should employ appropriate compensating countermeasures (for example, providing increased physical security, personnel security and auditing measures).
Note: Use the server or framework’s session management controls. The application should only recognize these session identifiers as valid. Session identifier creation must always be done on a trusted system (e.g., The server). Session management controls should use well vetted algorithms that ensure sufficiently random session identifiers. Set the domain and path for cookies containing authenticated session identifiers to an appropriately restricted value for the site. Logout functionality should fully terminate the associated session or connection. Logout functionality should be available from all pages protected by authorization. Establish a session inactivity timeout that is as short as possible, based on balancing risk and business functional requirements. In most cases it should be no more than several hours. Disallow persistent logins and enforce periodic session terminations, even when the session is active. Especially for applications supporting rich network connections or connecting to critical systems. Termination times should support business requirements and the user should receive sufficient notification to mitigate negative impacts. If a session was established before login, close that session and establish a new session after a successful login. Generate a new session identifier on any re-authentication. Do not allow concurrent logins with the same user ID. Supplement standard session management for sensitive server-side operations, like account management, by utilizing per-session strong random tokens or parameters. This method can be used to prevent Cross Site Request Forgery attacks. Supplement standard session management for highly sensitive or critical operations by utilizing per-request, as opposed to per-session, strong random tokens or parameters. Set the "secure" attribute for cookies transmitted over an TLS connection. Set cookies with the HttpOnly attribute, unless you specifically require client-side scripts within your application to read or set a cookie's value</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="prevent_general_purpose_person2person_msg" name="The asset shall provide the capability to prevent general purpose person-to-person messages from being received from users or systems external to the asset." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>General purpose person-to-person communications systems include but are not limited to:
email systems, forms of social media (Twitter, Facebook, picture galleries, etc.) or any
message systems that permit the transmission of any type of executable file.
1. restrictions and limiting data flow as described elsewhere in this standard to general purpose
person-to-person communication systems
2. restrict email or other messaging solutions that provide internal computer-to-external computer communications using outbound messages.
3. Users may not be given the ability to attach files or other information to these outbound-only messages at the time the messages are created by the system.
4. capability to prevent both transmission and receipt of general purpose person-to-person messages.
5. support partitioning of data, applications and services based on criticality to facilitate implementing a zoning model.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_conf_of_info_traversing_netw" name="The asset shall provide the capability to protect the confidentiality of information at rest and remote access sessions traversing an untrusted network." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_conf_of_info_at_rest_remote_access" name="The asset shall provide the capability to protect the confidentiality of information for which explicit read authorization is supported, whether at rest or in transit." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. physical means, compartmentalization or encryption.
2. configuring explicit read authorizations in the control system.
3. Digital Certificates.
4. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_integrity_of_sessions" name="The asset shall provide the capability to protect the integrity of sessions. The asset shall reject any usage of invalid session IDs." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Use of session integrity mechanisms can have a significant overhead and therefore their use should be considered in light of requirements for real-time communications.
2. capability to invalidate session IDs upon user logout or other session termination (including browser sessions).
3. generate a unique session ID for each session and treat all unexpected session IDs as invalid.
4. generate unique session IDs with commonly accepted sources of randomness.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_integrity_transmitted_info" name="The asset shall provide the capability to protect the integrity of transmitted information." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_relevant_priv_keys" name="The asset shall provide the capability to protect the relevant private keys via hardware mechanisms according to commonly accepted security industry practices and recommendations." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Follow All below Steps:
l) validate certificates by checking the validity of the signature of a given certificate;
m) validate certificates by constructing a certification path to an accepted CA or in the case of
self-signed certificates by deploying leaf certificates to all hosts which communicate with
the subject to which the certificate is issued;
n) validate certificates by checking a given certificate’s revocation status;
o) establish user (human, software process or device) control of the corresponding private
key; and
p) map the authenticated identity to a user (human, software process or device).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.11" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="report_current_list_of_installed_assets" name="The asset shall provide the capability to report the current list of installed assets and their associated properties." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Usage of component ID, capability and revision level.
2. Formal process of configuration management should be deployed to keep control of the
changes in the component inventory baseline
3. The system requires all default passwords and pass phrases to be changed in order to complete the setup, prior to being operational.  This includes SSID passphrases, default accounts, admin accounts, etc.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="partitioning_of_data_based_criticality" name="The asset shall provide the capability to support partitioning of data, applications and services based on criticality to facilitate implementing a zoning model." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>capability to support partitioning of data, applications and services based on criticality to facilitate implementing a zoning model.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_support_mgmt_id_by_user_group_role" name="The asset shall provide the capability to support the management of identifiers by user, group, role or asset interface." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Management of identifiers by group, role or  system interface.
2. Session ID, resource ID, secure cookie management policy.
3. On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.
NOTE: Use the server or framework’s session management controls. The application should only recognize these session identifiers as valid. Session identifier creation must always be done on a trusted system (e.g., The server). Session management controls should use well vetted algorithms that ensure sufficiently random session identifiers. Set the domain and path for cookies containing authenticated session identifiers to an appropriately restricted value for the site. Logout functionality should fully terminate the associated session or connection. Logout functionality should be available from all pages protected by authorization. Establish a session inactivity timeout that is as short as possible, based on balancing risk and business functional requirements. In most cases it should be no more than several hours. Disallow persistent logins and enforce periodic session terminations, even when the session is active. Especially for applications supporting rich network connections or connecting to critical systems. Termination times should support business requirements and the user should receive sufficient notification to mitigate negative impacts. If a session was established before login, close that session and establish a new session after a successful login. Generate a new session identifier on any re-authentication. Do not allow concurrent logins with the same user ID. Supplement standard session management for sensitive server-side operations, like account management, by utilizing per-session strong random tokens or parameters. This method can be used to prevent Cross Site Request Forgery attacks. Supplement standard session management for highly sensitive or critical operations by utilizing per-request, as opposed to per-session, strong random tokens or parameters. Set the "secure" attribute for cookies transmitted over an TLS connection. Set cookies with the HttpOnly attribute, unless you specifically require client-side scripts within your application to read or set a cookie's value
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="verify_intended_ops" name="The asset shall provide the capability to support verification of the intended operation of security functions and report when anomalies are discovered during FAT, SAT and scheduled maintenance. These security functions shall include all those necessary to support the security requirements specified in this standard." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Security verification functions include:
• Verification of antivirus measures by European Institute for Computer Antivirus Research
(EICAR) testing of the control system file system. Antivirus software should detect this and
appropriate incident handling procedures should be triggered.
• Verification of the identification, authentication and use control measures by attempting
access with an unauthorized account (for some functionality this could be automated).
• Verification of IDSs as a security control by including a rule in the IDS that triggers on
irregular, but known non-malicious traffic. The test could then be performed by introducing
traffic that triggers this rule and the appropriate IDS monitoring and incident handling
procedures.
• Confirmation that audit logging is occurring as required by security policies and
procedures and has not been disabled by an internal or external entity.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="switch_to_and_from_emergency_power_supply" name="The asset shall provide the capability to switch to and from an emergency power supply without affecting the existing security state or a documented degraded mode. " issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>There may be instances where compensating countermeasures such as physical door access
control or control system may be affected by loss of base power supply, in which case the emergency power supply should cover those associated systems.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="unique_id_human_users" name="The asset shall provide the capability to uniquely identify and authenticate all human users." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. passwords, tokens, biometrics, Certificates, geographic location
2. role-based or group-based
3. should be applied to both local and remote access to the control system.
4. Least Privilege 
5. Segregation of Duties
6. Authentication types (factors): (1) something you know (a secret) -like username and password; (2) something you have - such as a token device or smart phone; and (3) something you are - such as biometrics. 
7. On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.
8.  services should run as non-root accounts or use SUID accounts that release privilege after service start.  Non-root accounts used for services should not have a shell enabled, i.e. /dev/null should be shell in passwd file.  In cases where the application must run with elevated privileges, raise privileges as late as possible, and drop them as soon as possible.  For windows based services, it is preferred to run the service as SYSTEM, instead of an administrator account, which would have credentials which may be guessed and used in an attack.
9. Authorization is granting of permissions based on authentication. 
10.All authorization decisions should be made on the server, not the client.  
11. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
12. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
13. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
14. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
15. Server side implementation and presentation layer representations of access control rules must match. 
16. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
17. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
18. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources.
19. Assign identifiers that uniquely identify users/devices
a. E.g., employ a unique username-password combination for the user
b. Reasoning: This will prevent user 1 from spoofing as user 2. This is a concern for users with different levels of access.
20. Uniquely identify and authenticate users and devices
c. Multi-factor authentication
d. Use of authentication protocols that require no password/multifactor authentication: e.g., OAuth, OpenID, SAML
Note: system level forms of identification, such as IP or MAC address are easily spoofable and therefore do not qualify as a valid form of authentication. Establish and utilize standard, tested, authentication services whenever possible. Use a centralized implementation for all authentication controls, including libraries that call external authentication services. Segregate authentication logic from the resource being requested and use redirection to and from the centralized authentication control.  All authentication controls should fail securely. Enforce password complexity requirements established by policy or regulation. Authentication credentials should be sufficient to withstand attacks that are typical of the threats in the deployed environment. (e.g., requiring the use of alphabetic as well as numeric and/or special characters). Enforce password length requirements established by policy or regulation. Eight characters is commonly used, but 16 is better or consider the use of multi-word pass phrases. Password entry should be obscured on the user's screen. (e.g., on web forms use the input type "password")</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="validate_integrity_of_backup_info" name="The asset shall provide the capability to verify the reliability of backup mechanisms" issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>provide the capability to verify the reliability of backup mechanisms</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="id_auth_all_users_engaged_in_wireless_comms" name="The controls system shall provide the capability to identify and authenticate all users (humans, software processes or devices) engaged in wireless communication." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Identification of Wireless technologies include, but are not limited to, microwave, satellite, packet radio, Institute of Electrical and Electronics Engineers (IEEE) 802.11x, IEEE 802.15.4 (ZigBee,IEC 62591 – WirelessHART®, ISA-100.11a), IEEE 802.15.1 (Bluetooth), wireless LAN mobile routers, mobile phones with tethering and various infrared technologies.
1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="uniquely_id_auth_all_users_engaged_in_wireless_comms" name="The controls system shall provide the capability to uniquely identify and authenticate all users (humans, software processes or devices) engaged in wireless communication." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Identification of Wireless technologies include, but are not limited to, microwave, satellite, packet radio, Institute of Electrical and Electronics Engineers (IEEE) 802.11x, IEEE 802.15.4 (ZigBee,IEC 62591 – WirelessHART®, ISA-100.11a), IEEE 802.15.1 (Bluetooth), wireless LAN mobile routers, mobile phones with tethering and various infrared technologies.
1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_participate_in_sys_level_backup" name="The identity and location of critical files and the ability to conduct backups of user-level and system-level information (including system state information) shall be supported by the asset without affecting the normal plant operations." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. availability of up-to-date backups.
2. verify the reliability of backup mechanisms.
3. automate the backup function based on a configurable frequency.
4. Review of Failed Backups.
5. Centralize Backup, backup media.
6. Encrypted backup storage</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="obscure_auth_feedback" name="When an asset provides an authentication capability, the asset shall provide the capability to obscure feedback of authenticator information during the authentication process." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. obscure feedback of authentication information during the authentication process by displaying asterisks or other random characters when a human user types in a password obscures feedback of authentication information.
2. entry of wired equivalent privacy (WEP) keys, secure socket shell (SSH) token entry and
RSA one-time passwords.
3. not provide any hint as to the reason for the authentication failure, such as “unknown user name”.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.12" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="if_pki_can_use_best_practices" name="Where PKI is utilized, the asset shall provide the capability to operate a PKI according to commonly accepted best practices or obtain public key certificates from an existing PKI." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Obtain public key certificates from an existing PKI.
2. organization’s certificate policy
3. agency should issue public key certificates under an appropriate certificate policy or obtains public key certificates under an appropriate certificate policy from an approved service provider.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="common-sl2-cr1-1" name="SL2 - Common - CR1.1" desc="" library="">
          <threats>
            <threat ref="cr1-1-auth_access_token_exploit" name="An adversary exploits a weakness in authentication to create an access token to associate a process/thread" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-287">
                  <countermeasures>
                    <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                    <countermeasure ref="unique_id_human_users" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                <countermeasure ref="unique_id_human_users" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-1-unauth_human_sys_access" name="Unauthorized human access to the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                    <countermeasure ref="unique_id_human_users" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                <countermeasure ref="unique_id_human_users" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-1-unid-sys-user" name="Unidentified user of the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="50" availability="25" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-286">
                  <countermeasures>
                    <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                    <countermeasure ref="unique_id_human_users" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                <countermeasure ref="unique_id_human_users" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-10" name="SL2 - Common - CR1.10" desc="" library="">
          <threats>
            <threat ref="cr1-10-adv_auth_feedback" name="An adversary receives authenticator feedback which helps him in user enumeration. E.g. invalid username. Invalid password." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-209">
                  <countermeasures>
                    <countermeasure ref="obscure_auth_feedback" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="obscure_auth_feedback" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-11" name="SL2 - Common - CR1.11" desc="" library="">
          <threats>
            <threat ref="cr1-11-adv_bruteforce_auth_creds" name="And adversary can bruteforce authentication credentials" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-522">
                  <countermeasures>
                    <countermeasure ref="limit_invalid_attempts" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="limit_invalid_attempts" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-12" name="SL2 - Common - CR1.12" desc="" library="">
          <threats>
            <threat ref="cr1-12-adv_no_motd" name="Adversaries who compromised the asset can dispute there was no message stating access was only for authorized personnel" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="show_sys_use_notification" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="show_sys_use_notification" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-13" name="SL2 - Common - CR1.13" desc="" library="">
          <threats>
            <threat ref="cr1-13-adv_access_untrusted_netw" name="An adversary accesses the asset via an untrusted network" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="75" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="deny_access_via_untrusted_netw_unless_approved" mitigation="50"/>
                    <countermeasure ref="monitor_control_access_methods" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="deny_access_via_untrusted_netw_unless_approved" mitigation="50"/>
                <countermeasure ref="monitor_control_access_methods" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-14" name="SL2 - Common - CR1.14" desc="" library="">
          <threats>
            <threat ref="cr1-14-rogue_employee_abuse_key" name="A rogue employee has unfettered access to a key and might use it for a malicious purpose or pass it onto someone else to the same end." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-322">
                  <countermeasures>
                    <countermeasure ref="protect_critical_long_lived_symmetric_keys" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_critical_long_lived_symmetric_keys" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-2" name="SL2 - Common - CR1.2" desc="" library="">
          <threats>
            <threat ref="cr1-2-unid_sys_backdoor" name="Unidentified backdoor plugged in the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-2-unid_softw_arb_code_exec" name="Unidentified software that executes arbitrary code" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-123">
                  <countermeasures>
                    <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-3" name="SL2 - Common - CR1.3" desc="" library="">
          <threats>
            <threat ref="cr1-3-adv_get_netw_info" name="An adversary that has previously obtained unauthorized access to certain device resources, uses that access to obtain information such as location and network information" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="provide_acc_mgmt_for_auth_users" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_acc_mgmt_for_auth_users" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-4" name="SL2 - Common - CR1.4" desc="" library="">
          <threats>
            <threat ref="cr1-4-adv_guess_trusted_id" name="An adversary guesses, obtains, or &quot;rides&quot; a trusted identifier (e.g. session ID, resource ID, cookie, etc.) to perform authorized actions under the guise of an authenticated user or service." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-384">
                  <countermeasures>
                    <countermeasure ref="provide_support_mgmt_id_by_user_group_role" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_support_mgmt_id_by_user_group_role" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-5" name="SL2 - Common - CR1.5" desc="" library="">
          <threats>
            <threat ref="cr1-5-adv_guess_default_pw" name="An adversary guesses the default password and user of an authenticator (e.g. admin:admin)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-521">
                  <countermeasures>
                    <countermeasure ref="provide_auth_init" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_auth_init" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-5-adv_retrieve_unencrypted_pw" name="An adversary is able to retrieve unencrypted passwords after a DBMS/DB -server breach" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-261">
                  <countermeasures>
                    <countermeasure ref="provide_auth_init" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_auth_init" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-6" name="SL2 - Common - CR1.6" desc="" library="">
          <threats>
            <threat ref="cr1-6-adv_rogue_dev_mitm" name="An adversary can plant a rogue device to perform man-in-the-middle attacks" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
                    <countermeasure ref="uniquely_id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
                <countermeasure ref="uniquely_id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-7" name="SL2 - Common - CR1.7" desc="" library="">
          <threats>
            <threat ref="cr1-7-adv_bruteforce_pw" name="An adversary is able to brute force the password" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-307">
                  <countermeasures>
                    <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-7-adv_guess_pw" name="An adversary is able to guess the password based on identifying an authenticator" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-521">
                  <countermeasures>
                    <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-8" name="SL2 - Common - CR1.8" desc="" library="">
          <threats>
            <threat ref="cr1-8-adv_imposter_signed" name=" An attacker generates a message or datablock that causes the recipient to believe that the message or datablock was generated and cryptographically signed by an authoritative or reputable source, misleading a victim or victim operating system into performing malicious actions" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-347">
                  <countermeasures>
                    <countermeasure ref="if_pki_can_use_best_practices" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="if_pki_can_use_best_practices" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-9" name="SL2 - Common - CR1.9" desc="" library="">
          <threats>
            <threat ref="cr1-9-adv_gen_certificate" name="An adversary exploits a weakness resulting from using a hashing algorithm with weak collision resistance to generate a certificate signing request (CSR) that contains collision blocks in the &quot;to be signed&quot; part" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-916">
                  <countermeasures>
                    <countermeasure ref="protect_relevant_priv_keys" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_relevant_priv_keys" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-1" name="SL2 - Common - CR2.1" desc="" library="">
          <threats>
            <threat ref="cr2-1-adv_connect_with_compromised_acc_make_changes" name="An adversary is able to connect to the asset with a compromised account and is able to make changes to all content available on the asset. (no roles)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_auth_all_users_based_on_resp" mitigation="34"/>
                    <countermeasure ref="enforce_auth_based_on_role_leas_priv" mitigation="33"/>
                    <countermeasure ref="role_to_define_and_modify_perm_mapping" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_auth_all_users_based_on_resp" mitigation="34"/>
                <countermeasure ref="enforce_auth_based_on_role_leas_priv" mitigation="33"/>
                <countermeasure ref="role_to_define_and_modify_perm_mapping" mitigation="33"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-10" name="SL2 - Common - CR2.10" desc="" library="">
          <threats>
            <threat ref="cr2-10-a_system_user_admin_is_not_notified_when_there_is_an_error_logging_the_system" name="A system user admin is not notified when there is an error logging the asset. Adversaries can use this by making the logging of the asset prone to errors by introducing a bug in the process. Now adversaries can compromise the system without it being logged." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="75" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="alert_personnel_prevent_svc_loss" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="alert_personnel_prevent_svc_loss" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-11" name="SL2 - Common - CR2.11" desc="" library="">
          <threats>
            <threat ref="cr2-11-an_adversary_compromises_a_system_without_knowing_when_he_compromised_it" name="An adversary compromises a system without knowing when he compromised it." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                    <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-12" name="SL2 - Common - CR2.12" desc="" library="">
          <threats>
            <threat ref="cr2-12-an_adversary_compromised_the_system_not_knowing_from_where_he_compromised_the_system" name="An adversary compromised the asset, not knowing from where he compromised the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="provide_human_user_interface_determine_user_took_action" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_human_user_interface_determine_user_took_action" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-2" name="SL2 - Common - CR2.2" desc="" library="">
          <threats>
            <threat ref="cr2-2-adv_wifi_access" name="An adversary is able to get access to the asset via wireless protocols without authorization" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-3" name="SL2 - Common - CR2.3" desc="" library="">
          <threats>
            <threat ref="cr2-3-adv_portable_dev_access" name="An adversary can access the asset using a portable device" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_config_usage_restriction" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_config_usage_restriction" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-4" name="SL2 - Common - CR2.4" desc="" library="">
          <threats>
            <threat ref="cr2-4-an_adversary_can_execute_remote_code" name="An adversary can execute remote code" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-94">
                  <countermeasures>
                    <countermeasure ref="restrict_mobile_code" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="restrict_mobile_code" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-5" name="SL2 - Common - CR2.5" desc="" library="">
          <threats>
            <threat ref="cr2-5-an_adversary_can_perform_a_dos_attack_by_making_consecutive_authorization_requests" name="An adversary can perform a DoS attack by making consecutive authorization requests" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-307">
                  <countermeasures>
                    <countermeasure ref="prevent_further_access_init_seslock" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="prevent_further_access_init_seslock" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-6" name="SL2 - Common - CR2.6" desc="" library="">
          <threats>
            <threat ref="cr2-6-an_adversary_could_have_maintained_a_stored_session" name="An adversary could have maintained a stored session. By doing so he keeps access to the asset with the role identified with that corresponding session." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-384">
                  <countermeasures>
                    <countermeasure ref="terminate_remote_session_auto_or_manual" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="terminate_remote_session_auto_or_manual" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-8" name="SL2 - Common - CR2.8" desc="" library="">
          <threats>
            <threat ref="cr2-8-an_aversary_could_have_compromised_the_sytem_without_you_knowing" name="An adversary could have compromised the system without you knowing what part in the asset was compromised or how he compromised the asset " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-9" name="SL2 - Common - CR2.9" desc="" library="">
          <threats>
            <threat ref="cr2-9-logging_of_the_system_will_fail_when_allocated_storage_capacity_is_satisfied" name="Logging of the asset will fail when allocated storage capacity is satisfied. Attackers can take advantage of this by creating space-eater malware." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-117">
                  <countermeasures>
                    <countermeasure ref="allocate_sufficient_audit_record_storage" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="allocate_sufficient_audit_record_storage" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-1" name="SL2 - Common - CR3.1" desc="" library="">
          <threats>
            <threat ref="cr3-1-adv_intercept_netw_traffic" name="An adversary can intercept network traffic" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="25" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-5">
                  <countermeasures>
                    <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                    <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-2" name="SL2 - Common - CR3.2" desc="" library="">
          <threats>
            <threat ref="cr3-2-adv_phishing_mail" name="An adversary sends a phishing mail with a trojan as email attachment" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-507">
                  <countermeasures>
                    <countermeasure ref="employ_maware_protection" mitigation="50"/>
                    <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="employ_maware_protection" mitigation="50"/>
                <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-3" name="SL2 - Common - CR3.3" desc="" library="">
          <threats>
            <threat ref="cr3-3-adv_plant_backdoor" name="An adversary could have planted a backdoor on the asset without the user ever knowing (no anti-virus)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-147">
                  <countermeasures>
                    <countermeasure ref="verify_intended_ops" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="verify_intended_ops" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-4" name="SL2 - Common - CR3.4" desc="" library="">
          <threats>
            <threat ref="cr3-4-adv_tamper_software" name="An adversary is able to tamper with software running on a system. On the asset no integrity check is in place." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-354">
                  <countermeasures>
                    <countermeasure ref="integrity_check_software" mitigation="50"/>
                    <countermeasure ref="support_auth_check_on_software_config" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="integrity_check_software" mitigation="50"/>
                <countermeasure ref="support_auth_check_on_software_config" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-5" name="SL2 - Common - CR3.5" desc="" library="">
          <threats>
            <threat ref="cr3-5-adv_xss" name="An adversary can perform cross site scripting when input is not validated" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-79">
                  <countermeasures>
                    <countermeasure ref="validate_syntax_length_content_of_any_input" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="validate_syntax_length_content_of_any_input" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-6" name="SL2 - Common - CR3.6" desc="" library="">
          <threats>
            <threat ref="cr3-6-adv_fuzz_sensor" name="An adversary can fuzz a sensor connected to a PLC which will cause the controller to generate wrong output values which can cause big system failures (DoS)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="75" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-20">
                  <countermeasures>
                    <countermeasure ref="phys_logical_connect_to_automation_process" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="phys_logical_connect_to_automation_process" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-7" name="SL2 - Common - CR3.7" desc="" library="">
          <threats>
            <threat ref="cr3-7-adv_disclose_info_via_error_msg" name="An adversary can use error messages that contain too much information, such as stack traces, to discover vulnerabilities in the running service." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-209">
                  <countermeasures>
                    <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-8" name="SL2 - Common - CR3.8" desc="" library="">
          <threats>
            <threat ref="cr3-8-adv_mitm_random_sessionid" name="An adversary can perform a man in the middle attack when generating a session with a random session-ID." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="protect_integrity_of_sessions" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_integrity_of_sessions" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-9" name="SL2 - Common - CR3.9" desc="" library="">
          <threats>
            <threat ref="cr3-9-adv_delete_audit_records_after_breach" name="An adversary is able to delete audit records after a system breach which can make investigations very difficult  " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-732">
                  <countermeasures>
                    <countermeasure ref="protect_audit_info_logs_tools" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_audit_info_logs_tools" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr4-1" name="SL2 - Common - CR4.1" desc="" library="">
          <threats>
            <threat ref="cr4-1-adv_intercept_unecrypted_file_in_transit" name="An adversary is able to intercept an unencrypted file in transit" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="protect_conf_of_info_at_rest_remote_access" mitigation="50"/>
                    <countermeasure ref="protect_conf_of_info_traversing_netw" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_conf_of_info_at_rest_remote_access" mitigation="50"/>
                <countermeasure ref="protect_conf_of_info_traversing_netw" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr4-2" name="SL2 - Common - CR4.2" desc="" library="">
          <threats>
            <threat ref="cr4-adv_access_file_unpurged_dev" name="An adversary can access files through a device which was released from active service and which was not purged" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-672">
                  <countermeasures>
                    <countermeasure ref="explicit_read_auth_protect_conf_info" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="explicit_read_auth_protect_conf_info" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr4-3" name="SL2 - Common - CR4.3" desc="" library="">
          <threats>
            <threat ref="cr4-3-adv_break_alg_weak_encryption" name="When a weak encryption algorithm is used an adversary is capable of breaking the algorithm with standard available tools" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-326">
                  <countermeasures>
                    <countermeasure ref="user_crypto_algs" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="user_crypto_algs" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr5-1" name="SL2 - Common - CR5.1" desc="" library="">
          <threats>
            <threat ref="cr5-1-network_segmentation_exploit" name="An adversary is able to hop between internal networks since they are not segregated" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="logically_segment_control_system" mitigation="50"/>
                    <countermeasure ref="physically_segment_control_system" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="logically_segment_control_system" mitigation="50"/>
                <countermeasure ref="physically_segment_control_system" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr5-2" name="SL2 - Common - CR5.2" desc="" library="">
          <threats>
            <threat ref="cr5-2-lateralmovement_exploit" name="An adversary can complete lateral movement within the asset when no protection is set up" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="deny_netw_traffic_allow_netw_traffic_exceptions" mitigation="50"/>
                    <countermeasure ref="monitor_control_comms_zone_boundaries" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="deny_netw_traffic_allow_netw_traffic_exceptions" mitigation="50"/>
                <countermeasure ref="monitor_control_comms_zone_boundaries" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr5-3" name="SL2 - Common - CR5.3" desc="" library="">
          <threats>
            <threat ref="cr5-3-social_engineering_exploit" name="An adversary may introduce malware into the asset by phishing (email,facebook,...)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-601">
                  <countermeasures>
                    <countermeasure ref="prevent_general_purpose_person2person_msg" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="prevent_general_purpose_person2person_msg" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr5-4" name="SL2 - Common - CR5.4" desc="" library="">
          <threats>
            <threat ref="cr5-4-adv_dos_nonessential_sys_part" name="An adversary performs a DoS attack on a non-essential part of the asset which causes the core service to break" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-400">
                  <countermeasures>
                    <countermeasure ref="partitioning_of_data_based_criticality" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="partitioning_of_data_based_criticality" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr6-1" name="SL2 - Common - CR6.1" desc="" library="">
          <threats>
            <threat ref="cr6-1-audit_log_exploit" name="An adversary may compromise the asset and edit the logfiles with non root privileges" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-532">
                  <countermeasures>
                    <countermeasure ref="auth_humans_tools_audit_logs" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="auth_humans_tools_audit_logs" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr6-2" name="SL2 - Common - CR6.2" desc="" library="">
          <threats>
            <threat ref="cr6-2-continuous_monitoring_exploit" name="An adversary compromises a system  without it being timely notified and detected by for example a IDS" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-693">
                  <countermeasures>
                    <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-1" name="SL2 - Common - CR7.1" desc="" library="">
          <threats>
            <threat ref="cr7-1-dos_no_protect" name="Assets might lose the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event.&#10;" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-1100">
                  <countermeasures>
                    <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                    <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-2" name="SL2 - Common - CR7.2" desc="" library="">
          <threats>
            <threat ref="cr7-2-rsrc_exhaustion" name="Assets might lose the capability to maintain essential functions as a result of resource exhaustion." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-400">
                  <countermeasures>
                    <countermeasure ref="limit_rsrc_by_sec" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="limit_rsrc_by_sec" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-3" name="SL2 - Common - CR7.3" desc="" library="">
          <threats>
            <threat ref="cr7-3-no_usr_sys_info_backup" name="Assets might not regain their state (user- and system-level information) due to storage failure." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="50" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-636">
                  <countermeasures>
                    <countermeasure ref="provide_participate_in_sys_level_backup" mitigation="50"/>
                    <countermeasure ref="validate_integrity_of_backup_info" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_participate_in_sys_level_backup" mitigation="50"/>
                <countermeasure ref="validate_integrity_of_backup_info" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-4" name="SL2 - Common - CR7.4" desc="" library="">
          <threats>
            <threat ref="cr7-4-no_usr_sys_info_backup" name="Assets might not regain their state (user- and system-level information) due to storage failure." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="50" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-636">
                  <countermeasures>
                    <countermeasure ref="cap_to_be_recovered_to_known_secure_state" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="cap_to_be_recovered_to_known_secure_state" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-5" name="SL2 - Common - CR7.5" desc="" library="">
          <threats>
            <threat ref="cr7-5-emergency_power" name="An adversary can cause a power outage of a security system which will give an adversary to compromise the asset." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="switch_to_and_from_emergency_power_supply" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="switch_to_and_from_emergency_power_supply" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-6" name="SL2 - Common - CR7.6" desc="" library="">
          <threats>
            <threat ref="cr7-6-unauth_access_default_creds" name="Unauthorized component access might occur as a result of not being able to change default access credentials" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-798">
                  <countermeasures>
                    <countermeasure ref="config_according_to_recommended_netw_and_security" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="config_according_to_recommended_netw_and_security" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-7" name="SL2 - Common - CR7.7" desc="" library="">
          <threats>
            <threat ref="cr7-7-unauth_access_unnecessary_func" name="Unauthorized component access might occur as a result of not being able to restrict unnecessary functions, ports, protocols and/or services." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-8" name="SL2 - Common - CR7.8" desc="" library="">
          <threats>
            <threat ref="cr7-8-rogue_assets" name="Rogue assets might enter the network as a result of not being able to verify component identities." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="3af5d702-978e-45ef-ae5a-171580ef084e" diagramComponentId="2bc05896-f88e-458d-96fb-e6f94fc5ed40" ref="8859a3f0-0d5f-455f-b00a-c2229c3d5385" name="Serial Interface - SPI Bus" desc="" library="" parentComponentRef="" componentDefinitionRef="serial-interface-spi-bus">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="iec62443-sl2"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-300" name="Channel Accessible by Non-Endpoint ('Man-in-the-Middle')" state="0" impact="100" issueId="">
          <desc>The product does not adequately verify the identity of actors at both ends of a communication channel, or does not adequately ensure the integrity of the channel, in a way that allows the channel to be accessed or influenced by an actor that is not an endpoint.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-209" name="Information Exposure Through an Error Message" state="0" impact="100" issueId="">
          <desc>The software generates an error message that includes sensitive information about its environment, users, or associated data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-1100" name="Insufficient Isolation of System-Dependent Functions" state="0" impact="100" issueId="">
          <desc>The product or code does not isolate system-dependent
					functionality into separate stand-alone modules.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="">
          <desc>When a security-critical event occurs, the software either does not record the event or omits important details about the event when logging it.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-5" name="J2EE Misconfiguration: Data Transmission Without Encryption" state="0" impact="100" issueId="">
          <desc>Information sent over a network can be compromised while in transit. An attacker may be able to read or modify the contents if the data are sent in plaintext or are weakly encrypted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-693" name="Protection Mechanism Failure" state="0" impact="100" issueId="">
          <desc>The product does not use or incorrectly uses a protection mechanism that provides sufficient defence against directed attacks against the product.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="continuous_monitor_accepted_sec" name="Assets shall provide the capability to be continuously monitored using commonly accepted security industry practices and recommendations to detect, characterize and report security breaches in a timely manner." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Control system monitoring capability can be achieved through a variety of tools and
techniques (for example, IDS, IPS, malicious code protection mechanisms and network monitoring mechanisms).
2. Monitoring devices should be strategically deployed within the control system (for example, at
selected perimeter locations and near server farms supporting critical applications) to collect
essential information. Monitoring mechanisms may also be deployed at ad hoc locations
within the control system to track specific transactions
3. SIEM Implementation</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_for_audit_records" name="Assets shall provide the capability to create timestamps (including date and time) for use in audit records." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Timestamps (including date and time) of audit records should be generated using internal
system clocks.
1. provide timestamps for use in audit record generation.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" name="Assets shall provide the capability to create timestamps that are synchronized with a system wide time source." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>to synchronize internal system clocks at a configurable frequency.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="maintain_essential_functions" name="Assets shall provide the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>provide the capability to manage communication loads (such as
using rate limiting) to mitigate the effects of information flooding types of DoS events.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="id_and_handle_error_conditions" name="The asset shall identify and handle error conditions in a manner such that effective remediation can occur. This shall be done in a manner which does not provide information that could be exploited by adversaries to attack the IACS unless revealing this information is necessary for the timely troubleshooting of problems." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Error messages generated by the control system should provide timely and useful information without revealing potentially harmful information.
2. Vulnerability Assessment &amp; Penetration Testing</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="employ_cypto_mechs_to_recognize_changes" name="The asset shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" name="The asset shall provide the capability to generate audit records relevant to security for the following categories: access control, request errors, operating system events, asset events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Generate audit records relevant to security for the following categories: access control, request errors, operating system events, control system events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="mitigate_info_effects_flooding_types" name="The asset shall provide the capability to manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. boundary protection
2. restricting the information flow to be unidirectional outbound
3. manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events.
4. restrict the ability of all users (humans, software processes and devices) to cause DoS events which affect other control systems or networks.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_integrity_transmitted_info" name="The asset shall provide the capability to protect the integrity of transmitted information." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="report_current_list_of_installed_assets" name="The asset shall provide the capability to report the current list of installed assets and their associated properties." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Usage of component ID, capability and revision level.
2. Formal process of configuration management should be deployed to keep control of the
changes in the component inventory baseline
3. The system requires all default passwords and pass phrases to be changed in order to complete the setup, prior to being operational.  This includes SSID passphrases, default accounts, admin accounts, etc.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="common-sl2-cr2-11" name="SL2 - Common - CR2.11" desc="" library="">
          <threats>
            <threat ref="cr2-11-an_adversary_compromises_a_system_without_knowing_when_he_compromised_it" name="An adversary compromises a system without knowing when he compromised it." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                    <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-8" name="SL2 - Common - CR2.8" desc="" library="">
          <threats>
            <threat ref="cr2-8-an_aversary_could_have_compromised_the_sytem_without_you_knowing" name="An adversary could have compromised the system without you knowing what part in the asset was compromised or how he compromised the asset " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-1" name="SL2 - Common - CR3.1" desc="" library="">
          <threats>
            <threat ref="cr3-1-adv_intercept_netw_traffic" name="An adversary can intercept network traffic" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="25" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-5">
                  <countermeasures>
                    <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                    <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-7" name="SL2 - Common - CR3.7" desc="" library="">
          <threats>
            <threat ref="cr3-7-adv_disclose_info_via_error_msg" name="An adversary can use error messages that contain too much information, such as stack traces, to discover vulnerabilities in the running service." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-209">
                  <countermeasures>
                    <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr6-2" name="SL2 - Common - CR6.2" desc="" library="">
          <threats>
            <threat ref="cr6-2-continuous_monitoring_exploit" name="An adversary compromises a system  without it being timely notified and detected by for example a IDS" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-693">
                  <countermeasures>
                    <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-1" name="SL2 - Common - CR7.1" desc="" library="">
          <threats>
            <threat ref="cr7-1-dos_no_protect" name="Assets might lose the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event.&#10;" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-1100">
                  <countermeasures>
                    <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                    <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-8" name="SL2 - Common - CR7.8" desc="" library="">
          <threats>
            <threat ref="cr7-8-rogue_assets" name="Rogue assets might enter the network as a result of not being able to verify component identities." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="29aad627-9766-4ee4-b81a-29aea76f3a9c" diagramComponentId="5231ac69-7eb2-4ea9-aa0d-ba5c9d3da050" ref="aed6502c-56ba-4dbf-942d-008c1151dd60" name="QuickSight" desc="" library="Hydras-AWS-Foundation" parentComponentRef="" componentDefinitionRef="CD-QUICKSIGHT">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="trusted-partner"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="AWS-S3-7.4" name="Sensitive data is accessible" state="0" impact="100" issueId="">
          <desc>Sensitive data is not encrypted and is exposed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-07-28T01:29:26.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-AWS-QUICKSIGHT1" name="Upgrade AWS QuickSight subscription from Standard to Enterprise Edition" issueId="" platform="" cost="1" risk="49" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>&lt;p&gt;Upgrade AWS QuickSight subscription from Standard to Enterprise Edition&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; You can upgrade from Amazon QuickSight Standard edition to Amazon QuickSight Enterprise edition. In Enterprise edition, Amazon QuickSight supports the following additional security features:&lt;br&gt; - Row-level security.&lt;br&gt; - Private virtual private cloud (VPC) support based on Amazon VPC.&lt;br&gt; - Folders for organization and sharing.&lt;br&gt; - Fine-grained access control over Amazon S3, Amazon Athena, and other AWS services and resources.&lt;br&gt; - AWS Lake Formation support.&lt;br&gt; In addition, in Enterprise edition, data at rest in SPICE is encrypted using block-level encryption with AWS-managed keys. In Standard edition, data at rest in SPICE is securely stored, but not encrypted.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Use the following procedure to upgrade to Enterprise edition. To perform the upgrade, you need administrative access to Amazon QuickSight, with security permissions to subscribe. The person performing the upgrade is usually an AWS administrator who is also an Amazon QuickSight administrator.&lt;/p&gt; 
&lt;p&gt;To upgrade to Enterprise edition&lt;/p&gt; 
&lt;p&gt;1. Open the administrative settings page by clicking on your profile icon at top right.&lt;/p&gt; 
&lt;p&gt;2. At top left, choose Upgrade now.&lt;/p&gt; 
&lt;p&gt;Upgrade to Enterprise Edition screen appears.&lt;/p&gt; 
&lt;p&gt;3. Be sure that you want to upgrade.&lt;/p&gt; 
&lt;p&gt;Important&lt;br&gt; You can't undo this action.&lt;/p&gt; 
&lt;p&gt;Choose Upgrade to upgrade. The upgrade is instantaneous.&lt;/p&gt; 
&lt;p&gt;Billing for the upgrade to your subscription is prorated for the month of upgrade. Upgrades to Amazon QuickSight users are also prorated.&lt;/p&gt; 
&lt;p&gt;4. (Optional) Downgrade users to readers:&lt;/p&gt; 
&lt;p&gt;- Before you start, make sure to transfer any assets your users own that you want to keep.&lt;/p&gt; 
&lt;p&gt;- Delete the users and add them back to your subscription as readers.&lt;/p&gt; 
&lt;p&gt;If you're using Active Directory, delete the authors, move them to the new reader group, then recreate them as readers in Amazon QuickSight.&lt;/p&gt; 
&lt;p&gt;When you upgrade to Enterprise edition, your admin and author users retain their roles.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; Downgrading from Enterprise edition to Standard edition isn't currently possible.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Encryption at Rest" url="https://docs.aws.amazon.com/quicksight/latest/user/data-encryption-at-rest.html"/>
            <reference name="Upgrading Your Amazon QuickSight Subscription from Standard Edition to Enterprise Edition" url="https://docs.aws.amazon.com/quicksight/latest/user/upgrading-subscription.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that you have upgraded AWS QuickSight subscription from Standard to Enterprise Edition.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-06-11T03:47:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="GENERAL" name="General" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="ACCESS-TO-DATA-AWS" name="Sensitive data is compromised through unauthorized access to data" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers can gain access to sensitive data when the data is in transit in clear text, or when the data is stored without encryption.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-S3-7.4">
                  <countermeasures>
                    <countermeasure ref="C-AWS-QUICKSIGHT1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-QUICKSIGHT1" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="cd220ae5-4387-4ffc-b9a1-864ddf1f0414" diagramComponentId="54931abe-f70f-471a-9cd9-e7a52b612bc0" ref="ed6c9c4c-cdee-4224-bd85-8d964a6f5685" name="Kinesis Data Analytics - SQL/Flink" desc="" library="Hydras-AWS-Foundation" parentComponentRef="" componentDefinitionRef="kinesis-data-analytics">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="trusted-partner"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="AWS-IAM-2.2" name="Excessive use of administrator accounts" state="0" impact="100" issueId="">
          <desc>&lt;div&gt;
                        The administrator accounts are used for all actions, not only for administrative actions. This
                        is because these users have not got a personal or a user account to do the daily actions.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-06-29T02:34:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-522" name="Insufficiently Protected Credentials" state="0" impact="100" issueId="">
          <desc>This weakness occurs when the application transmits or stores
                    authentication credentials and uses an insecure method that is susceptible to
                    unauthorized interception and/or retrieval.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-05-26T01:19:03.000">
              <output/>
            </source>
            <references>
              <reference name="CWE-522: Insufficiently Protected Credentials" url="https://cwe.mitre.org/data/definitions/522.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-320" name="Key Management Errors" state="0" impact="100" issueId="">
          <desc>Weaknesses in this category are related to errors in the management of cryptographic keys.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-12-10T16:38:53.139">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.8" name="Lack of 2FA" state="0" impact="100" issueId="">
          <desc>Access to sensitive systems without using MFA to log into the systems.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.7" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="">
          <desc>Credentials for groups and roles not properly configured. User accounts are configured with excessive privileges.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-07-28T01:29:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="misconfigured-s3-access-policies" name="Misconfigured S3 access policies" state="0" impact="100" issueId="">
          <desc>&lt;div&gt;
                        Amazon S3 buckets use misconfigured policies that allow unauthorized users to:
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt; Read sensitive information. &lt;br /&gt;&lt;/li&gt;
                        &lt;li&gt;Add malicious content to a bucket and overwrite content.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;br /&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-11-15T13:16:12.065">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-S3-7.4" name="Sensitive data is accessible" state="0" impact="100" issueId="">
          <desc>Sensitive data is not encrypted and is exposed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-07-28T01:29:26.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.1" name="The Authentication Method for Administrator Accounts is not configured" state="0" impact="100" issueId="">
          <desc>&lt;div&gt;
                        The authentication method &amp;quot;Multi-factor Authentication&amp;quot; for the Administrator
                        accounts are not configured.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.6" name="The User Account is not configured" state="0" impact="100" issueId="">
          <desc>&lt;p&gt;Key security settings such as the resetting of the password and other password controls are not configured.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-05-14T07:17:58.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="Hydras-AWS-IAM-2.7" name="Allocate privileges via groups or roles" issueId="" platform="" cost="1" risk="49" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>Granting least privilege ensures that users only have the permissions required to complete
                their jobs rather than additional privileges that are not required. Following this model ensures
                that, should an account be compromised, the blast radius of damage is limited.
                &lt;br /&gt;
                &lt;br /&gt;
                &lt;b&gt;Remediation:&lt;/b&gt;
                &lt;div&gt;
                &lt;ul&gt;
                &lt;li&gt;Allocate privileges via groups or roles via the recommendation in &amp;quot;Use RBAC
                with pre-defined policies added into groups or roles&amp;quot;.&lt;/li&gt;
                &lt;/ul&gt;
                &lt;/div&gt;
          </desc>
          <implementations/>
          <references>
            <reference name="AWS Lambda Permissions Model" url="https://docs.aws.amazon.com/lambda/latest/dg/intro-permission-model.html"/>
            <reference name="AWS Use API Gateway Lambda Authorizers" url="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-use-lambda-authorizer.html"/>
            <reference name="Configure Lambda Authorizer Using the API Gateway Console" url="https://docs.aws.amazon.com/apigateway/latest/developerguide/configure-api-gateway-lambda-authorization-with-console.html"/>
            <reference name="Security best practices in Amazon API Gateway" url="https://docs.aws.amazon.com/apigateway/latest/developerguide/security-best-practices.html"/>
            <reference name="Using Identity-Based Policies (IAM Policies) for AWS Lambda" url="https://docs.aws.amazon.com/lambda/latest/dg/access-control-identity-based.html"/>
            <reference name="Using Resource-Based Policies for AWS Lambda (Lambda Function Policies)" url="https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html"/>
          </references>
          <standards>
            <standard ref="1.22" supportedStandardRef="CIS AWS Standard"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Follow the audit check in &amp;quot;Use RBAC with pre-defined policies added into
                            groups or roles&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Ensure the privileges granted to these groups or roles only give the user the
                            ability to perform their and no more.&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-IAM-2.1" name="Avoid the use of the root account unless absolutely necessary" issueId="" platform="" cost="1" risk="44" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>The root account is the one which was used to open the AWS account with Amazon. Therefore it has full unrestricted access to all resources within the account including billing information. Reducing the use of this account and instead using personalized accounts with restricted permissions ensures the principles of least privilege and can help prevent accidental disclosure of credentials or unintended changes. 
&lt;br&gt; 
&lt;b&gt;&lt;br&gt;&lt;/b&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;br&gt;Follow the remediation in "Create Individual Accounts". 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt;
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.7" supportedStandardRef="CIS AWS Standard"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;blockquote&gt;
                            aws iam create-credential-report
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            aws iam get-credential-report --query 'Content' --output text | base64 -D | cut -d,
                            -f1,5,11,16 | grep -B1 '&amp;lt;root_account&amp;gt;'&amp;nbsp;
                            &lt;/blockquote&gt;
                            &lt;ol&gt;
                            &lt;/ol&gt;From the above determine the &amp;quot;password_last_used&amp;quot; time In
                            addition to the above set up a metric filter as described elsewhere in this library to
                            determine ad-hoc use of root.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AWS-KINESIS-ANALYTICS1" name="Control access to AWS Kinesis Data Analytics using IAM policies" issueId="" platform="" cost="0" risk="49" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>&lt;div&gt;
  Control access to AWS Kinesis Data Analytics using IAM policies 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Amazon Kinesis Data Analytics needs permissions to read records from a streaming source that you specify in your application input configuration. Amazon Kinesis Data Analytics also needs permissions to write your application output to streams that you specify in your application output configuration. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can grant these permissions by creating an IAM role that Amazon Kinesis Data Analytics can assume. Permissions that you grant to this role determine what Amazon Kinesis Data Analytics can do when the service assumes the role. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Each IAM role has two policies attached to it. In the trust policy, you specify who can assume the role. In the permissions policy (there can be one or more), you specify the permissions that you want to grant to this role. The following sections describe these policies, which you can use when you create an IAM role. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Trust Policy 
&lt;/div&gt; 
&lt;div&gt;
  To grant Amazon Kinesis Data Analytics permissions to assume a role to access a streaming or reference source, you can attach the following trust policy to an IAM role: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  { 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; "Version": "2012-10-17", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; "Statement": [ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; { 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; "Effect": "Allow", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; "Principal": { 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "Service": "kinesisanalytics.amazonaws.com" 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; }, 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; "Action": "sts:AssumeRole" 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; } 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; ] 
&lt;/div&gt; 
&lt;div&gt;
  } 
&lt;/div&gt; 
&lt;div&gt;
  Permissions Policy 
&lt;/div&gt; 
&lt;div&gt;
  If you are creating an IAM role to allow Amazon Kinesis Data Analytics to read from an application's streaming source, you must grant permissions for relevant read actions. Depending on your source (for example, an Kinesis stream, a Kinesis Data Firehose delivery stream, or a reference source in an Amazon S3 bucket), you can attach the following permissions policy. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Permissions Policy for Reading an Kinesis Stream 
&lt;/div&gt; 
&lt;div&gt;
  { 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; "Version": "2012-10-17", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; "Statement": [ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; { 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "Sid": "ReadInputKinesis", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "Effect": "Allow", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "Action": [ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "kinesis:DescribeStream", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "kinesis:GetShardIterator", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "kinesis:GetRecords", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "kinesis:ListShards" 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ], 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "Resource": [ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "arn:aws:kinesis:aws-region:aws-account-id:stream/inputStreamName" 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ] 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; ] 
&lt;/div&gt; 
&lt;div&gt;
  } 
&lt;/div&gt; 
&lt;div&gt;
  Permissions Policy for Reading a Kinesis Data Firehose Delivery Stream 
&lt;/div&gt; 
&lt;div&gt;
  { 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; "Version": "2012-10-17", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; "Statement": [ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; { 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "Sid": "ReadInputFirehose", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "Effect": "Allow", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "Action": [ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "firehose:DescribeDeliveryStream", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "firehose:Get*" 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ], 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "Resource": [ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "arn:aws:firehose:aws-region:aws-account-id:deliverystream/inputFirehoseName" 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ] 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; ] 
&lt;/div&gt; 
&lt;div&gt;
  } 
&lt;/div&gt; 
&lt;div&gt;
  Note 
&lt;/div&gt; 
&lt;div&gt;
  The firehose:Get* permission refers to an internal accessor that Kinesis Data Analytics uses to access the stream. There is no public accessor for a Kinesis Data Firehose delivery stream. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  If you direct Amazon Kinesis Data Analytics to write output to external destinations in your application output configuration, you need to grant the following permission to the IAM role. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Permissions Policy for Writing to a Kinesis Stream 
&lt;/div&gt; 
&lt;div&gt;
  { 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; "Version": "2012-10-17", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; "Statement": [ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; { 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "Sid": "WriteOutputKinesis", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "Effect": "Allow", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "Action": [ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "kinesis:DescribeStream", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "kinesis:PutRecord", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "kinesis:PutRecords" 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ], 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "Resource": [ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "arn:aws:kinesis:aws-region:aws-account-id:stream/output-stream-name" 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ] 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; ] 
&lt;/div&gt; 
&lt;div&gt;
  } 
&lt;/div&gt; 
&lt;div&gt;
  Permissions Policy for Writing to a Firehose Delivery Stream 
&lt;/div&gt; 
&lt;div&gt;
  { 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; "Version": "2012-10-17", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; "Statement": [ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; { 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "Sid": "WriteOutputFirehose", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "Effect": "Allow", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "Action": [ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "firehose:DescribeDeliveryStream", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "firehose:PutRecord", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "firehose:PutRecordBatch" 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ], 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "Resource": [ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "arn:aws:firehose:aws-region:aws-account-id:deliverystream/output-firehose-name" 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ] 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; ] 
&lt;/div&gt; 
&lt;div&gt;
  } 
&lt;/div&gt; 
&lt;div&gt;
  Permissions Policy for Reading a Reference Data Source from an Amazon S3 Bucket 
&lt;/div&gt; 
&lt;div&gt;
  { 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; "Version": "2012-10-17", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; "Statement": [ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; { 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; "Effect": "Allow", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; "Action": [ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "s3:Get*", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "s3:List*" 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; ], 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; "Resource": "*" 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; } 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; ] 
&lt;/div&gt; 
&lt;div&gt;
  } 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Identity and Access Management in Kinesis Data Analytics" url="https://docs.aws.amazon.com/kinesisanalytics/latest/dev/iam-role.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>With the IAM policy simulator, you can test and troubleshoot identity-based policies, IAM permissions boundaries, Organizations service control policies, and resource-based policies.&amp;nbsp;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-07-14T07:54:06.519">
              <output/>
            </source>
            <references>
              <reference name="Testing IAM policies with the IAM policy simulator" url="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_testing-policies.html"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-IAM-2.6" name="Create a Password Policy enforcing strong passwords" issueId="" platform="" cost="1" risk="33" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>&lt;p&gt;Enforcing a strong password policy increases resiliency and reduces the chances of the password being compromised either through brute force attempts, keystroke logging tools or stolen credentials amongst others.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Login to AWS Console (ensure you have permissions to update IAM).&lt;/li&gt;&lt;li&gt;Go to IAM Service on the AWS Console.&lt;/li&gt;&lt;li&gt;Click on Account Settings.&lt;/li&gt;&lt;li&gt;Set "Minimum password length" to 14 or greater.&lt;/li&gt;&lt;li&gt;Check "Require at least one uppercase letter".&lt;/li&gt;&lt;li&gt;Check "Require at least one lowercase letter".&lt;/li&gt;&lt;li&gt;Check "Require at least one number".&lt;/li&gt;&lt;li&gt;Check "Require at least one non-alphanumeric character"&lt;/li&gt;&lt;li&gt;Check "Enable password expiration" and set the period to at least 90 days.&lt;/li&gt;&lt;li&gt;Check "Prevent password reuse" and set the number to at least 10.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.8" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="1.9" supportedStandardRef="CIS AWS Standard"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Validate that mechanisms exist to ensure that created passwords are strong enough.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Monitoring-4.9" name="Create AWS Config configuration change alerts" issueId="" platform="" cost="1" risk="44" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>When cloudtrail is configured and sending alerts to cloudwatch logs these logs can be queried
                        to identify suspicious API activity. One such activity that should be monitored is AWS Config
                        changes. AWS config tracks configuration changes within the environment and is a useful change
                        management tool. Therefore alerting on config changes ensures the continued visibility of AWS
                        configuration items.
                        &lt;div&gt;
                        &amp;nbsp;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;br /&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Create a metric filter that checks for AWS Config changes:&amp;nbsp;&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        aws logs put-metric-filter&amp;nbsp;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        --log-group-name &amp;lt;group&amp;gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --filter-name &amp;lt;name&amp;gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --metric- transformations &amp;lt;value&amp;gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --filter-pattern '{($.eventSource = config.amazonaws.com) &amp;amp;&amp;amp;
                        (($.eventName=StopConfigurationRecorder)||($.eventName=DeleteDeliveryChannel)||($.even
                        tName=PutDeliveryChannel)||($.eventName=PutConfigurationRecorder))}'&amp;nbsp;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Create an SNS topic for notifications: aws sns create-topic --name &amp;lt;topic_name&amp;gt;&lt;/li&gt;
                        &lt;li&gt;Create an SNS subscription to the topic created above: aws sns subscribe --topic-arn
                        &amp;lt;topic_arn&amp;gt; --protocol email --notification-endpoint &amp;lt;email@example.com&amp;gt;&lt;/li&gt;
                        &lt;li&gt;Create an alarm based on the above steps:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        aws cloudwatch put-metric-alarm&amp;nbsp;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        --alarm-name &amp;lt;value&amp;gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --metric-name &amp;lt;metric_filter_name&amp;gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --statistic Sum&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --period 300&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --threshold 1&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --comparison-operator GreaterThanOrEqualToThreshold&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --evaluation-periods 1&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --namespace &amp;lt;CloudTrailMetrics&amp;gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --alarm-actions &amp;lt;topic_arn&amp;gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;div&gt;
                        
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="4.9" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;
                            &lt;li&gt;Identify the log group name: aws cloudtrail describe-trails&lt;/li&gt;
                            &lt;li&gt;Note the &amp;lt;group&amp;gt; value associated with CloudWatchLogsLogGroupArn.&lt;/li&gt;
                            &lt;li&gt;Get a list of all associated metric filters for this &amp;lt;group&amp;gt;: aws
                            logs describe-metric-filters --log-group-name &amp;quot;&amp;lt;group&amp;gt;&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure the output contains the following:&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &amp;quot;filterPattern&amp;quot;: &amp;quot;{($.eventSource = config.amazonaws.com) &amp;amp;&amp;amp;
                            (($.eventName=StopConfigurationRecorder)||($.eventName=DeleteDeliveryChannel)||($.even
                            tName=PutDeliveryChannel)||($.eventName=PutConfigurationRecorder))}&amp;quot;&amp;nbsp;
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Note the metricName value associated with the filterPattern found in step 4.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Get a list of CloudWatch alarms and filter on the metricName captured in step 4:
                            aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&amp;lt;metricName&amp;gt;`]'&lt;/li&gt;
                            &lt;li&gt;Note the AlarmActions value - this will provide the SNS topic ARN value.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure there is at least one subscriber to the SNS topic: aws sns
                            list-subscriptions-by-topic --topic-arn &amp;lt;topic_arm&amp;gt;&lt;/li&gt;
                            &lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-IAM-2.3" name="Create Individual Accounts" issueId="" platform="" cost="1" risk="44" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>By creating individual IAM users for people accessing your account, you can give each IAM user a unique set of security credentials. You can also grant different permissions to each IAM user. If necessary, you can change or revoke an IAM user's permissions any time. (If you give out your AWS root credentials, it can be difficult to revoke them, and it is impossible to restrict their permissions.). 
&lt;div&gt; 
 &lt;br&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;br&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Login to the AWS Management Console as an administrator.&lt;/li&gt; 
  &lt;li&gt;Select IAM.&lt;/li&gt; 
  &lt;li&gt;Select Users.&lt;/li&gt; 
  &lt;li&gt;Click "Create New Users".&lt;/li&gt; 
  &lt;li&gt;Complete the required information.&lt;/li&gt; 
  &lt;li&gt;Uncheck "Create access key for users".&lt;/li&gt; 
  &lt;li&gt;Click "Create".&lt;/li&gt; 
  &lt;li&gt;Select the user.&lt;/li&gt; 
  &lt;li&gt;Click "Manage Password".&lt;/li&gt; 
  &lt;li&gt;Select the required options and click "apply".&lt;/li&gt; 
  &lt;li&gt;Select "Show User Security Credentials".&lt;/li&gt; 
  &lt;li&gt;Securely supply the password to your user.&lt;/li&gt; 
 &lt;/ol&gt;&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that each user has got the corresponding account with the corresponding
                            credentials.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Logging-3.9" name="Enable AWS Config across all regions" issueId="" platform="" cost="1" risk="44" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>AWS Config tracks configuration changes to resources as they occur and is therefore a good
                        source of identifying whether unintentional or malicious changes have occurred to resources with
                        the AWS account.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;br /&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Sign in to the AWS Management Console (with Config update permissions).&lt;/li&gt;
                        &lt;li&gt;Select Config from the services menu.&lt;/li&gt;
                        &lt;li&gt;Define which resources you want to record in the selected region.&lt;/li&gt;
                        &lt;li&gt;Choose to include global resources (IAM resources).&lt;/li&gt;
                        &lt;li&gt;Specify an S3 bucket.&lt;/li&gt;
                        &lt;li&gt;Create an SNS Topic&amp;nbsp;&amp;nbsp;&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;br /&gt;&amp;nbsp;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3.5" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Sign in to the AWS Management Console (with Config update permissions)&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Select Config from the services menu&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;If presented with Setup AWS Config follow the procedure highlighted in the
                            remediation section&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;On the Resource inventory page, Click on &amp;quot;edit&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure 1 or both check-boxes under &amp;quot;All Resources&amp;quot; is checked.&amp;nbsp;&lt;/li&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Include global resources related to IAM resources&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;which needs to be enabled in 1 region only.&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;li&gt;Ensure the correct S3 bucket has been defined.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure the correct SNS topic has been defined.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Repeat steps 2 to 7 for each region (you'll need to change region in the top right
                            corner of the AWS management console to do this).&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Logging-3.1" name="Enable Cloudtrail in all regions" issueId="" platform="" cost="1" risk="44" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>Cloudtrail records events of all API calls made within a AWS account. This enables security
                        analysis, resource change tracking, and compliance auditing. Cloudtrail should be enabled in all
                        regions, even if they are not being used, to identify unintended or accidental changes.
                        &lt;br /&gt;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation&lt;/b&gt;:
                        &lt;br /&gt;Create a global trail using a previously created S3 bucket:
                        &lt;br /&gt;
                        &lt;blockquote&gt;
                        aws cloudtrail create-trail --name &amp;lt;trail_name&amp;gt; --s3-bucket-name &amp;lt;s3-bucket-name&amp;gt;
                        --is-multi-region-trail
                        &lt;/blockquote&gt;
                        &lt;br /&gt;
                        &lt;br /&gt;
                        &lt;br /&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3.1" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Run: aws cloudtrail describe-trails&lt;/li&gt;
                            &lt;li&gt;Ensure &amp;quot;IsMultiRegionTrail&amp;quot; = TRUE&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-IAM-2.4" name="Enable MFA for IAM console users" issueId="" platform="" cost="1" risk="33" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>Using a multi-factor authentication (MFA) device enhances the security of the login process. With MFA, users have a device that generates a unique authentication code (a one-time password, or OTP) and users must provide both their normal credentials (like their username and password) and the OTP. 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The MFA device can either be a special piece of hardware, or it can be a virtual device. The recommendation for all console login accounts is to use MFA to increase the level of security of the login process. 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;br&gt; 
   &lt;b&gt;Remediation:&lt;/b&gt; 
   &lt;br&gt; 
   &lt;ol&gt; 
    &lt;li&gt;Login to the AWS Management Console as an administrator.&lt;/li&gt; 
    &lt;li&gt;Select IAM.&lt;/li&gt; 
    &lt;li&gt;Select Users.&lt;/li&gt; 
    &lt;li&gt;For each user:&lt;/li&gt; 
    &lt;ul&gt; 
     &lt;li&gt;Select the user.&lt;/li&gt; 
     &lt;li&gt;Under "Sign-In Credentials" if "Password" is set to "Yes".&lt;/li&gt; 
     &lt;li&gt;Select "Manage MFA Device".&lt;/li&gt; 
     &lt;li&gt;Choose the type of MFA.&lt;/li&gt; 
     &lt;li&gt;Either scan the code or enter your device secret key.&lt;/li&gt; 
     &lt;li&gt;Enter the Authentication code in "Authentication Code 1" box.&lt;/li&gt; 
     &lt;li&gt;Wait for the code to change and enter the next code in "Authentication Code 2" box.&lt;/li&gt; 
     &lt;li&gt;Click Activate MFA.&lt;/li&gt; 
    &lt;/ul&gt; 
   &lt;/ol&gt;
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.10" supportedStandardRef="CIS AWS Standard"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Generate a credential report with the command: aws iam generate-credential-report&lt;/li&gt;
                            &lt;li&gt;The following command displays a list of all IAM users along with their password
                            and MFA status: aws iam get-credential-report --output text | base64 -D | cut - d, -f1,4,8&lt;/li&gt;
                            &lt;li&gt;For any column having password_enabled set to true ensure mfa_active is also set
                            to true.&amp;nbsp;&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-IAM-2.2" name="Enable MFA for root accounts" issueId="" platform="" cost="1" risk="44" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>Root is highly privileged and therefore using a multi-factor authentication (MFA) device enhances the security of the login process. With MFA, users have a device that generates a unique authentication code (a one-time password, or OTP) and users must provide both their normal credentials (like their username and password) and the OTP. The MFA device can either be a special piece of hardware, or it can be a virtual device. The recommendation for the root account is to use a hardware based device as it has a smaller attack surface and cannot be duplicated. 
&lt;div&gt; 
 &lt;br&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;br&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Login to the AWS Management Console as root.&lt;/li&gt; 
  &lt;li&gt;Select "Dashboard" and under "Security Status" choose "Activate MFA" on your root account.&lt;/li&gt; 
  &lt;li&gt;Select Activate MFA".&lt;/li&gt; 
  &lt;li&gt;In the wizard, choose "A hardware MFA" device and then select Next Step.&lt;/li&gt; 
  &lt;li&gt;In the Serial Number box, enter the serial number that is found on the back of the MFA device.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;In the Authentication Code 1 box, enter the six-digit number displayed by the MFA device.&lt;/li&gt; 
  &lt;li&gt;Wait until the device refreshes the code, and then enter the next six-digit number into the Authentication Code 2 box.&lt;/li&gt; 
  &lt;li&gt;Select "Next Step".&amp;nbsp;&lt;/li&gt; 
 &lt;/ol&gt;The MFA device is now associated with the AWS account.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; 
 &lt;br&gt;&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.5" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="1.6" supportedStandardRef="CIS AWS Standard"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Run: aws iam get-account-summary&lt;/li&gt;
                            &lt;li&gt;Ensure the AccountMFAEnabled property is 1.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AWS-KINESIS-DATA3" name="Enable Server-side encryption in AWS Kinesis Data Streams" issueId="" platform="" cost="0" risk="49" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>&lt;div&gt;
  Enable Server-side encryption in AWS Kinesis Data Streams 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Server-side encryption is a feature in Amazon Kinesis Data Streams that automatically encrypts data before it's at rest by using an AWS KMS customer master key (CMK) you specify. Data is encrypted before it's written to the Kinesis stream storage layer, and decrypted after it's retrieved from storage. As a result, your data is encrypted at rest within the Kinesis Data Streams service. This allows you to meet strict regulatory requirements and enhance the security of your data. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  With server-side encryption, your Kinesis stream producers and consumers don't need to manage master keys or cryptographic operations. Your data is automatically encrypted as it enters and leaves the Kinesis Data Streams service, so your data at rest is encrypted. AWS KMS provides all the master keys that are used by the server-side encryption feature. AWS KMS makes it easy to use a CMK for Kinesis that is managed by AWS, a user-specified AWS KMS CMK, or a master key imported into the AWS KMS service. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Note 
&lt;/div&gt; 
&lt;div&gt;
  Server-side encryption encrypts incoming data only after encryption is enabled. Preexisting data in an unencrypted stream is not encrypted after server-side encryption is enabled. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  The easiest way to get started with server-side encryption is to use the AWS Management Console and the Amazon Kinesis KMS Service Key, aws/kinesis. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The following procedure demonstrates how to enable server-side encryption for a Kinesis stream. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To enable server-side encryption for a Kinesis stream 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Sign in to the AWS Management Console and open the Amazon Kinesis Data Streams console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Create or select a Kinesis stream in the AWS Management Console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Choose the details tab. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. In Server-side encryption, choose edit. 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  5. Unless you want to use a user-generated KMS master key, ensure the (Default) aws/kinesis KMS master key is selected. This is the KMS master key generated by the Kinesis service. Choose Enabled, and then choose Save. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  6. The stream transitions through a pending state. After the stream returns to an active state with encryption enabled, all incoming data written to the stream is encrypted using the KMS master key you selected. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Before you use user-generated KMS master keys, ensure that your Kinesis stream producers and consumers (IAM principals) are users in the KMS master key policy. Otherwise, writes and reads from a stream will fail, which could ultimately result in data loss, delayed processing, or hung applications. You can manage permissions for KMS keys using IAM policies. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Creating and Using User-Generated KMS Master Keys" url="https://docs.aws.amazon.com/streams/latest/dev/creating-using-sse-master-keys.html"/>
            <reference name="How Do I Get Started with Server-Side Encryption?" url="https://docs.aws.amazon.com/streams/latest/dev/getting-started-with-sse.html"/>
            <reference name="What Is Server-Side Encryption for Kinesis Data Streams?" url="https://docs.aws.amazon.com/streams/latest/dev/what-is-sse.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  After enabling encryption on a Kinesis stream, AWS recommends that you monitor the success of your putRecord, putRecords, and getRecords calls using the following Amazon CloudWatch metrics: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  PutRecord.Success 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  PutRecords.Success 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  GetRecords.Success 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-07-13T13:01:44.707">
              <output/>
            </source>
            <references>
              <reference name="Verifying and Troubleshooting KMS Key Permissions" url="https://docs.aws.amazon.com/streams/latest/dev/sse-troubleshooting.html"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-S3-7.4" name="Encrypt sensitive data at rest with KMS" issueId="" platform="" cost="0" risk="49" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>&lt;p&gt;Amazon Simple Storage Service is storage for the Internet. It is designed to make web-scale computing easier for developers. &lt;/p&gt; 
&lt;p&gt;Amazon S3 has a simple web services interface that you can use to store and retrieve any amount of data, at any time, from anywhere on the web. It gives any developer access to the same highly scalable, reliable, fast, inexpensive data storage infrastructure that Amazon uses to run its own global network of websites. &lt;/p&gt; 
&lt;p&gt;To ensure that sensitive data is encrypted at rest you can use AWS KMS-managed keys (SSE-KMS). This provides several advantages: &lt;br /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You can create and manage the CMK encryption keys yourself.&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;You can use a single CMK to encrypt and decrypt log files for multiple accounts across all regions.&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;You have control over who can use your key for encrypting and decrypting CloudTrail log files. You can assign permissions for the key to the users in your organization according to your requirements.&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;You have enhanced security. With this feature, in order to read log files, you now need to meet two conditions: 1) you must have S3 read permission on the bucket, and 2) you must be granted decrypt permission by the CMK policy.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;It is recommended to encrypt all sensitive data with SSE-KMS to avoid undue disclosure of information and provide an extra layer of security.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;Remediation: &lt;/b&gt;&lt;br /&gt; The following example shows how to upload data using AWS KMS Encryption: &lt;br /&gt; aws s3api put-object --bucket --server-side-encryption aws:kms --ssekms-key-id --key &lt;/p&gt; 
</desc>
          <implementations/>
          <references>
            <reference name="AWS Secrets Manager" url="https://aws.amazon.com/secrets-manager/"/>
            <reference name="Protecting data using Encryption" url="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingEncryption.html"/>
            <reference name="Storing Lambda function encrypted secrets using environment variables and KMS" url="https://docs.aws.amazon.com/lambda/latest/dg/tutorial-env_console.html"/>
            <reference name="Storing and Retrieving a Secret (AWS Tutorial)" url="https://docs.aws.amazon.com/secretsmanager/latest/userguide/tutorials_basic.html"/>
          </references>
          <standards>
            <standard ref="2.1.1" supportedStandardRef="CIS AWS Standard"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;blockquote&gt; 
 &lt;p&gt;aws s3api head-object --bucket my-bucket --key my-key &lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt; Look for the line "ServerSideEncryption" and verify that it is set to "aws:kms" which indicates KMS Encryption.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-07-16T07:44:07.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AWS-KINESIS-ANALYTICS4" name="Monitor the Amazon Kinesis Data Analytics Service with CloudWatch" issueId="" platform="" cost="0" risk="44" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>&lt;div&gt;
  Monitor the Amazon Kinesis Data Analytics Service with CloudWatch 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  AWS provides various tools that you can use to monitor Amazon Kinesis Data Analytics. You can configure some of these tools to do the monitoring for you, while some of the tools require manual intervention. AWS recommends that you automate monitoring tasks as much as possible. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Automated Monitoring Tools 
&lt;/div&gt; 
&lt;div&gt;
  You can use the following automated monitoring tools to watch Amazon Kinesis Data Analytics and report when something is wrong: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Amazon CloudWatch Alarms - Watch a single metric over a time period that you specify, and perform one or more actions based on the value of the metric relative to a given threshold over a number of time periods. The action is a notification sent to an Amazon Simple Notification Service (Amazon SNS) topic or Amazon EC2 Auto Scaling policy. CloudWatch alarms do not invoke actions simply because they are in a particular state; the state must have changed and been maintained for a specified number of periods. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Amazon CloudWatch Logs - Monitor, store, and access your log files from AWS CloudTrail or other sources. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Amazon CloudWatch Events - Match events and route them to one or more target functions or streams to make changes, capture state information, and take corrective action. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS CloudTrail Log Monitoring - Share log files between accounts, monitor CloudTrail log files in real time by sending them to CloudWatch Logs, write log processing applications in Java, and validate that your log files have not changed after delivery by CloudTrail. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Manual Monitoring Tools 
&lt;/div&gt; 
&lt;div&gt;
  Another important part of monitoring Amazon Kinesis Data Analytics involves manually monitoring those items that the CloudWatch alarms don't cover. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The CloudWatch home page shows the following: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Current alarms and status 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Graphs of alarms and resources 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Service health status 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In addition, you can use CloudWatch to do the following: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Create customized dashboards to monitor the services you care about 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Graph metric data to troubleshoot issues and discover trends 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Search and browse all your AWS resource metrics 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Create and edit alarms to be notified of problems 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Logging and Monitoring in Amazon Kinesis Data Analytics for Apache Flink" url="https://docs.aws.amazon.com/kinesisanalytics/latest/java/monitoring-overview.html"/>
            <reference name="Monitoring Tools" url="https://docs.aws.amazon.com/kinesisanalytics/latest/dev/monitoring-automated-manual.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Viewing Amazon Kinesis Data Analytics Metrics and Dimensions 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  When your Amazon Kinesis Data Analytics application processes data streams, Kinesis Data Analytics sends the following metrics and dimensions to CloudWatch. You can use the following procedures to view the metrics for Kinesis Data Analytics. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  On the console, metrics are grouped first by service namespace, and then by the dimension combinations within each namespace. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To view metrics using the CloudWatch console 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Open the CloudWatch console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. In the navigation pane, choose Metrics. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. In the CloudWatch Metrics by Category pane for Kinesis Data Analytics, choose a metrics category. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. In the upper pane, scroll to view the full list of metrics. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To view metrics using the AWS CLI 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;At a command prompt, use the following command.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  aws cloudwatch list-metrics --namespace "AWS/KinesisAnalytics" --region region 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  Kinesis Data Analytics metrics are collected at the following levels: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Application&lt;/li&gt; 
  &lt;li&gt;&lt;br&gt;&lt;/li&gt; 
  &lt;li&gt;Input stream&lt;/li&gt; 
  &lt;li&gt;&lt;br&gt;&lt;/li&gt; 
  &lt;li&gt;Output stream&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-07-17T13:07:09.585">
              <output/>
            </source>
            <references>
              <reference name="Viewing Amazon Kinesis Data Analytics Metrics and Dimensions" url="https://docs.aws.amazon.com/kinesisanalytics/latest/dev/metrics-dimensions.html"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="aws-tier-1.16" name="Require server-side and in transit encryption" issueId="" platform="" cost="0" risk="49" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; Data in transit is data being accessed over the network, and therefore could be intercepted by someone else on the network or with access to the physical media the network uses. On an ethernet network, that could be someone with the ability to tap a cable, configure a switch to mirror traffic, or fool your client or a router into directing traffic to them before it moves on to the final destination. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; Server-side encryption (SSE) is about data encryption at rest-that is, Amazon S3 encrypts your data at the object level as it writes it to disks in its data centers and decrypts it for you when you access it. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; Amazon S3 offers 3 options of encrypting data at rest, depending on how you choose to manage the encryption keys: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Use SSE with Amazon S3-Managed Keys&lt;/li&gt; 
  &lt;li&gt;Use SSE with AWS KMS-Managed Keys&lt;/li&gt; 
  &lt;li&gt;Use SSE with Customer-Provided Keys&lt;/li&gt; 
 &lt;/ul&gt; At the time of object creation-that is, when you are uploading a new object or making a copy of an existing object-you can specify if you want Amazon S3 to encrypt your data by adding the "x-amz-server-side-encryptionheader" to the request. Set the value of the header to the encryption algorithm AES256 that Amazon S3 supports. Amazon S3 confirms that your object is stored using server-side encryption by returning the response header "x-amz-server-side-encryption". 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; No matter which of the three options you choose, you can create and attach a S3 bucket policy, that will deny any object creation S3 API (PUT Object, PUT Object - Copy, POST Object, Initiate Multipart Upload), if the request does not include the "x-amz-server-sideencryption" header requesting server-side encryption, and if the request was not done using SSL\TLS. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Rationale&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; When it comes to data at rest, if kept unencrypted, there are a few threats that one can think of, especially when the data is stored in the cloud: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;the threat that attackers are able to compromise Amazon S3 and gain access to the data that is stored in the Amazon S3 buckets.&lt;/li&gt; 
  &lt;li&gt;the "insider threat" where a malicious or rogue administrator steals a physical disk drive or server that contains data a customer has in the Amazon S3 buckets.&lt;/li&gt; 
  &lt;li&gt;the threat that a government uses a subpoena or warrant to get access to a customer's data in Amazon S3 without their knowledge.&lt;/li&gt; 
 &lt;/ul&gt; If data in transit is kept unencrypted: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Malicious users may intercept or monitor plaintext data transmitting across unencrypted network and gain unauthorized access to that jeopardize the confidentiality of the sensitive data.&lt;/li&gt; 
 &lt;/ul&gt; In all of these scenarios, encrypting data at rest and in transit, and properly managing the encryption keys can help mitigate the risk of unauthorized access to that data. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;br&gt; 
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;div&gt;
     Perform the following to ensure all objects placed in S3 are encrypted in transit and at rest: 
   &lt;/div&gt; 
   &lt;div&gt; 
    &lt;ul&gt; 
     &lt;li&gt;Create a new file, add the following to it, and save it as policy.json:&lt;/li&gt; 
    &lt;/ul&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt;
       { 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt;
        &amp;nbsp;"Version":"2012-10-17", 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt;
        &amp;nbsp;"Id":"PutObjPolicy", 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt;
        &amp;nbsp;"Statement":{ 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;div&gt;
         &amp;nbsp;"Sid":"DenyUnEncryptedObjectUploads", 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;div&gt;
         &amp;nbsp;"Effect":"Deny", 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;div&gt;
         &amp;nbsp;"Principal":"*", 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;div&gt;
         &amp;nbsp;"Action":"s3:PutObject", 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;div&gt;
         &amp;nbsp;"Resource":"arn:aws:s3:::&amp;lt;s3_bucket_name&amp;gt;/*", 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;div&gt;
         &amp;nbsp;"Condition":{ 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;blockquote&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;div&gt; 
        &lt;div&gt;
          &amp;nbsp;"Null":{ "s3:x-amz-server-side-encryption":"true" }, 
        &lt;/div&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/blockquote&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;blockquote&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;div&gt; 
        &lt;div&gt;
          &amp;nbsp;"Bool": { "aws:SecureTransport": "false" } 
        &lt;/div&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/blockquote&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;div&gt;
         &amp;nbsp;} 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt;
        &amp;nbsp;} 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt;
       } 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Attach the above bucket policy to each S3 bucket:&lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt;
      aws s3api put-bucket-policy --bucket &amp;lt;s3_bucket_name&amp;gt; --policy file://policy.json 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Get bucket policy" url="http://docs.aws.amazon.com/cli/latest/reference/s3api/get-bucket-policy.html"/>
            <reference name="List buckets" url="http://docs.aws.amazon.com/cli/latest/reference/s3api/list-buckets.html"/>
            <reference name="Put bucket policy" url="http://docs.aws.amazon.com/cli/latest/reference/s3api/put-bucket-policy.html"/>
            <reference name="Using Server-side Encryption" url="http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html"/>
          </references>
          <standards>
            <standard ref="1.16" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Using the Amazon unified command line interface:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;List all the S3 buckets from the AWS account:&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            aws s3api list-buckets --output table
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;For each S3 bucket, list the bucket policy and verify that a policy exists, the policy contains a statement to deny PutObject calls that do not require server-side encryption, and the policy denies requests that do not occur over a secure transport:&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            aws s3api get-bucket-policy --bucket &amp;lt;s3_bucket_name&amp;gt; --query 'Policy'
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            ...
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &amp;nbsp;{
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &amp;nbsp;"Sid": "DenyUnEncryptedObjectUploads",
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &amp;nbsp;"Effect": "Deny",
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &amp;nbsp;"Principal": "*",
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &amp;nbsp;"Action": "s3:PutObject",
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &amp;nbsp;"Resource": "arn:aws:s3:::/*",
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &amp;nbsp;"Condition": {
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &amp;nbsp;"Null": { "s3:x-amz-server-side-encryption": "true",
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &amp;nbsp;"Bool": { "aws:SecureTransport": "false" }
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &amp;nbsp;}
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &amp;nbsp;}
                            &lt;/blockquote&gt;
                            &lt;div&gt;
                            &lt;br&gt;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;div&gt;&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-03-17T11:46:08.089">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="restrict-s3-bucket-access" name="Restrict Amazon S3 Bucket Access" issueId="" platform="" cost="1" risk="49" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>&lt;div&gt;
  Unless you explicitly require anyone on the Internet to be able to read or write to your S3 bucket, you shall ensure that your S3 bucket is not public. The following are some of the steps you can take: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Use Amazon S3 block public access. Account administrators and bucket owners can easily set up centralized controls to limit public access to their Amazon S3 resources that are enforced regardless of how the resources are created. For more information, see Using Amazon S3 Block Public Access.&lt;/li&gt; 
  &lt;li&gt;Identify Amazon S3 bucket policies that allow a wildcard identity such as Principal "*" (which effectively means "anyone") or allows a wildcard action "*" (which effectively allows the user to perform any action in the Amazon S3 bucket).&lt;/li&gt; 
  &lt;li&gt;Similarly, note Amazon S3 bucket access control lists (ACLs) that provide read, write, or full-access to "Everyone" or "Any authenticated AWS user."&lt;/li&gt; 
  &lt;li&gt;Use the ListBuckets API to scan all of your Amazon S3 buckets. Then use GetBucketAcl, GetBucketWebsite, and GetBucketPolicy to determine whether the bucket has compliant access controls and configuration.&lt;/li&gt; 
  &lt;li&gt;Use AWS Trusted Advisor to inspect your Amazon S3 implementation.&lt;/li&gt; 
  &lt;li&gt;Consider implementing on-going detective controls using the s3-bucket-public-read-prohibited and s3-bucket-public-write-prohibited managed AWS Config Rules.&lt;br&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;br&gt; 
&lt;br&gt;</desc>
          <implementations/>
          <references>
            <reference name="AWS Security Checklist" url="https://d1.awsstatic.com/whitepapers/Security/AWS_Security_Checklist.pdf"/>
            <reference name="Amazon S3 Security Best Practices" url="https://github.com/awsdocs/amazon-s3-developer-guide/blob/master/doc_source/security-best-practices.md"/>
            <reference name="Introduction to Managing Access Permissions to Your Amazon S3 Resources" url="https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-managing-access-s3-resources.html"/>
            <reference name="Setting Bucket and Object Access Permissions" url="https://docs.aws.amazon.com/AmazonS3/latest/user-guide/set-permissions.html"/>
          </references>
          <standards>
            <standard ref="1.16" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="2.1.5" supportedStandardRef="CIS AWS Standard"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Prowler is a command line tool for AWS Security Best Practices Assessment, Auditing, Hardening and Forensics Readiness Tool.
                            It follows guidelines of the CIS Amazon Web Services Foundations Benchmark (49 checks) and has 40 additional checks including related to GDPR and HIPAA.
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            If you'd like to check there are no S3 buckets open to the Everyone or Any AWS user you can run the tool with the following arguments:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            ./prowler -c extra73
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-11-15T14:10:10.879">
              <output/>
            </source>
            <references>
              <reference name="Prowler: AWS CIS Benchmark Tool" url="https://github.com/toniblyx/prowler"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AWS-API-GW2" name="Use AWS Secrets Manager to securely rotate, manage, and retrieve database credentials, API keys, and other secrets" issueId="" platform="" cost="0" risk="49" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>&lt;div&gt;
  Securely rotate, manage, and retrieve database credentials, API keys, and other secrets. AWS recommends to use AWS Secrets Manager for this purpose. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  AWS Secrets Manager is a secrets management service that helps you protect access to your applications, services, and IT resources. This service enables you to easily rotate, manage, and retrieve database credentials, API keys, and other secrets throughout their lifecycle. Using Secrets Manager, you can secure and manage secrets used to access resources in the AWS Cloud, on third-party services, and on-premises. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  To get started with AWS Secrets Manager: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Identify your secrets and locate where they are used in your applications. 
&lt;/div&gt; 
&lt;div&gt;
  Sign in to the AWS Management Console using your AWS credentials and navigate to the Secrets Manager console. 
&lt;/div&gt; 
&lt;div&gt;
  Use the Secrets Manager console to upload the secret you identified. Alternatively, you can use the AWS SDK or AWS CLI to upload a secret (once per secret). You can also write a script to upload multiple secrets. 
&lt;/div&gt; 
&lt;div&gt;
  If your secret is not in use yet, follow the instructions on the console to configure automatic rotation. If applications are using your secret, complete steps (5) and (6) before configuring automatic rotation. 
&lt;/div&gt; 
&lt;div&gt;
  If other users or applications need to retrieve the secret, write an IAM policy to grant permissions to the secret. 
&lt;/div&gt; 
&lt;div&gt;
  Update your applications to retrieve secrets from Secrets Manager. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="AWS Secrets Manager" url="https://aws.amazon.com/secrets-manager/"/>
          </references>
          <standards>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt; 
 &lt;b&gt;How do I know when AWS Secrets Manager rotates a database credential?&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can configure Amazon CloudWatch Events to receive a notification when AWS Secrets Manager rotates a secret. You can also see when Secrets Manager last rotated a secret using the Secrets Manager console or APIs. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-06-18T15:23:56.773">
              <output/>
            </source>
            <references>
              <reference name="AWS Secrets Manager FAQs" url="https://aws.amazon.com/secrets-manager/faqs/"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Network-5.1" name="Use AWS VPC for networking" issueId="" platform="" cost="1" risk="44" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>AWS virtual private cloud is the de-facto standard for networking AWS as it provides additional security controls such as Security Groups, Network Access Control Lists (NACL's) and routing. 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  However the use of VPC is not compulsory and resources such as EC2 can be created outside of VPC (usingEC2 Classic). It is the recommendation to make all resources a member of a VPC if possible to benefit from the increased security controls they offer and reduce undue network exposure.&amp;nbsp; 
 &lt;div&gt;
   &amp;nbsp; 
  &lt;br&gt; 
  &lt;b&gt;Remediation:&lt;br&gt;&lt;/b&gt;Move or migrate the resources to a VPC. 
 &lt;/div&gt; 
  
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that each AWS resource you own that is able to exist in a VPC does so.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="aws-tier-1.1-1.2-1.3" name="Use the principle of least privilege on key ownership and usage" issueId="" platform="" cost="0" risk="44" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&amp;nbsp;&lt;br&gt;AWS Key Management Service (KMS) by default provides service Customer Managed Keys (CMK). Customers also have the ability to create CMKs, which allows for configuration of key rotation and key policy which is applied to the customer created CMK. You can use the key policy by itself to control who has access to the CMK and what actions each identity can perform. Controlling access this way specifies the full scope of access to the CMK in a single document (the key policy).Customer created CMKs can be used for:&amp;nbsp;&lt;br&gt;- AWS Service level encryption(e.g. EBS, RDS, S3).&amp;nbsp;&lt;br&gt;- Key management for file/application level encryption.&amp;nbsp;&lt;br&gt;&lt;br&gt;&lt;strong&gt;Rationale&lt;/strong&gt;&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;Ensures principle of least privilege on key ownership and usage.&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;&amp;nbsp;&lt;br&gt;Using the Amazon unified command line interface:&amp;nbsp;&lt;br&gt;- If there is no alias listed for Web tier, create a new KMS key and note the "KeyId" element:&lt;/p&gt; 
&lt;p&gt;aws kms create-key&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;- Create an alias for the Web tier key using the above KeyId:&amp;nbsp;&lt;br&gt;aws kms create-alias --alias-name &amp;lt;tier_kms_alias&amp;gt; --target-key-id &amp;lt;tier_kms_key&amp;gt;&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="AWS CLI Command Reference:create-alias" url="https://docs.aws.amazon.com/cli/latest/reference/kms/create-alias.html"/>
            <reference name="AWS CLI Command Reference:create-key" url="https://docs.aws.amazon.com/cli/latest/reference/kms/create-key.html"/>
            <reference name="Amazon docs: list aliases" url="https://docs.aws.amazon.com/cli/latest/reference/kms/list-aliases.html"/>
          </references>
          <standards>
            <standard ref="1.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="1.2" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="1.3" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Run the following command via the Amazon unified command line interface to determine if a web-tier KMS key exists: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  aws kms list-aliases --query 'Aliases[?AliasName == '&amp;lt;web_tier_kms_alias&amp;gt;']' 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt;If such a key exists, an AliasArnproperty will be displayed in the output.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-12-11T12:00:19.247">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="authorization" name="Authorization" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="AWS-LOSS-CONTROL-ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the control of the environment, due to improper definition and configuration of user accounts or role groups.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-IAM-2.7">
                  <countermeasures>
                    <countermeasure ref="AWS-KINESIS-ANALYTICS1" mitigation="50"/>
                    <countermeasure ref="restrict-s3-bucket-access" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-KINESIS-ANALYTICS1" mitigation="50"/>
                <countermeasure ref="restrict-s3-bucket-access" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="general" name="General" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="AWS-LOSS-CONTROL-ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the control of the environment, due to improper definition and configuration of user accounts or role groups.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-IAM-2.7">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-IAM-2.7" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-320">
                  <countermeasures>
                    <countermeasure ref="AWS-API-GW2" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-API-GW2" mitigation="50"/>
                <countermeasure ref="Hydras-AWS-IAM-2.7" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="AWS-LOST-ACCESS-ROOT" name="Attackers gain unauthorized access to the root account due to the lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;div&gt;
                                Attackers could gain unauthorized access to the administrator account due to the lack of
                                the account and its security mechanisms, like modifying credentials and adding/removing
                                user accounts.
                                &lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-IAM-2.1">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-IAM-2.2" mitigation="34"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-IAM-2.2">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-IAM-2.1" mitigation="33"/>
                    <countermeasure ref="Hydras-AWS-IAM-2.3" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="Hydras-AWS-IAM-2.1" mitigation="33"/>
                <countermeasure ref="Hydras-AWS-IAM-2.2" mitigation="34"/>
                <countermeasure ref="Hydras-AWS-IAM-2.3" mitigation="33"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="AWS-LOST-ACCESS-USER" name="Attackers gain unauthorized access to the user account due to the lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the user account due to a lack of configuration of the account, such as an incorrect configuration of the security question to reset the password.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-IAM-2.6">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-IAM-2.6" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-IAM-2.8">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-IAM-2.4" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="Hydras-AWS-IAM-2.4" mitigation="50"/>
                <countermeasure ref="Hydras-AWS-IAM-2.6" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="ACCESS-ENCRYPTION-KEYS" name="Attackers obtain access to encryption keys and are able to decrypt ciphertext" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Cryptography is intrinsically related to the secure management of cryptographic keys which need to be protected and securely stored by applications. Leaking cryptographic keys diminishes any advantage of cryptography, allowing attackers to break message confidentiality and integrity, and to authenticate as legitimate users or impersonate legitimate services.&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-320">
                  <countermeasures>
                    <countermeasure ref="aws-tier-1.1-1.2-1.3" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="aws-tier-1.1-1.2-1.3" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="OWASP A10:2017" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="Hydras-AWS-Foundation" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident.&lt;br /&gt;
 Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Logging-3.1" mitigation="25"/>
                    <countermeasure ref="Hydras-AWS-Logging-3.9" mitigation="25"/>
                    <countermeasure ref="Hydras-AWS-Monitoring-4.9" mitigation="25"/>
                    <countermeasure ref="Hydras-AWS-Network-5.1" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="Hydras-AWS-Logging-3.1" mitigation="25"/>
                <countermeasure ref="Hydras-AWS-Logging-3.9" mitigation="25"/>
                <countermeasure ref="Hydras-AWS-Monitoring-4.9" mitigation="25"/>
                <countermeasure ref="Hydras-AWS-Network-5.1" mitigation="25"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="ACCESS-TO-DATA-AWS" name="Sensitive data is compromised through unauthorized access to data" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers can gain access to sensitive data when the data is in transit in clear text, or when the data is stored without encryption.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-S3-7.4">
                  <countermeasures>
                    <countermeasure ref="AWS-KINESIS-DATA3" mitigation="50"/>
                    <countermeasure ref="Hydras-AWS-S3-7.4" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-522">
                  <countermeasures>
                    <countermeasure ref="AWS-API-GW2" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-API-GW2" mitigation="100"/>
                <countermeasure ref="AWS-KINESIS-DATA3" mitigation="50"/>
                <countermeasure ref="Hydras-AWS-S3-7.4" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="logging-and-monitoring" name="Logging and Monitoring" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="OWASP A10:2017" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="Hydras-AWS-Foundation" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident.&lt;br /&gt;
 Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="AWS-KINESIS-ANALYTICS4" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-KINESIS-ANALYTICS4" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="networking" name="Networking" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="EAVESDROPPING-COMMUNICATIONS" name="An attacker eavesdrops on the communication between the client and server and decrypts the data" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Eavesdropping on communication is a network attack that captures network packets transmitted by other computers and reads the data content. This type of network attack is most effective when weak encryption services are used. An attacker could eavesdrop on the communication between the client and server and decrypt the encrypted data.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="misconfigured-s3-access-policies">
                  <countermeasures>
                    <countermeasure ref="aws-tier-1.16" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="aws-tier-1.16" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="f9894a29-bb56-492f-be1a-e7ef6b2b4d27" diagramComponentId="2dceff33-bdd1-4467-babb-81b3f7f2e855" ref="938d6fce-4ffd-4fa0-a8f9-d4f17468b91b" name="IoT Core" desc="" library="Hydras-AWS-Foundation" parentComponentRef="" componentDefinitionRef="CD-IOT-CORE">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="trusted-partner"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="AWS-Network-5.1" name="Insufficient resource identification" state="0" impact="100" issueId="">
          <desc>Resources are not registered in the safety net systems, and/or additional unidentified resources exist. As such, additional weakness might be introduced.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-07-28T01:29:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.7" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="">
          <desc>Credentials for groups and roles not properly configured. User accounts are configured with excessive privileges.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-07-28T01:29:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-AWS-IOT-THINGS-CORE1" name="Control access to AWS IoT Core resources" issueId="" platform="" cost="0" risk="49" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>&lt;p&gt;Control access to AWS IoT Core resources&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; By default, IAM users and roles don't have permission to create or modify AWS IoT resources. They also can't perform tasks using the AWS Management Console, AWS CLI, or AWS API. An IAM administrator must create IAM policies that grant users and roles permission to perform specific API operations on the specified resources they need. The administrator must then attach those policies to the IAM users or groups that require those permissions.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Example - Viewing AWS IoT Device Advisor resources based on tags&lt;/p&gt; 
&lt;p&gt;You can use conditions in your identity-based policy to control access to AWS IoT Device Advisor resources based on tags. The following example shows how you can create a policy that allows viewing a particular suite definition. However, permission is granted only if the suite definition tag has SuiteType set to the value of MQTT. This policy also grants the permissions necessary to complete this action on the console.&lt;/p&gt; 
&lt;p&gt;{ "Version": "2012-10-17", "Statement": [ { "Sid": "ViewSuiteDefinition", "Effect": "Allow", "Action": "iotdeviceadvisor:GetSuiteDefinition", "Resource": "arn:aws:iotdeviceadvisor:&lt;strong&gt;:*:suitedefinition/&lt;/strong&gt;", "Condition": { "StringEquals": {"aws:ResourceTag/SuiteType": "MQTT"} } } ]&lt;br&gt; }&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="AWS IoT identity-based policy examples" url="https://docs.aws.amazon.com/iot/latest/developerguide/security_iam_id-based-policy-examples.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;With the IAM policy simulator, you can test and troubleshoot identity-based policies, IAM permissions boundaries, Organizations service control policies, and resource-based policies.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-07-28T01:29:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="aws-tier-5.1" name="Tag all resources" issueId="" platform="" cost="0" risk="42" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>&lt;div&gt;
 &lt;b&gt;Description&lt;/b&gt;:
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  Tags enable customers to categorize AWS resources in different ways, for example, by purpose, owner, or environment.
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  Each tag consists of a key and an optional value, both of which customer's define.
  You should define a set of tags for the following items to help you track each instance's owner and operating environment, cost center, and other items.
&lt;/div&gt;
&lt;div&gt;
 &lt;ol&gt;
  &lt;li&gt;Amazon EC2 instances&lt;/li&gt;
  &lt;li&gt;ELB&lt;/li&gt;
  &lt;li&gt;EBS Volumes&lt;/li&gt;
  &lt;li&gt;S3 Buckets&lt;/li&gt;
 &lt;/ol&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  A resource may have up to 10 tags associated with key &amp;amp; value such as:
&lt;/div&gt;
&lt;div&gt;
 &lt;ul&gt;
  &lt;li&gt;Key=tier, Value=app&lt;/li&gt;
  &lt;li&gt;Key=environment, Value=production&lt;/li&gt;
  &lt;li&gt;Key=costcenter, Value=sales&lt;/li&gt;
 &lt;/ul&gt;
 &lt;div&gt;
  &lt;b&gt;Remediation:&lt;/b&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;b&gt;&lt;br&gt;&lt;/b&gt;
  Tag all your 3 tier Web Application resources based on their tier membership (Web, App, Data), and your organizational requirements.
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="PCI Cloud Compliance" url="http://d0.awsstatic.com/whitepapers/compliance/AWS_Anitian_Wookbook_PCI_Cloud_Compliance.pdf"/>
            <reference name="Resource groups and tagging" url="https://aws.amazon.com/blogs/aws/resource-groups-and-tagging/"/>
          </references>
          <standards>
            <standard ref="5.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Verify tags are being used.&amp;nbsp;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-03-17T16:14:01.280">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="AWS-LOSS-CONTROL-ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the control of the environment, due to improper definition and configuration of user accounts or role groups.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-IAM-2.7">
                  <countermeasures>
                    <countermeasure ref="C-AWS-IOT-THINGS-CORE1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-IOT-THINGS-CORE1" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="UNAUTHORIZED-CONECTIONS-AWS" name="Attackers gain unauthorized network access" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-Network-5.1">
                  <countermeasures>
                    <countermeasure ref="aws-tier-5.1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="aws-tier-5.1" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="6acd022a-b7f2-4b1f-9f5d-f56cb71b5075" diagramComponentId="9300a9e8-4358-4162-b18f-89310d12f809" ref="ca4a3744-ee80-4b47-9c45-caee9183a2fe" name="MQTT Client" desc="" library="iot-security-compliance-framework" parentComponentRef="" componentDefinitionRef="mqtt-client">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="auth-cred-client-unprotected" name="Authentication credentials unprotected on the client side" state="0" impact="100" issueId="">
          <desc>Client side has insufficiently protected credentials, which allows remote attackers to obtain sensitive information via unspecified vectors.&amp;nbsp;
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-02-27T16:18:34.874">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-319" name="Cleartext Transmission of Sensitive Information" state="0" impact="100" issueId="">
          <desc>The software transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.

Many communication channels can be "sniffed" by attackers during data transmission. For example, network traffic can often be sniffed by any attacker who has access to a network interface. This significantly lowers the difficulty of exploitation by attackers.  </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-03-13T16:00:43.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-306" name="Missing Authentication for Critical Function" state="0" impact="100" issueId="">
          <desc>The software does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-03-13T16:00:44.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="mqtt-client-dos" name="MQTT client does not present  protective measures against denial-of-service (DoS) attacks" state="0" impact="100" issueId="">
          <desc>&lt;div&gt;
                    MQTT client does not have measures to protect from excessively high message frequency on subscribed topics. 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;br&gt; 
                    &lt;/div&gt;
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-02-26T15:46:57.727">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="mqtt-client-authz" name="MQTT client don't authorize commands coming from IoT applications" state="0" impact="100" issueId="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-02-21T10:42:32.674">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="enforce-app-id-validation-mqtt-client" name="Enforce Application ID validation in the MQTT client" issueId="" platform="" cost="0" risk="67" state="Recommended" owner="cnmarrow" library="iot-security-compliance-framework" source="RULES" edited="false">
          <desc>&lt;div&gt;
                    Application ID validation is an extra level of security between the IoT application and the device to ensure that no fake application can send commands to the device. This mechanism can be used both as startup security and as a communication security mechanism. By using this scheme, the device stores the unique ID of the IoT application and validates it when it processes the commands that are coming from the IoT application. 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;br&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt;
                    If the IoT application sends an invalid unique ID with a command, the command is ignored by the device. If the device has storage capability, the IoT application unique ID can be encrypted and stored. In that case, the unique ID request is not necessary after every restart. 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;br&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;b&gt;Remediation&lt;/b&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt;
                    Enforce Application ID validation in the MQTT client 
                    &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="Securing IoT devices and gateways" url="https://developer.ibm.com/technologies/iot/articles/iot-trs-secure-iot-solutions1/"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-02-21T10:43:51.555">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="input-val-mqtt-clients" name="Implement Input Validation on MQTT clients" issueId="" platform="" cost="0" risk="67" state="Recommended" owner="cnmarrow" library="iot-security-compliance-framework" source="RULES" edited="false">
          <desc>&lt;div&gt;
                    It's a good pattern to always validate inputs, no matter how trusted the environment is. 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;br&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;b&gt;Remediation&lt;/b&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt;
                    Your MQTT clients should at least validate the following: 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;ul&gt; 
                    &lt;li&gt;&lt;b&gt;MQTT topics&lt;/b&gt;: Did the client receive messages on topics the client did not subscribe to? In such a case your application should ignore the message. If you are using wildcard subscriptions, only process messages on topics you know the client can interpret.&lt;/li&gt; 
                    &lt;li&gt;&lt;b&gt;MQTT message payload&lt;/b&gt;: The payload of MQTT messages is always binary. The structure of the data in the payload is typically defined on the application level. Always make sure you can parse the actual message. So if you are expecting a JSON payload but the actual payload is in XML, your parser will probably have a hard time interpreting the messages. So always validate if your application can handle the input, otherwise malicious MQTT clients could craft MQTT packets that your subscribers can't handle.&lt;/li&gt; 
                    &lt;/ul&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;br&gt; 
                    &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="Your MQTT Applications: Are they resilient enough?" url="https://www.hivemq.com/blog/are-your-mqtt-applications-resilient-enough/"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-02-26T16:00:43.126">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="mqtt-client-throttling" name="Implement MQTT throttling on the client-side" issueId="" platform="" cost="0" risk="67" state="Recommended" owner="cnmarrow" library="iot-security-compliance-framework" source="RULES" edited="false">
          <desc>Most MQTT client applications are not designed for handling huge amounts of MQTT messages per second. It's important to know your client's load limitations and then throttle the message ingestion rate to a limit that doesn't overwhelm your client. Such an implementation typically stops to read from the socket as soon as a specific bytes per second or messages per second rate threshold is exceeded. So even if the broker tries to send lots of messages, TCP backpressure mechanisms take effect and your client won't be overwhelmed. If this is not possible with your client library, you should think about implementing load shedding, which means you throw away messages that you can't handle. This is not optimal but certainly better than constantly crashing your client. 
                    &lt;div&gt; 
                    &lt;br&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;b&gt;Remediation&lt;/b&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt;
                    Throttle the message ingestion rate to a limit that doesn't overwhelm your client. 
                    &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="Throttling MQTT Data" url="https://mqtt.cool/throttling-mqtt-data/"/>
            <reference name="Your MQTT Applications: Are they resilient enough?" url="https://www.hivemq.com/blog/are-your-mqtt-applications-resilient-enough/"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-02-26T15:48:57.496">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="limit-mqtt-messages-sizes" name="Set a limit for MQTT message sizes" issueId="" platform="" cost="0" risk="67" state="Recommended" owner="cnmarrow" library="iot-security-compliance-framework" source="RULES" edited="false">
          <desc>&lt;div&gt;
                    MQTT defines a maximum message size of 256MB. In most MQTT deployment scenarios, messages are often smaller than a kilobyte. If you are familiar with your usage scenario and you know the maximum message size that can occur, it makes sense to decrease the maximum allowed message size to that limit. If no limit is set, it is possible for malicious MQTT clients to send large messages (which can result in excessive memory consumption and unneeded bandwidth usage). 
                    &lt;br&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;br&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;b&gt;Remediation&lt;/b&gt; 
                    &lt;br&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt;
                    Limit the maximum message size on a global and per-client basis. 
                    &lt;/div&gt;
                    </desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt; 
                        &lt;ul&gt; 
                        &lt;li&gt;Use a client to send and receive data over MQTT.&lt;br&gt;&lt;/li&gt; 
                        &lt;li&gt;Increase the message size of the data in a development/testing environment to test the presence of maximum message size thresholds. &lt;br&gt;&lt;/li&gt; 
                        &lt;li&gt;Verify that when the MQTT broker receives a message that exceeds that threshold, it drops the packet.&lt;/li&gt; 
                        &lt;/ul&gt; 
                        &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-05-25T13:30:34.342">
              <output/>
            </source>
            <references>
              <reference name="MQTT Client and Mosquitto Broker Message Restrictions With Examples" url="https://www.steves-internet-guide.com/mqtt-broker-message-restrictions/"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="irrevocable-secure-boot" name="The product’s processor system has an irrevocable Secure Boot process" issueId="" platform="" cost="0" risk="67" state="Recommended" owner="cnmarrow" library="iot-security-compliance-framework" source="RULES" edited="false">
          <desc>&lt;div&gt;
                    The product's processor system has an irrevocable Secure Boot process, to provide assurance that it's running code that hasn't been compromised. 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;br&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;b&gt;Rationale:&lt;/b&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt;
                    Secure boot is a UEFI (Unified Extensible Firmware Interface) process where the Operating System boot images and code are authenticated against the hardware before they are allowed to be used in the boot process. This way, it ensures that the boot and Operating System software is the intended manufacturer version and hasn't been tampered by malware or other malicious third parties. 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;div&gt;
                    In essence, the manufacturer stores their private key very securely and never reveals it to anyone. When a device is manufactured, the public key associated with the private key is placed in secure storage on the device. The bootloader code is developed using a secure development process and then a cryptographic hash of it is digitally signed with the manufacturer's private key. Whenever bootloader firmware is to be installed on the device, the hash signature is checked against the embedded public key on the device to confirm that it is a genuine hash value from that manufacturer. The firmware code is then hashed again and compared with the signed hash. If this matches (which indicates the firmware code hasn't been altered), only then will the new firmware get installed. 
                    &lt;/div&gt; 
                    &lt;div&gt;
                    Thereafter, whenever the device boots, the installed bootloader is again verified before being allowed to run. Cryptographic functions for these purposes and storage of keys can be provided by dedicated chips or modules such a Secure Access Modules (SAM) or Trusted Platform Modules (TPM). 
                    &lt;/div&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;br&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;b&gt;Remediation:&lt;/b&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt;
                    The product's processor system has to be set up beforehand in such a way that it only authenticates code generated using trusted security credentials. 
                    &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="Device Secure Boot" url="https://www.iotsecurityfoundation.org/best-practice-guide-articles/device-secure-boot/"/>
            <reference name="Secure boot" url="https://docs.microsoft.com/en-us/windows-hardware/design/device-experiences/oem-secure-boot"/>
            <reference name="The whys and hows of secure boot" url="https://www.embedded.com/the-whys-and-hows-of-secure-boot/"/>
          </references>
          <standards>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-02-26T11:57:28.633">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="data-integrity-checks" name="Use data integrity checks" issueId="" platform="" cost="0" risk="67" state="Recommended" owner="cnmarrow" library="iot-security-compliance-framework" source="RULES" edited="false">
          <desc>&lt;div&gt;
                    Use data integrity checks with stamps as a good addition to message encryption. Even if the attacker can decrypt the message (and encrypt it after modification), the integrity check still fails if the message was altered. Especially if you use MQTT without TLS, data integrity checks add an additional layer of security. 
                    &lt;br&gt; 
                    &lt;br&gt;MQTT PUBLISH packets can contain a digital signature/MAC/checksum that verifies the contents of the packet. This calculated stamp is typically added to the payload (for example, at the beginning of the payload). The receiver of the packet can verify the integrity of the data by recalculating/validating the stamp. This validation assures that the message was not tampered with by a malicious third party. 
                    &lt;br&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;br&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;b&gt;Remediation&lt;/b&gt; 
                    &lt;br&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt;
                    Use data integrity checks with stamps. 
                    &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="MQTT Message Data Integrity - MQTT Security Fundamentals" url="https://www.hivemq.com/blog/mqtt-security-fundamentals-mqtt-message-data-integrity/"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt; 
                        &lt;li&gt;Review the project documentation and use exploratory testing looking for parts of the application/system (components i.e. For example, input fields, databases or logs) that move, store or handle data/information.&lt;/li&gt; 
                        &lt;li&gt;For each identified component determine what type of data/information is logically acceptable and what types the application/system should guard against. Also, consider who according to the business logic is allowed to insert, update and delete data/information and in each component.&lt;/li&gt; 
                        &lt;li&gt;Attempt to insert, update or edit delete the data/information values with invalid data/information into each component (i.e. input, database, or log) by users that should not be allowed per the business logic workflow.&lt;/li&gt; 
                        &lt;/ul&gt; 
                        &lt;br&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-05-25T13:34:13.516">
              <output/>
            </source>
            <references>
              <reference name="Test Integrity Checks" url="https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/10-Business_Logic_Testing/03-Test_Integrity_Checks"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="iot-hardware-protect-creds" name="Use hardware security solutions to protect sensitive information on IoT devices" issueId="" platform="" cost="0" risk="67" state="Recommended" owner="cnmarrow" library="iot-security-compliance-framework" source="RULES" edited="false">
          <desc>IoT devices need an efficient secure processor to store its identity and handle authentication, and to store public and private encryption keys, and to store keys and run hashing algorithms for verifying software signatures to be able to verify software signatures. 
                    &lt;div&gt; 
                    &lt;div&gt;
                    Likely candidates for hardware security solutions to protect sensitive data in IoT devices include PUF (Physically Unclonable Functions), TPM (Trusted Platform Module), HSM (Hardware Security Module) and TrustZone.&amp;nbsp; 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;ul&gt; 
                    &lt;li&gt; PUF uses random patterns in the silicon to differentiate chips from each other and creates a unique random number. This generated random number is used to seed a strong device ID and cryptographic keys to create a hardware root of trust.&lt;/li&gt; 
                    &lt;li&gt;Security co-processors are physically separate chips offering true isolation of private keys. A TPM offers isolation and facilities for the secure generation of cryptographic keys, and limitation of their use, and true random number generation. It also includes capabilities such as remote attestation and sealed storage. However, these powerful security capabilities come at price, usually moving deployment to higher end IoT devices.&amp;nbsp;&lt;/li&gt; 
                    &lt;li&gt;A Hardware Security Module (HSM) is another physically separate chip and likely at a lower cost compared to a TPM. Like the TPM, it safeguards and manages digital keys for strong authentication and provides crypto processing. An HSM traditionally comes in the form of a large plug-in card or a separate external device attaching to the protected device, making it somewhat less suited to an IoT device. Depending upon the perceived and likely threat vectors, an HSM may provide an effective solution.&lt;/li&gt; 
                    &lt;li&gt;Trust Zone is another single chip solution segregating execution space into secure and insecure worlds. Insecure apps are not allowed to access security-critical assets. Those same security critical assets are isolated from tampering. Like a TPM, cost moves it to higher-end devices.&lt;/li&gt; 
                    &lt;/ul&gt; 
                    &lt;div&gt; 
                    &lt;b&gt;Remediation&lt;/b&gt; 
                    &lt;/div&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt;
                    Use&amp;nbsp;hardware security solutions (like PUF, TPM, HSM or Trust Zone) to protect sensitive data in IoT devices. 
                    &lt;/div&gt; 
                    &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="Device security" url="https://cloud.google.com/iot/docs/concepts/device-security"/>
            <reference name="Protecting the IoT with Secure Hardware" url="https://www.digikey.com/en/articles/techzone/2017/mar/protecting-the-iot-with-secure-hardware"/>
            <reference name="Securing Edge Nodes" url="https://realtimelogic.com/downloads/docs/IoT-Security-Solutions.pdf"/>
            <reference name="What is an IoT Hardware Secure Element?" url="https://cerberus-laboratories.com/blog/iot_hsms/"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-02-27T16:34:46.859">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="mqtt-payload-encryption" name="Use MQTT payload encryption" issueId="" platform="" cost="0" risk="34" state="Recommended" owner="cnmarrow" library="iot-security-compliance-framework" source="RULES" edited="false">
          <desc>&lt;div&gt;
                    TLS provides security on the network layer while MQTT payload encryption provides security on the application layer, so they can be used in conjunction without conflict. MQTT payload encryption only solves the problem of protecting application messages from eavesdroppers or untrusted MQTT clients (if no authentication mechanism is in place). An attacker can still replay the message or modify parts of the message, such as the topic, if there is no secure communication channel over TLS. 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;br&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt;
                    MQTT Payload encryption is the encryption of application-specific data on the application level (typically, the MQTT PUBLISH packet payload or the CONNECT LWT payload). This approach allows end-to-end encryption of application data even on untrusted environments. While the message metadata such as the MQTT Topic stays intact, the payload of the message gets encrypted. This type of encryption is not defined in the MQTT specification and is completely application specific. 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;br&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt;
                    Only the payload data (private sensor information) of the message needs to be encrypted. The message fields of MQTT PUBLISH messages are not changed. The payload information is binary, so no special encoding mechanism is required while it transmits the message. Also, no specific changes are required on the broker side because the MQTT message format remains the same. Only the application that is interpreting the message payload needs to decrypt the message to understand the content. 
                    &lt;br&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;br&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt;
                    Advantages of Payload Encryption: 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;ul&gt; 
                    &lt;li&gt;Complete end-to-end message security.&lt;/li&gt; 
                    &lt;li&gt;Adds another layer of security for applications that are transmitting highly sensitive data.&lt;/li&gt; 
                    &lt;li&gt;Appropriate in situations where TLS cannot be used.&lt;br&gt;&lt;/li&gt; 
                    &lt;/ul&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt;
                    Disadvantages of Payload Encryption: 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;ul&gt; 
                    &lt;li&gt;Might not be possible to implement in devices with very low resources.&lt;/li&gt; 
                    &lt;li&gt;Messages can still be modified by attacker if a secured communication channel is not used.&lt;br&gt; &lt;/li&gt; 
                    &lt;/ul&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;br&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;b&gt;Remediation&lt;/b&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt;
                    Use payload encryption if you can't use TLS but still don't want to send your application data in plain text. Payload encryption provides an additional layer of security since all your application data is secured. 
                    &lt;br&gt; 
                    &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="Securing IoT data over the network" url="https://developer.ibm.com/technologies/iot/articles/iot-trs-secure-iot-solutions2/"/>
            <reference name="Securing MQTT Systems - MQTT Security Fundamentals" url="https://www.hivemq.com/blog/mqtt-security-fundamentals-payload-encryption/"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt; 
                        &lt;ul&gt; 
                        &lt;li&gt;Use a standard packet sniffing tool such as Wireshark to inspect MQTT traffic.&lt;/li&gt; 
                        &lt;/ul&gt; 
                        &lt;/div&gt; 
                        &lt;div&gt; 
                        &lt;ul&gt; 
                        &lt;li&gt;Check that MQTT PUBLISH messages are encrypted (not visible in clear text).&lt;/li&gt; 
                        &lt;/ul&gt; 
                        &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-05-26T08:20:06.224">
              <output/>
            </source>
            <references>
              <reference name="Examination of vulnerabilities in Message Queuing Telemetry Transport (MQTT) in IoT Systems and implementation of countermeasures" url="https://www.researchgate.net/publication/338335323_Examination_of_vulnerabilities_in_Message_Queuing_Telemetry_Transport_MQTT_in_IoT_Systems_and_implementation_of_countermeasures"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="IOT2.4.7.13" name="Where the MQTT protocol is used, it is protected by a TLS connection with no known cipher vulnerabilities" issueId="" platform="" cost="1" risk="34" state="Recommended" owner="cnmarrow" library="iot-security-compliance-framework" source="RULES" edited="false">
          <desc>&lt;p&gt;Where the &lt;span class="caps"&gt;MQTT&lt;/span&gt; protocol is used, it is protected by a &lt;span class="caps"&gt;TLS&lt;/span&gt; connection with no known cipher vulnerabilities.&lt;/p&gt; 
                    &lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br&gt;&lt;/font&gt;&lt;/b&gt; &lt;span class="caps"&gt;MQTT&lt;/span&gt; (Message Queue Telemetry Transport), is a very lightweight and widely used messaging and information exchange protocol for IoT devices throughout the world. The &lt;span class="caps"&gt;MQTT&lt;/span&gt; communication can be encrypted using &lt;span class="caps"&gt;TLS&lt;/span&gt; / &lt;span class="caps"&gt;SSL&lt;/span&gt; protocols, ensuring a secure and safe communication.&lt;/p&gt; 
                    &lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br&gt;&lt;/font&gt;&lt;/b&gt; Ensure that where the &lt;span class="caps"&gt;MQTT&lt;/span&gt; protocol is used, it is protected by a &lt;span class="caps"&gt;TLS&lt;/span&gt; connection with no known cipher vulnerabilities.&lt;/p&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="MQTT Version 3.1.1 Plus Errata 01" url="https://docs.oasis-open.org/mqtt/mqtt/v3.1.1/mqtt-v3.1.1.html"/>
            <reference name="MQTT and CoAP, IoT Protocols" url="https://www.eclipse.org/community/eclipse_newsletter/2014/february/article2.php"/>
          </references>
          <standards>
            <standard ref="2.4.7.13" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.7.13" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-03-13T16:00:43.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AUTHENTICATION AND AUTHORIZATION" name="Authentication and Authorization" desc="" library="iot-security-compliance-framework">
          <threats>
            <threat ref="mqtt-client-fake-app" name="An attacker can simulate a fake application to send commands to the MQTT client" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iot-security-compliance-framework" editable="true">
              <desc>An attacker can simulate a fake application to send commands to the MQTT client to get sensitive data or to change their configuration.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="mqtt-client-authz">
                  <countermeasures>
                    <countermeasure ref="enforce-app-id-validation-mqtt-client" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce-app-id-validation-mqtt-client" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cred-extract-mqtt-client" name="Attackers can extract authentication credentials from the client and use them to log in to the MQTT broker" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iot-security-compliance-framework" editable="true">
              <desc>&lt;div&gt;
                            An attacker who manages to extract the X.509 certificate/private key pair from a device can use the certificate/key for either eavesdropping on the communication or for exploiting an IoT solution. A unique certificate per device makes it possible to disable the exploited certificate/key by using a revocation list; however, this requires that the IoT solution can detect the exploitation in the first place. A solution that uses the same certificate/key in all devices has lost all integrity if someone manages to extract it from any single device. 
                            &lt;/div&gt; 
                            &lt;div&gt; 
                            &lt;br&gt; 
                            &lt;/div&gt; 
                            &lt;div&gt;
                            The complexity associated with extracting the certificate/key from a device greatly depends on the type of device and the components used in that device. A device based on a high-level operating system where the certificate/key is stored in a file system on an external flash memory module makes it much easier for a hacker to extract than a certificate/key for a device using internal microcontroller flash memory and where the JTAG fuse has been blown. 
                            &lt;/div&gt;
                            </desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="RSA Keys Found in IoT Medical Devices, Implants Prone to Attack" url="https://healthitsecurity.com/news/rsa-keys-found-in-iot-medical-devices-implants-prone-to-attack"/>
              </references>
              <weaknesses>
                <weakness ref="auth-cred-client-unprotected">
                  <countermeasures>
                    <countermeasure ref="iot-hardware-protect-creds" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="iot-hardware-protect-creds" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="NETWORKING" name="Networking" desc="" library="iot-security-compliance-framework">
          <threats>
            <threat ref="firmware-update-mqtt" name="An attacker can change the firmware update link over MQTT in such way that the victim devices install malicious firmware" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iot-security-compliance-framework" editable="true">
              <desc>An attacker who has already known the data packets by sniffing the traffic can modify the data in transit. One of the interesting scenarios happens when attacker identifies someone who sends a link to download a firmware update for some devices over MQTT. The attacker can change the link in such way that the victim devices install malicious firmware that transforms them into botnets.
                            </desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-306">
                  <countermeasures>
                    <countermeasure ref="irrevocable-secure-boot" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="irrevocable-secure-boot" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="mqtt-client-dos" name="An attacker can overload MQTT clients due to too high message frequency on subscribed topics" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iot-security-compliance-framework" editable="true">
              <desc>An attacker can send a large volume of dataset messages with the goal of overwhelming the subscriber, the middleware or dependent components such as CPU, TCP/IP stack, operating system, or the file system.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="mqtt-client-dos">
                  <countermeasures>
                    <countermeasure ref="data-integrity-checks" mitigation="25"/>
                    <countermeasure ref="input-val-mqtt-clients" mitigation="25"/>
                    <countermeasure ref="limit-mqtt-messages-sizes" mitigation="25"/>
                    <countermeasure ref="mqtt-client-throttling" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="data-integrity-checks" mitigation="25"/>
                <countermeasure ref="input-val-mqtt-clients" mitigation="25"/>
                <countermeasure ref="limit-mqtt-messages-sizes" mitigation="25"/>
                <countermeasure ref="mqtt-client-throttling" mitigation="25"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="CAPEC-157" name="An attacker monitors information transmitted between logical or physical nodes of a network" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iot-security-compliance-framework" editable="true">
              <desc>&lt;p&gt;An attacker monitors information transmitted between logical or physical nodes of a network. The attacker need not be able to prevent reception or change content but must simply be able to observe and read the traffic. The attacker might precipitate or indirectly influence the content of the observed transaction, but the attacker is never the intended recipient of the information. Any transmission medium can theoretically be sniffed if the attacker can listen to the contents between the sender and recipient.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-319">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.7.13" mitigation="50"/>
                    <countermeasure ref="mqtt-payload-encryption" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="IOT2.4.7.13" mitigation="50"/>
                <countermeasure ref="mqtt-payload-encryption" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="0992ee0f-a258-4cfe-a03f-23857ab48407" diagramComponentId="a373861b-8ad4-4d1d-9258-444267e1d8b4" ref="9aafa62e-844a-489a-84aa-e63325748cf4" name="IoT Analytics" desc="" library="Hydras-AWS-Foundation" parentComponentRef="" componentDefinitionRef="CD-IOT-ANALYTICS">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="trusted-partner"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="AWS-Network-5.1" name="Insufficient resource identification" state="0" impact="100" issueId="">
          <desc>Resources are not registered in the safety net systems, and/or additional unidentified resources exist. As such, additional weakness might be introduced.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-07-28T01:29:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.7" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="">
          <desc>Credentials for groups and roles not properly configured. User accounts are configured with excessive privileges.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-07-28T01:29:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-RP-AWS-IOT-ANALYTICS1" name="Control access to  AWS IoT Analytics resources" issueId="" platform="" cost="0" risk="49" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>&lt;p&gt;Control access to AWS IoT Analytics resources&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; By default, IAM users and roles don't have permission to create or modify AWS IoT Analytics resources. They also can't perform tasks using the AWS Management Console, AWS CLI, or AWS API. An IAM administrator must create IAM policies that grant users and roles permission to perform specific API operations on the specified resources they need. The administrator must then attach those policies to the IAM users or groups that require those permissions.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Example - Accessing one AWS IoT Analytics input&lt;/p&gt; 
&lt;p&gt;In this example, you want to grant an IAM user in your AWS account access to one of your AWS IoT Analytics channels, exampleChannel. You also want to allow the use to add, update, and delete channels.&lt;/p&gt; 
&lt;p&gt;The policy grants the iotanalytics:ListChannels, iotanalytics:DescribeChannel, iotanalytics:CreateChannel, iotanalytics:DeleteChannel, and iotanalytics:UpdateChannel permissions to the user.&lt;/p&gt; 
&lt;p&gt;{ &lt;a&gt;Version&lt;/a&gt;"2012-10-17", &lt;a&gt;Statement&lt;/a&gt; { &lt;a&gt;Sid&lt;/a&gt;"ListChannelsInConsole", &lt;a&gt;Effect&lt;/a&gt;"Allow", &lt;a&gt;Action&lt;/a&gt; "iotanalytics:ListChannels" ], &lt;a&gt;Resource&lt;/a&gt;"arn:aws:iotanalytics:::*" }, { &lt;a&gt;Sid&lt;/a&gt;"ViewSpecificChannelInfo", &lt;a&gt;Effect&lt;/a&gt;"Allow", &lt;a&gt;Action&lt;/a&gt; "iotanalytics:DescribeChannel" ], &lt;a&gt;Resource&lt;/a&gt;"arn:aws:iotanalytics:::exampleChannel" }, { &lt;a&gt;Sid&lt;/a&gt;"ManageChannels", &lt;a&gt;Effect&lt;/a&gt;"Allow", &lt;a&gt;Action&lt;/a&gt; "iotanalytics:CreateChannel", "iotanalytics:DeleteChannel", "iotanalytics:DescribeChannel", "iotanalytics:ListChannels", "iotanalytics:UpdateChannel" ], &lt;a&gt;Resource&lt;/a&gt;"arn:aws:iotanalytics:::exampleChannel/*" } ]&lt;br&gt; }&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="AWS IoT Analytics identity-based policy examples" url="https://docs.aws.amazon.com/iotanalytics/latest/userguide/iam-policy-examples.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;With the IAM policy simulator, you can test and troubleshoot identity-based policies, IAM permissions boundaries, Organizations service control policies, and resource-based policies.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-07-28T01:29:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="aws-tier-5.1" name="Tag all resources" issueId="" platform="" cost="0" risk="42" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>&lt;div&gt;
 &lt;b&gt;Description&lt;/b&gt;:
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  Tags enable customers to categorize AWS resources in different ways, for example, by purpose, owner, or environment.
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  Each tag consists of a key and an optional value, both of which customer's define.
  You should define a set of tags for the following items to help you track each instance's owner and operating environment, cost center, and other items.
&lt;/div&gt;
&lt;div&gt;
 &lt;ol&gt;
  &lt;li&gt;Amazon EC2 instances&lt;/li&gt;
  &lt;li&gt;ELB&lt;/li&gt;
  &lt;li&gt;EBS Volumes&lt;/li&gt;
  &lt;li&gt;S3 Buckets&lt;/li&gt;
 &lt;/ol&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  A resource may have up to 10 tags associated with key &amp;amp; value such as:
&lt;/div&gt;
&lt;div&gt;
 &lt;ul&gt;
  &lt;li&gt;Key=tier, Value=app&lt;/li&gt;
  &lt;li&gt;Key=environment, Value=production&lt;/li&gt;
  &lt;li&gt;Key=costcenter, Value=sales&lt;/li&gt;
 &lt;/ul&gt;
 &lt;div&gt;
  &lt;b&gt;Remediation:&lt;/b&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;b&gt;&lt;br&gt;&lt;/b&gt;
  Tag all your 3 tier Web Application resources based on their tier membership (Web, App, Data), and your organizational requirements.
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="PCI Cloud Compliance" url="http://d0.awsstatic.com/whitepapers/compliance/AWS_Anitian_Wookbook_PCI_Cloud_Compliance.pdf"/>
            <reference name="Resource groups and tagging" url="https://aws.amazon.com/blogs/aws/resource-groups-and-tagging/"/>
          </references>
          <standards>
            <standard ref="5.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Verify tags are being used.&amp;nbsp;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-03-17T16:14:01.280">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="AWS-LOSS-CONTROL-ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the control of the environment, due to improper definition and configuration of user accounts or role groups.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-IAM-2.7">
                  <countermeasures>
                    <countermeasure ref="C-RP-AWS-IOT-ANALYTICS1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-RP-AWS-IOT-ANALYTICS1" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="UNAUTHORIZED-CONECTIONS-AWS" name="Attackers gain unauthorized network access" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-Network-5.1">
                  <countermeasures>
                    <countermeasure ref="aws-tier-5.1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="aws-tier-5.1" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="a1673383-1033-4127-aff4-ccaa6faf767f" diagramComponentId="8856c46c-b584-4c77-9752-5ef8e8c99e10" ref="885f0d5d-bc59-4a63-be40-8b626140f8d6" name="Kinesis Data Streams" desc="" library="Hydras-AWS-Foundation" parentComponentRef="" componentDefinitionRef="kinesis-data-streams">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="trusted-partner"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="AWS-IAM-2.2" name="Excessive use of administrator accounts" state="0" impact="100" issueId="">
          <desc>&lt;div&gt;
                        The administrator accounts are used for all actions, not only for administrative actions. This
                        is because these users have not got a personal or a user account to do the daily actions.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-06-29T02:34:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-522" name="Insufficiently Protected Credentials" state="0" impact="100" issueId="">
          <desc>This weakness occurs when the application transmits or stores
                    authentication credentials and uses an insecure method that is susceptible to
                    unauthorized interception and/or retrieval.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-05-26T01:19:03.000">
              <output/>
            </source>
            <references>
              <reference name="CWE-522: Insufficiently Protected Credentials" url="https://cwe.mitre.org/data/definitions/522.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Network-5.1" name="Insufficient resource identification" state="0" impact="100" issueId="">
          <desc>Resources are not registered in the safety net systems, and/or additional unidentified resources exist. As such, additional weakness might be introduced.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-07-28T01:29:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-320" name="Key Management Errors" state="0" impact="100" issueId="">
          <desc>Weaknesses in this category are related to errors in the management of cryptographic keys.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-12-10T16:38:53.139">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.8" name="Lack of 2FA" state="0" impact="100" issueId="">
          <desc>Access to sensitive systems without using MFA to log into the systems.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.7" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="">
          <desc>Credentials for groups and roles not properly configured. User accounts are configured with excessive privileges.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-07-28T01:29:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-S3-7.4" name="Sensitive data is accessible" state="0" impact="100" issueId="">
          <desc>Sensitive data is not encrypted and is exposed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-07-28T01:29:26.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.1" name="The Authentication Method for Administrator Accounts is not configured" state="0" impact="100" issueId="">
          <desc>&lt;div&gt;
                        The authentication method &amp;quot;Multi-factor Authentication&amp;quot; for the Administrator
                        accounts are not configured.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.6" name="The User Account is not configured" state="0" impact="100" issueId="">
          <desc>&lt;p&gt;Key security settings such as the resetting of the password and other password controls are not configured.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-05-14T07:17:58.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-NET-01" name="Unauthorized connection attempts are allowed on open ports" state="0" impact="100" issueId="">
          <desc>&lt;p&gt;Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To avoid this, access to network must be as restricted as possible, so that only the necessary ports are open and the minimum inbound traffic is accepted.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-07-16T07:44:09.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="Hydras-AWS-IAM-2.7" name="Allocate privileges via groups or roles" issueId="" platform="" cost="1" risk="49" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>Granting least privilege ensures that users only have the permissions required to complete
                their jobs rather than additional privileges that are not required. Following this model ensures
                that, should an account be compromised, the blast radius of damage is limited.
                &lt;br /&gt;
                &lt;br /&gt;
                &lt;b&gt;Remediation:&lt;/b&gt;
                &lt;div&gt;
                &lt;ul&gt;
                &lt;li&gt;Allocate privileges via groups or roles via the recommendation in &amp;quot;Use RBAC
                with pre-defined policies added into groups or roles&amp;quot;.&lt;/li&gt;
                &lt;/ul&gt;
                &lt;/div&gt;
          </desc>
          <implementations/>
          <references>
            <reference name="AWS Lambda Permissions Model" url="https://docs.aws.amazon.com/lambda/latest/dg/intro-permission-model.html"/>
            <reference name="AWS Use API Gateway Lambda Authorizers" url="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-use-lambda-authorizer.html"/>
            <reference name="Configure Lambda Authorizer Using the API Gateway Console" url="https://docs.aws.amazon.com/apigateway/latest/developerguide/configure-api-gateway-lambda-authorization-with-console.html"/>
            <reference name="Security best practices in Amazon API Gateway" url="https://docs.aws.amazon.com/apigateway/latest/developerguide/security-best-practices.html"/>
            <reference name="Using Identity-Based Policies (IAM Policies) for AWS Lambda" url="https://docs.aws.amazon.com/lambda/latest/dg/access-control-identity-based.html"/>
            <reference name="Using Resource-Based Policies for AWS Lambda (Lambda Function Policies)" url="https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html"/>
          </references>
          <standards>
            <standard ref="1.22" supportedStandardRef="CIS AWS Standard"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Follow the audit check in &amp;quot;Use RBAC with pre-defined policies added into
                            groups or roles&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Ensure the privileges granted to these groups or roles only give the user the
                            ability to perform their and no more.&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-IAM-2.1" name="Avoid the use of the root account unless absolutely necessary" issueId="" platform="" cost="1" risk="44" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>The root account is the one which was used to open the AWS account with Amazon. Therefore it has full unrestricted access to all resources within the account including billing information. Reducing the use of this account and instead using personalized accounts with restricted permissions ensures the principles of least privilege and can help prevent accidental disclosure of credentials or unintended changes. 
&lt;br&gt; 
&lt;b&gt;&lt;br&gt;&lt;/b&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;br&gt;Follow the remediation in "Create Individual Accounts". 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt;
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.7" supportedStandardRef="CIS AWS Standard"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;blockquote&gt;
                            aws iam create-credential-report
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            aws iam get-credential-report --query 'Content' --output text | base64 -D | cut -d,
                            -f1,5,11,16 | grep -B1 '&amp;lt;root_account&amp;gt;'&amp;nbsp;
                            &lt;/blockquote&gt;
                            &lt;ol&gt;
                            &lt;/ol&gt;From the above determine the &amp;quot;password_last_used&amp;quot; time In
                            addition to the above set up a metric filter as described elsewhere in this library to
                            determine ad-hoc use of root.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AWS-KINESIS-DATA1" name="Control access to AWS Kinesis Data Streams using IAM policies" issueId="" platform="" cost="0" risk="49" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>&lt;div&gt;
  Control access to AWS Kinesis Data Streams using IAM policies 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  By using IAM with Kinesis Data Streams, you can control whether users in your organization can perform a task using specific Kinesis Data Streams API actions and whether they can use specific AWS resources. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  If you are developing an application using the Kinesis Client Library (KCL), your policy must include permissions for Amazon DynamoDB and Amazon CloudWatch; the KCL uses DynamoDB to track state information for the application, and CloudWatch to send KCL metrics to CloudWatch on your behalf. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Policy Syntax 
&lt;/div&gt; 
&lt;div&gt;
  An IAM policy is a JSON document that consists of one or more statements. Each statement is structured as follows: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  { 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; "Statement":[{ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; "Effect":"effect", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; "Action":"action", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; "Resource":"arn", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; "Condition":{ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; "condition":{ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "key":"value" 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; } 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; } 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; ] 
&lt;/div&gt; 
&lt;div&gt;
  } 
&lt;/div&gt; 
&lt;div&gt;
  There are various elements that make up a statement: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Effect: The effect can be Allow or Deny. By default, IAM users don't have permission to use resources and API actions, so all requests are denied. An explicit allow overrides the default. An explicit deny overrides any allows. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Action: The action is the specific API action for which you are granting or denying permission. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Resource: The resource that's affected by the action. To specify a resource in the statement, you need to use its Amazon Resource Name (ARN). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Condition: Conditions are optional. They can be used to control when your policy is in effect. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Actions for Kinesis Data Streams 
&lt;/div&gt; 
&lt;div&gt;
  In an IAM policy statement, you can specify any API action from any service that supports IAM. For Kinesis Data Streams, use the following prefix with the name of the API action: kinesis:. For example: kinesis:CreateStream, kinesis:ListStreams, and kinesis:DescribeStream. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To specify multiple actions in a single statement, separate them with commas as follows: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  "Action": ["kinesis:action1", "kinesis:action2"] 
&lt;/div&gt; 
&lt;div&gt;
  You can also specify multiple actions using wildcards. For example, you can specify all actions whose name begins with the word "Get" as follows: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  "Action": "kinesis:Get*" 
&lt;/div&gt; 
&lt;div&gt;
  To specify all Kinesis Data Streams operations, use the * wildcard as follows: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  "Action": "kinesis:*" 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Amazon Resource Names (ARNs) for Kinesis Data Streams 
&lt;/div&gt; 
&lt;div&gt;
  Each IAM policy statement applies to the resources that you specify using their ARNs. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Use the following ARN resource format for Kinesis data streams: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  arn:aws:kinesis:region:account-id:stream/stream-name 
&lt;/div&gt; 
&lt;div&gt;
  For example: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  "Resource": arn:aws:kinesis:*:111122223333:stream/my-stream 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Controlling Access to Amazon Kinesis Data Streams Resources Using IAM" url="https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>With the IAM policy simulator, you can test and troubleshoot identity-based policies, IAM permissions boundaries, Organizations service control policies, and resource-based policies.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-07-13T11:57:06.855">
              <output/>
            </source>
            <references>
              <reference name="Testing IAM policies with the IAM policy simulator" url="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_testing-policies.html"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-IAM-2.6" name="Create a Password Policy enforcing strong passwords" issueId="" platform="" cost="1" risk="33" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>&lt;p&gt;Enforcing a strong password policy increases resiliency and reduces the chances of the password being compromised either through brute force attempts, keystroke logging tools or stolen credentials amongst others.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Login to AWS Console (ensure you have permissions to update IAM).&lt;/li&gt;&lt;li&gt;Go to IAM Service on the AWS Console.&lt;/li&gt;&lt;li&gt;Click on Account Settings.&lt;/li&gt;&lt;li&gt;Set "Minimum password length" to 14 or greater.&lt;/li&gt;&lt;li&gt;Check "Require at least one uppercase letter".&lt;/li&gt;&lt;li&gt;Check "Require at least one lowercase letter".&lt;/li&gt;&lt;li&gt;Check "Require at least one number".&lt;/li&gt;&lt;li&gt;Check "Require at least one non-alphanumeric character"&lt;/li&gt;&lt;li&gt;Check "Enable password expiration" and set the period to at least 90 days.&lt;/li&gt;&lt;li&gt;Check "Prevent password reuse" and set the number to at least 10.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.8" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="1.9" supportedStandardRef="CIS AWS Standard"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Validate that mechanisms exist to ensure that created passwords are strong enough.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Monitoring-4.9" name="Create AWS Config configuration change alerts" issueId="" platform="" cost="1" risk="44" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>When cloudtrail is configured and sending alerts to cloudwatch logs these logs can be queried
                        to identify suspicious API activity. One such activity that should be monitored is AWS Config
                        changes. AWS config tracks configuration changes within the environment and is a useful change
                        management tool. Therefore alerting on config changes ensures the continued visibility of AWS
                        configuration items.
                        &lt;div&gt;
                        &amp;nbsp;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;br /&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Create a metric filter that checks for AWS Config changes:&amp;nbsp;&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        aws logs put-metric-filter&amp;nbsp;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        --log-group-name &amp;lt;group&amp;gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --filter-name &amp;lt;name&amp;gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --metric- transformations &amp;lt;value&amp;gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --filter-pattern '{($.eventSource = config.amazonaws.com) &amp;amp;&amp;amp;
                        (($.eventName=StopConfigurationRecorder)||($.eventName=DeleteDeliveryChannel)||($.even
                        tName=PutDeliveryChannel)||($.eventName=PutConfigurationRecorder))}'&amp;nbsp;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Create an SNS topic for notifications: aws sns create-topic --name &amp;lt;topic_name&amp;gt;&lt;/li&gt;
                        &lt;li&gt;Create an SNS subscription to the topic created above: aws sns subscribe --topic-arn
                        &amp;lt;topic_arn&amp;gt; --protocol email --notification-endpoint &amp;lt;email@example.com&amp;gt;&lt;/li&gt;
                        &lt;li&gt;Create an alarm based on the above steps:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        aws cloudwatch put-metric-alarm&amp;nbsp;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        --alarm-name &amp;lt;value&amp;gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --metric-name &amp;lt;metric_filter_name&amp;gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --statistic Sum&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --period 300&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --threshold 1&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --comparison-operator GreaterThanOrEqualToThreshold&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --evaluation-periods 1&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --namespace &amp;lt;CloudTrailMetrics&amp;gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --alarm-actions &amp;lt;topic_arn&amp;gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;div&gt;
                        
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="4.9" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;
                            &lt;li&gt;Identify the log group name: aws cloudtrail describe-trails&lt;/li&gt;
                            &lt;li&gt;Note the &amp;lt;group&amp;gt; value associated with CloudWatchLogsLogGroupArn.&lt;/li&gt;
                            &lt;li&gt;Get a list of all associated metric filters for this &amp;lt;group&amp;gt;: aws
                            logs describe-metric-filters --log-group-name &amp;quot;&amp;lt;group&amp;gt;&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure the output contains the following:&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &amp;quot;filterPattern&amp;quot;: &amp;quot;{($.eventSource = config.amazonaws.com) &amp;amp;&amp;amp;
                            (($.eventName=StopConfigurationRecorder)||($.eventName=DeleteDeliveryChannel)||($.even
                            tName=PutDeliveryChannel)||($.eventName=PutConfigurationRecorder))}&amp;quot;&amp;nbsp;
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Note the metricName value associated with the filterPattern found in step 4.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Get a list of CloudWatch alarms and filter on the metricName captured in step 4:
                            aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&amp;lt;metricName&amp;gt;`]'&lt;/li&gt;
                            &lt;li&gt;Note the AlarmActions value - this will provide the SNS topic ARN value.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure there is at least one subscriber to the SNS topic: aws sns
                            list-subscriptions-by-topic --topic-arn &amp;lt;topic_arm&amp;gt;&lt;/li&gt;
                            &lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-IAM-2.3" name="Create Individual Accounts" issueId="" platform="" cost="1" risk="44" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>By creating individual IAM users for people accessing your account, you can give each IAM user a unique set of security credentials. You can also grant different permissions to each IAM user. If necessary, you can change or revoke an IAM user's permissions any time. (If you give out your AWS root credentials, it can be difficult to revoke them, and it is impossible to restrict their permissions.). 
&lt;div&gt; 
 &lt;br&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;br&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Login to the AWS Management Console as an administrator.&lt;/li&gt; 
  &lt;li&gt;Select IAM.&lt;/li&gt; 
  &lt;li&gt;Select Users.&lt;/li&gt; 
  &lt;li&gt;Click "Create New Users".&lt;/li&gt; 
  &lt;li&gt;Complete the required information.&lt;/li&gt; 
  &lt;li&gt;Uncheck "Create access key for users".&lt;/li&gt; 
  &lt;li&gt;Click "Create".&lt;/li&gt; 
  &lt;li&gt;Select the user.&lt;/li&gt; 
  &lt;li&gt;Click "Manage Password".&lt;/li&gt; 
  &lt;li&gt;Select the required options and click "apply".&lt;/li&gt; 
  &lt;li&gt;Select "Show User Security Credentials".&lt;/li&gt; 
  &lt;li&gt;Securely supply the password to your user.&lt;/li&gt; 
 &lt;/ol&gt;&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that each user has got the corresponding account with the corresponding
                            credentials.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Logging-3.9" name="Enable AWS Config across all regions" issueId="" platform="" cost="1" risk="44" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>AWS Config tracks configuration changes to resources as they occur and is therefore a good
                        source of identifying whether unintentional or malicious changes have occurred to resources with
                        the AWS account.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;br /&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Sign in to the AWS Management Console (with Config update permissions).&lt;/li&gt;
                        &lt;li&gt;Select Config from the services menu.&lt;/li&gt;
                        &lt;li&gt;Define which resources you want to record in the selected region.&lt;/li&gt;
                        &lt;li&gt;Choose to include global resources (IAM resources).&lt;/li&gt;
                        &lt;li&gt;Specify an S3 bucket.&lt;/li&gt;
                        &lt;li&gt;Create an SNS Topic&amp;nbsp;&amp;nbsp;&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;br /&gt;&amp;nbsp;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3.5" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Sign in to the AWS Management Console (with Config update permissions)&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Select Config from the services menu&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;If presented with Setup AWS Config follow the procedure highlighted in the
                            remediation section&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;On the Resource inventory page, Click on &amp;quot;edit&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure 1 or both check-boxes under &amp;quot;All Resources&amp;quot; is checked.&amp;nbsp;&lt;/li&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Include global resources related to IAM resources&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;which needs to be enabled in 1 region only.&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;li&gt;Ensure the correct S3 bucket has been defined.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure the correct SNS topic has been defined.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Repeat steps 2 to 7 for each region (you'll need to change region in the top right
                            corner of the AWS management console to do this).&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Logging-3.1" name="Enable Cloudtrail in all regions" issueId="" platform="" cost="1" risk="44" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>Cloudtrail records events of all API calls made within a AWS account. This enables security
                        analysis, resource change tracking, and compliance auditing. Cloudtrail should be enabled in all
                        regions, even if they are not being used, to identify unintended or accidental changes.
                        &lt;br /&gt;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation&lt;/b&gt;:
                        &lt;br /&gt;Create a global trail using a previously created S3 bucket:
                        &lt;br /&gt;
                        &lt;blockquote&gt;
                        aws cloudtrail create-trail --name &amp;lt;trail_name&amp;gt; --s3-bucket-name &amp;lt;s3-bucket-name&amp;gt;
                        --is-multi-region-trail
                        &lt;/blockquote&gt;
                        &lt;br /&gt;
                        &lt;br /&gt;
                        &lt;br /&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3.1" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Run: aws cloudtrail describe-trails&lt;/li&gt;
                            &lt;li&gt;Ensure &amp;quot;IsMultiRegionTrail&amp;quot; = TRUE&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-IAM-2.4" name="Enable MFA for IAM console users" issueId="" platform="" cost="1" risk="33" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>Using a multi-factor authentication (MFA) device enhances the security of the login process. With MFA, users have a device that generates a unique authentication code (a one-time password, or OTP) and users must provide both their normal credentials (like their username and password) and the OTP. 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The MFA device can either be a special piece of hardware, or it can be a virtual device. The recommendation for all console login accounts is to use MFA to increase the level of security of the login process. 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;br&gt; 
   &lt;b&gt;Remediation:&lt;/b&gt; 
   &lt;br&gt; 
   &lt;ol&gt; 
    &lt;li&gt;Login to the AWS Management Console as an administrator.&lt;/li&gt; 
    &lt;li&gt;Select IAM.&lt;/li&gt; 
    &lt;li&gt;Select Users.&lt;/li&gt; 
    &lt;li&gt;For each user:&lt;/li&gt; 
    &lt;ul&gt; 
     &lt;li&gt;Select the user.&lt;/li&gt; 
     &lt;li&gt;Under "Sign-In Credentials" if "Password" is set to "Yes".&lt;/li&gt; 
     &lt;li&gt;Select "Manage MFA Device".&lt;/li&gt; 
     &lt;li&gt;Choose the type of MFA.&lt;/li&gt; 
     &lt;li&gt;Either scan the code or enter your device secret key.&lt;/li&gt; 
     &lt;li&gt;Enter the Authentication code in "Authentication Code 1" box.&lt;/li&gt; 
     &lt;li&gt;Wait for the code to change and enter the next code in "Authentication Code 2" box.&lt;/li&gt; 
     &lt;li&gt;Click Activate MFA.&lt;/li&gt; 
    &lt;/ul&gt; 
   &lt;/ol&gt;
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.10" supportedStandardRef="CIS AWS Standard"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Generate a credential report with the command: aws iam generate-credential-report&lt;/li&gt;
                            &lt;li&gt;The following command displays a list of all IAM users along with their password
                            and MFA status: aws iam get-credential-report --output text | base64 -D | cut - d, -f1,4,8&lt;/li&gt;
                            &lt;li&gt;For any column having password_enabled set to true ensure mfa_active is also set
                            to true.&amp;nbsp;&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-IAM-2.2" name="Enable MFA for root accounts" issueId="" platform="" cost="1" risk="44" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>Root is highly privileged and therefore using a multi-factor authentication (MFA) device enhances the security of the login process. With MFA, users have a device that generates a unique authentication code (a one-time password, or OTP) and users must provide both their normal credentials (like their username and password) and the OTP. The MFA device can either be a special piece of hardware, or it can be a virtual device. The recommendation for the root account is to use a hardware based device as it has a smaller attack surface and cannot be duplicated. 
&lt;div&gt; 
 &lt;br&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;br&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Login to the AWS Management Console as root.&lt;/li&gt; 
  &lt;li&gt;Select "Dashboard" and under "Security Status" choose "Activate MFA" on your root account.&lt;/li&gt; 
  &lt;li&gt;Select Activate MFA".&lt;/li&gt; 
  &lt;li&gt;In the wizard, choose "A hardware MFA" device and then select Next Step.&lt;/li&gt; 
  &lt;li&gt;In the Serial Number box, enter the serial number that is found on the back of the MFA device.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;In the Authentication Code 1 box, enter the six-digit number displayed by the MFA device.&lt;/li&gt; 
  &lt;li&gt;Wait until the device refreshes the code, and then enter the next six-digit number into the Authentication Code 2 box.&lt;/li&gt; 
  &lt;li&gt;Select "Next Step".&amp;nbsp;&lt;/li&gt; 
 &lt;/ol&gt;The MFA device is now associated with the AWS account.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; 
 &lt;br&gt;&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.5" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="1.6" supportedStandardRef="CIS AWS Standard"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Run: aws iam get-account-summary&lt;/li&gt;
                            &lt;li&gt;Ensure the AccountMFAEnabled property is 1.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AWS-KINESIS-DATA3" name="Enable Server-side encryption in AWS Kinesis Data Streams" issueId="" platform="" cost="0" risk="49" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>&lt;div&gt;
  Enable Server-side encryption in AWS Kinesis Data Streams 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Server-side encryption is a feature in Amazon Kinesis Data Streams that automatically encrypts data before it's at rest by using an AWS KMS customer master key (CMK) you specify. Data is encrypted before it's written to the Kinesis stream storage layer, and decrypted after it's retrieved from storage. As a result, your data is encrypted at rest within the Kinesis Data Streams service. This allows you to meet strict regulatory requirements and enhance the security of your data. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  With server-side encryption, your Kinesis stream producers and consumers don't need to manage master keys or cryptographic operations. Your data is automatically encrypted as it enters and leaves the Kinesis Data Streams service, so your data at rest is encrypted. AWS KMS provides all the master keys that are used by the server-side encryption feature. AWS KMS makes it easy to use a CMK for Kinesis that is managed by AWS, a user-specified AWS KMS CMK, or a master key imported into the AWS KMS service. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Note 
&lt;/div&gt; 
&lt;div&gt;
  Server-side encryption encrypts incoming data only after encryption is enabled. Preexisting data in an unencrypted stream is not encrypted after server-side encryption is enabled. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  The easiest way to get started with server-side encryption is to use the AWS Management Console and the Amazon Kinesis KMS Service Key, aws/kinesis. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The following procedure demonstrates how to enable server-side encryption for a Kinesis stream. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To enable server-side encryption for a Kinesis stream 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Sign in to the AWS Management Console and open the Amazon Kinesis Data Streams console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Create or select a Kinesis stream in the AWS Management Console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Choose the details tab. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. In Server-side encryption, choose edit. 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  5. Unless you want to use a user-generated KMS master key, ensure the (Default) aws/kinesis KMS master key is selected. This is the KMS master key generated by the Kinesis service. Choose Enabled, and then choose Save. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  6. The stream transitions through a pending state. After the stream returns to an active state with encryption enabled, all incoming data written to the stream is encrypted using the KMS master key you selected. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Before you use user-generated KMS master keys, ensure that your Kinesis stream producers and consumers (IAM principals) are users in the KMS master key policy. Otherwise, writes and reads from a stream will fail, which could ultimately result in data loss, delayed processing, or hung applications. You can manage permissions for KMS keys using IAM policies. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Creating and Using User-Generated KMS Master Keys" url="https://docs.aws.amazon.com/streams/latest/dev/creating-using-sse-master-keys.html"/>
            <reference name="How Do I Get Started with Server-Side Encryption?" url="https://docs.aws.amazon.com/streams/latest/dev/getting-started-with-sse.html"/>
            <reference name="What Is Server-Side Encryption for Kinesis Data Streams?" url="https://docs.aws.amazon.com/streams/latest/dev/what-is-sse.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  After enabling encryption on a Kinesis stream, AWS recommends that you monitor the success of your putRecord, putRecords, and getRecords calls using the following Amazon CloudWatch metrics: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  PutRecord.Success 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  PutRecords.Success 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  GetRecords.Success 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-07-13T13:01:44.707">
              <output/>
            </source>
            <references>
              <reference name="Verifying and Troubleshooting KMS Key Permissions" url="https://docs.aws.amazon.com/streams/latest/dev/sse-troubleshooting.html"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AWS-KINESIS-DATA4" name="Monitor the Amazon Kinesis Data Streams Service with CloudWatch" issueId="" platform="" cost="0" risk="44" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>&lt;div&gt;
  Monitor the Amazon Kinesis Data Streams Service with CloudWatch 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Amazon Kinesis Data Streams and Amazon CloudWatch are integrated so that you can collect, view, and analyze CloudWatch metrics for your Kinesis data streams. For example, to track shard usage, you can monitor the IncomingBytes and OutgoingBytes metrics and compare them to the number of shards in the stream. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The metrics that you configure for your streams are automatically collected and pushed to CloudWatch every minute. Metrics are archived for two weeks; after that period, the data is discarded. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In case you are using Kinesis Agent, Kinesis Client Library (KCL) and/or Kinesis Producer Library (KPL), you can monitor them with Amazon CloudWatch as well. 
&lt;/div&gt; 
&lt;div&gt;
  For more information please see Reference URLs.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Amazon Kinesis Data Streams Dimensions and Metrics 
&lt;/div&gt; 
&lt;div&gt;
  Kinesis Data Streams sends metrics to CloudWatch at two levels: the stream level and, optionally, the shard level. Stream-level metrics are for most common monitoring use cases in normal conditions. Shard-level metrics are for specific monitoring tasks, usually related to troubleshooting, and are enabled using the EnableEnhancedMonitoring operation. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Recommended Amazon Kinesis Data Streams Metrics 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Several Amazon Kinesis Data Streams metrics might be of particular interest to Kinesis Data Streams customers. The following list provides recommended metrics and their uses. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  GetRecords.IteratorAgeMilliseconds 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Tracks the read position across all shards and consumers in the stream. If an iterator's age passes 50% of the retention period (by default, 24 hours, configurable up to 7 days), there is risk for data loss due to record expiration. We recommend that you use CloudWatch alarms on the Maximum statistic to alert you before this loss is a risk. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  ReadProvisionedThroughputExceeded 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  When your consumer-side record processing is falling behind, it is sometimes difficult to know where the bottleneck is. Use this metric to determine if your reads are being throttled due to exceeding your read throughput limits. The most commonly used statistic for this metric is Average. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  WriteProvisionedThroughputExceeded&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  This is for the same purpose as the ReadProvisionedThroughputExceeded metric, but for the producer (put) side of the stream. The most commonly used statistic for this metric is Average. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  PutRecord.Success,&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  PutRecords.Success 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS recommends using CloudWatch alarms on the Average statistic to indicate when records are failing to the stream. Choose one or both put types depending on what your producer uses. If using the Kinesis Producer Library (KPL), use PutRecords.Success. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  GetRecords.Success 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS recommends using CloudWatch alarms on the Average statistic to indicate when records are failing from the stream. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch" url="https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html"/>
            <reference name="Monitoring the Kinesis Client Library with Amazon CloudWatch" url="https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html"/>
            <reference name="Monitoring the Kinesis Producer Library with Amazon CloudWatch" url="https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kpl.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  To access metrics using the CloudWatch console 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Open the CloudWatch console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. On the navigation bar, choose a Region. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. In the navigation pane, choose Metrics. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. In the CloudWatch Metrics by Category pane, choose Kinesis Metrics. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  5. Click the relevant row to view the statistics for the specified MetricName and StreamName. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  6. (Optional) In the graph pane, select a statistic and a time period, and then create a CloudWatch alarm using these settings. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-07-13T13:12:37.949">
              <output/>
            </source>
            <references>
              <reference name="Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch" url="https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AWS-API-GW2" name="Use AWS Secrets Manager to securely rotate, manage, and retrieve database credentials, API keys, and other secrets" issueId="" platform="" cost="0" risk="49" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>&lt;div&gt;
  Securely rotate, manage, and retrieve database credentials, API keys, and other secrets. AWS recommends to use AWS Secrets Manager for this purpose. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  AWS Secrets Manager is a secrets management service that helps you protect access to your applications, services, and IT resources. This service enables you to easily rotate, manage, and retrieve database credentials, API keys, and other secrets throughout their lifecycle. Using Secrets Manager, you can secure and manage secrets used to access resources in the AWS Cloud, on third-party services, and on-premises. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  To get started with AWS Secrets Manager: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Identify your secrets and locate where they are used in your applications. 
&lt;/div&gt; 
&lt;div&gt;
  Sign in to the AWS Management Console using your AWS credentials and navigate to the Secrets Manager console. 
&lt;/div&gt; 
&lt;div&gt;
  Use the Secrets Manager console to upload the secret you identified. Alternatively, you can use the AWS SDK or AWS CLI to upload a secret (once per secret). You can also write a script to upload multiple secrets. 
&lt;/div&gt; 
&lt;div&gt;
  If your secret is not in use yet, follow the instructions on the console to configure automatic rotation. If applications are using your secret, complete steps (5) and (6) before configuring automatic rotation. 
&lt;/div&gt; 
&lt;div&gt;
  If other users or applications need to retrieve the secret, write an IAM policy to grant permissions to the secret. 
&lt;/div&gt; 
&lt;div&gt;
  Update your applications to retrieve secrets from Secrets Manager. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="AWS Secrets Manager" url="https://aws.amazon.com/secrets-manager/"/>
          </references>
          <standards>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt; 
 &lt;b&gt;How do I know when AWS Secrets Manager rotates a database credential?&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can configure Amazon CloudWatch Events to receive a notification when AWS Secrets Manager rotates a secret. You can also see when Secrets Manager last rotated a secret using the Secrets Manager console or APIs. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-06-18T15:23:56.773">
              <output/>
            </source>
            <references>
              <reference name="AWS Secrets Manager FAQs" url="https://aws.amazon.com/secrets-manager/faqs/"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Network-5.1" name="Use AWS VPC for networking" issueId="" platform="" cost="1" risk="44" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>AWS virtual private cloud is the de-facto standard for networking AWS as it provides additional security controls such as Security Groups, Network Access Control Lists (NACL's) and routing. 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  However the use of VPC is not compulsory and resources such as EC2 can be created outside of VPC (usingEC2 Classic). It is the recommendation to make all resources a member of a VPC if possible to benefit from the increased security controls they offer and reduce undue network exposure.&amp;nbsp; 
 &lt;div&gt;
   &amp;nbsp; 
  &lt;br&gt; 
  &lt;b&gt;Remediation:&lt;br&gt;&lt;/b&gt;Move or migrate the resources to a VPC. 
 &lt;/div&gt; 
  
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that each AWS resource you own that is able to exist in a VPC does so.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-04-01T07:51:15.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AWS-KINESIS-DATA2" name="Use Interface VPC Endpoints for AWS Kinesis Data Streams" issueId="" platform="" cost="0" risk="42" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>&lt;div&gt;
  Use Interface VPC Endpoints for AWS Kinesis Data Streams 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  You can use an interface VPC endpoint to keep traffic between your Amazon VPC and Kinesis Data Streams from leaving the Amazon network. Interface VPC endpoints don't require an internet gateway, NAT device, VPN connection, or AWS Direct Connect connection. Interface VPC endpoints are powered by AWS PrivateLink, an AWS technology that enables private communication between AWS services using an elastic network interface with private IPs in your Amazon VPC. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Using Interface VPC Endpoints for Kinesis Data Streams 
&lt;/div&gt; 
&lt;div&gt;
  To get started you do not need to change the settings for your streams, producers, or consumers. Simply create an interface VPC endpoint in order for your Kinesis Data Streams traffic from and to your Amazon VPC resources to start flowing through the interface VPC endpoint. For more information, see Creating an Interface Endpoint. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The Kinesis Producer Library (KPL) and Kinesis Consumer Library (KCL) call AWS services like Amazon CloudWatch and Amazon DynamoDB using either public endpoints or private interface VPC endpoints, whichever are in use. For example, if your KCL application is running in a VPC with DynamoDB interface with VPC endpoints enabled, calls between DynamoDB and your KCL application are flowing through the interface VPC endpoint. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Controlling Access to VPCE Endpoints for Kinesis Data Streams 
&lt;/div&gt; 
&lt;div&gt;
  VPC endpoint policies enable you to control access by either attaching a policy to a VPC endpoint or by using additional fields in a policy that is attached to an IAM user, group, or role to restrict access to only occur via the specified VPC endpoint. These policies can be used to restrict access to specific streams to a specified VPC endpoint when used in conjunction with the IAM policies to only grant access to Kinesis data stream actions via the specified VPC endpoint. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The following are example endpoint policies for accessing Kinesis data streams. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  VPC policy example: read-only access - this sample policy can be attached to a VPC endpoint. (For more information, see Controlling Access to Amazon VPC Resources). It restricts actions to only listing and describing a Kinesis data stream through the VPC endpoint to which it is attached. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  { 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; "Statement": [ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; { 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; "Sid": "ReadOnly", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; "Principal": "*", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; "Action": [ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "kinesis:List*", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "kinesis:Describe*" 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; ], 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; "Effect": "Allow", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; "Resource": "*" 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; } 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; ] 
&lt;/div&gt; 
&lt;div&gt;
  }&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  VPC policy example: restrict access to a specific Kinesis data stream - this sample policy can be attached to a VPC endpoint. It restricts access to a specific data stream through the VPC endpoint to which it is attached. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  { 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; "Statement": [ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; { 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; "Sid": "AccessToSpecificDataStream", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; "Principal": "*", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; "Action": "kinesis:*", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; "Effect": "Allow", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; "Resource": "arn:aws:kinesis:us-east-1:123456789012:stream/MyStream" 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; } 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; ] 
&lt;/div&gt; 
&lt;div&gt;
  } 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  IAM policy example: restrict access to a specific Stream from a specific VPC endpoint only - this sample policy can be attached to an IAM user, role, or group. It restricts access to a specified Kinesis data stream to occur only from a specified VPC endpoint. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  { 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp;"Version": "2012-10-17", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp;"Statement": [ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; { 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"Sid": "AccessFromSpecificEndpoint", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"Action": "kinesis:*", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"Effect": "Deny", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"Resource": "arn:aws:kinesis:us-east-1:123456789012:stream/MyStream", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"Condition": { "StringNotEquals" : { "aws:sourceVpce": "vpce-11aa22bb" } } 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; } 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp;] 
&lt;/div&gt; 
&lt;div&gt;
  } 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Using Amazon Kinesis Data Streams with Interface VPC Endpoints" url="https://docs.aws.amazon.com/streams/latest/dev/vpc.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Viewing your interface endpoint 
&lt;/div&gt; 
&lt;div&gt;
  After you've created an interface endpoint, you can view information about it using the Console or the Command line. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To view information about an interface endpoint using the console: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Open the Amazon VPC console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. In the navigation pane, choose Endpoints and select your interface endpoint. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. To view information about the interface endpoint, choose Details. The DNS Names field displays the DNS names to use to access the service. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. To view the subnets in which the interface endpoint has been created, and the ID of the endpoint network interface in each subnet, choose Subnets. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  5. To view the security groups that are associated with the endpoint network interface, choose Security Groups. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-07-13T12:13:47.199">
              <output/>
            </source>
            <references>
              <reference name="Interface VPC endpoints (AWS PrivateLink)" url="https://docs.aws.amazon.com/vpc/latest/userguide/vpce-interface.html"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="aws-tier-1.1-1.2-1.3" name="Use the principle of least privilege on key ownership and usage" issueId="" platform="" cost="0" risk="44" state="Recommended" owner="cnmarrow" library="Hydras-AWS-Foundation" source="RULES" edited="false">
          <desc>&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&amp;nbsp;&lt;br&gt;AWS Key Management Service (KMS) by default provides service Customer Managed Keys (CMK). Customers also have the ability to create CMKs, which allows for configuration of key rotation and key policy which is applied to the customer created CMK. You can use the key policy by itself to control who has access to the CMK and what actions each identity can perform. Controlling access this way specifies the full scope of access to the CMK in a single document (the key policy).Customer created CMKs can be used for:&amp;nbsp;&lt;br&gt;- AWS Service level encryption(e.g. EBS, RDS, S3).&amp;nbsp;&lt;br&gt;- Key management for file/application level encryption.&amp;nbsp;&lt;br&gt;&lt;br&gt;&lt;strong&gt;Rationale&lt;/strong&gt;&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;Ensures principle of least privilege on key ownership and usage.&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;&amp;nbsp;&lt;br&gt;Using the Amazon unified command line interface:&amp;nbsp;&lt;br&gt;- If there is no alias listed for Web tier, create a new KMS key and note the "KeyId" element:&lt;/p&gt; 
&lt;p&gt;aws kms create-key&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;- Create an alias for the Web tier key using the above KeyId:&amp;nbsp;&lt;br&gt;aws kms create-alias --alias-name &amp;lt;tier_kms_alias&amp;gt; --target-key-id &amp;lt;tier_kms_key&amp;gt;&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="AWS CLI Command Reference:create-alias" url="https://docs.aws.amazon.com/cli/latest/reference/kms/create-alias.html"/>
            <reference name="AWS CLI Command Reference:create-key" url="https://docs.aws.amazon.com/cli/latest/reference/kms/create-key.html"/>
            <reference name="Amazon docs: list aliases" url="https://docs.aws.amazon.com/cli/latest/reference/kms/list-aliases.html"/>
          </references>
          <standards>
            <standard ref="1.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="1.2" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="1.3" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Run the following command via the Amazon unified command line interface to determine if a web-tier KMS key exists: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  aws kms list-aliases --query 'Aliases[?AliasName == '&amp;lt;web_tier_kms_alias&amp;gt;']' 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt;If such a key exists, an AliasArnproperty will be displayed in the output.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-12-11T12:00:19.247">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="authorization" name="Authorization" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="AWS-LOSS-CONTROL-ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the control of the environment, due to improper definition and configuration of user accounts or role groups.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-IAM-2.7">
                  <countermeasures>
                    <countermeasure ref="AWS-KINESIS-DATA1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-KINESIS-DATA1" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="general" name="General" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="AWS-LOSS-CONTROL-ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the control of the environment, due to improper definition and configuration of user accounts or role groups.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-IAM-2.7">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-IAM-2.7" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-320">
                  <countermeasures>
                    <countermeasure ref="AWS-API-GW2" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-API-GW2" mitigation="50"/>
                <countermeasure ref="Hydras-AWS-IAM-2.7" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="AWS-LOST-ACCESS-ROOT" name="Attackers gain unauthorized access to the root account due to the lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;div&gt;
                                Attackers could gain unauthorized access to the administrator account due to the lack of
                                the account and its security mechanisms, like modifying credentials and adding/removing
                                user accounts.
                                &lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-IAM-2.1">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-IAM-2.2" mitigation="34"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-IAM-2.2">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-IAM-2.1" mitigation="33"/>
                    <countermeasure ref="Hydras-AWS-IAM-2.3" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="Hydras-AWS-IAM-2.1" mitigation="33"/>
                <countermeasure ref="Hydras-AWS-IAM-2.2" mitigation="34"/>
                <countermeasure ref="Hydras-AWS-IAM-2.3" mitigation="33"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="AWS-LOST-ACCESS-USER" name="Attackers gain unauthorized access to the user account due to the lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the user account due to a lack of configuration of the account, such as an incorrect configuration of the security question to reset the password.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-IAM-2.6">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-IAM-2.6" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-IAM-2.8">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-IAM-2.4" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="Hydras-AWS-IAM-2.4" mitigation="50"/>
                <countermeasure ref="Hydras-AWS-IAM-2.6" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="ACCESS-ENCRYPTION-KEYS" name="Attackers obtain access to encryption keys and are able to decrypt ciphertext" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Cryptography is intrinsically related to the secure management of cryptographic keys which need to be protected and securely stored by applications. Leaking cryptographic keys diminishes any advantage of cryptography, allowing attackers to break message confidentiality and integrity, and to authenticate as legitimate users or impersonate legitimate services.&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-320">
                  <countermeasures>
                    <countermeasure ref="aws-tier-1.1-1.2-1.3" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="aws-tier-1.1-1.2-1.3" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="OWASP A10:2017" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="Hydras-AWS-Foundation" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident.&lt;br /&gt;
 Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Logging-3.1" mitigation="25"/>
                    <countermeasure ref="Hydras-AWS-Logging-3.9" mitigation="25"/>
                    <countermeasure ref="Hydras-AWS-Monitoring-4.9" mitigation="25"/>
                    <countermeasure ref="Hydras-AWS-Network-5.1" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="Hydras-AWS-Logging-3.1" mitigation="25"/>
                <countermeasure ref="Hydras-AWS-Logging-3.9" mitigation="25"/>
                <countermeasure ref="Hydras-AWS-Monitoring-4.9" mitigation="25"/>
                <countermeasure ref="Hydras-AWS-Network-5.1" mitigation="25"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="ACCESS-TO-DATA-AWS" name="Sensitive data is compromised through unauthorized access to data" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers can gain access to sensitive data when the data is in transit in clear text, or when the data is stored without encryption.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-S3-7.4">
                  <countermeasures>
                    <countermeasure ref="AWS-KINESIS-DATA3" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-522">
                  <countermeasures>
                    <countermeasure ref="AWS-API-GW2" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-API-GW2" mitigation="100"/>
                <countermeasure ref="AWS-KINESIS-DATA3" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="logging-and-monitoring" name="Logging and Monitoring" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="OWASP A10:2017" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="Hydras-AWS-Foundation" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident.&lt;br /&gt;
 Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="AWS-KINESIS-DATA4" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-KINESIS-DATA4" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="networking" name="Networking" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="UNAUTHORIZED-CONECTIONS-AWS" name="Attackers gain unauthorized network access" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-NET-01">
                  <countermeasures>
                    <countermeasure ref="AWS-KINESIS-DATA2" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Network-5.1">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Network-5.1" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-KINESIS-DATA2" mitigation="50"/>
                <countermeasure ref="Hydras-AWS-Network-5.1" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="66635e1a-a73e-4bc1-aed1-dbe32c840c62" diagramComponentId="2c081aa3-c2ca-49ba-8d74-73a5704118a3" ref="9e822149-1757-4020-b315-66440371d95f" name="Controller - PLC,ECU,ControlServers" desc="" library="" parentComponentRef="" componentDefinitionRef="controller-plc-ecu-controlservers">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="iec62443-sl2"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-300" name="Channel Accessible by Non-Endpoint ('Man-in-the-Middle')" state="0" impact="100" issueId="">
          <desc>The product does not adequately verify the identity of actors at both ends of a communication channel, or does not adequately ensure the integrity of the channel, in a way that allows the channel to be accessed or influenced by an actor that is not an endpoint.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-284" name="Improper Access Control" state="0" impact="100" issueId="">
          <desc>The software does not restrict or incorrectly restricts access to a resource from an unauthorized actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-287" name="Improper Authentication" state="0" impact="100" issueId="">
          <desc>When an actor claims to have a given identity, the software does not prove or insufficiently proves that the claim is correct.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-20" name="Improper Input Validation" state="0" impact="100" issueId="">
          <desc>The product does not validate or incorrectly validates input that can affect the control flow or data flow of a program.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-79" name="Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')" state="0" impact="100" issueId="">
          <desc>The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-117" name="Improper Output Neutralization for Logs" state="0" impact="100" issueId="">
          <desc>The software does not neutralize or incorrectly neutralizes output that is written to logs.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-307" name="Improper Restriction of Excessive Authentication Attempts" state="0" impact="100" issueId="">
          <desc>The software does not implement sufficient measures to prevent multiple failed authentication attempts within in a short time frame, making it more susceptible to brute force attacks.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-354" name="Improper Validation of Integrity Check Value" state="0" impact="100" issueId="">
          <desc>The software does not validate or incorrectly validates the integrity check values or "checksums" of a message. This may prevent it from detecting if the data has been modified or corrupted in transmission.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-326" name="Inadequate Encryption Strength" state="0" impact="100" issueId="">
          <desc>The software stores or transmits sensitive data using an encryption scheme that is theoretically sound, but is not strong enough for the level of protection required.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-532" name="Inclusion of Sensitive Information in Log Files" state="0" impact="100" issueId="">
          <desc>Information written to log files can be of a sensitive nature and give valuable guidance to an attacker or expose sensitive user information.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-732" name="Incorrect Permission Assignment for Critical Resource" state="0" impact="100" issueId="">
          <desc>The software specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-286" name="Incorrect User Management" state="0" impact="100" issueId="">
          <desc>The software does not properly manage a user within its environment.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-209" name="Information Exposure Through an Error Message" state="0" impact="100" issueId="">
          <desc>The software generates an error message that includes sensitive information about its environment, users, or associated data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-1100" name="Insufficient Isolation of System-Dependent Functions" state="0" impact="100" issueId="">
          <desc>The product or code does not isolate system-dependent
					functionality into separate stand-alone modules.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="">
          <desc>When a security-critical event occurs, the software either does not record the event or omits important details about the event when logging it.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-522" name="Insufficiently Protected Credentials" state="0" impact="100" issueId="">
          <desc>This weakness occurs when the application transmits or stores authentication credentials and uses an insecure method that is susceptible to unauthorized interception and/or retrieval.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-5" name="J2EE Misconfiguration: Data Transmission Without Encryption" state="0" impact="100" issueId="">
          <desc>Information sent over a network can be compromised while in transit. An attacker may be able to read or modify the contents if the data are sent in plaintext or are weakly encrypted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-322" name="Key Exchange without Entity Authentication" state="0" impact="100" issueId="">
          <desc>The software performs a key exchange with an actor without verifying the identity of that actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-311" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="">
          <desc>The software does not encrypt sensitive or critical information before storage or transmission.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-636" name="Not Failing Securely ('Failing Open')" state="0" impact="100" issueId="">
          <desc>When the product encounters an error condition or failure, its design requires it to fall back to a state that is less secure than other options that are available, such as selecting the weakest encryption algorithm or using the most permissive access control restrictions.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-693" name="Protection Mechanism Failure" state="0" impact="100" issueId="">
          <desc>The product does not use or incorrectly uses a protection mechanism that provides sufficient defence against directed attacks against the product.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-384" name="Session Fixation" state="0" impact="100" issueId="">
          <desc>Authenticating a user, or otherwise establishing a new user session, without invalidating any existing session identifier gives an attacker the opportunity to steal authenticated sessions.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-507" name="Trojan Horse" state="0" impact="100" issueId="">
          <desc>The software appears to contain benign or useful functionality, but it also contains code that is hidden from normal operation that violates the intended security policy of the user or the system administrator.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-798" name="Use of Hard-coded Credentials" state="0" impact="100" issueId="">
          <desc>The software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-261" name="Weak Cryptography for Passwords" state="0" impact="100" issueId="">
          <desc>Obscuring a password with a trivial encoding does not protect the password.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-521" name="Weak Password Requirements" state="0" impact="100" issueId="">
          <desc>The product does not require that users should have strong passwords, which makes it easier for attackers to compromise user accounts.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-123" name="Write-what-where Condition" state="0" impact="100" issueId="">
          <desc>Any condition where the attacker has the ability to write an arbitrary value to an arbitrary location, often as the result of a buffer overflow.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="protect_audit_info_logs_tools" name="Assets shall protect audit information, audit logs, and audit tools (if present) from unauthorized access, modification and deletion." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. the storage of audit information to hardware-enforced write-once media.
2. Access Management Process</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.11" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_auth_all_users_based_on_resp" name="Assets shall provide an authorization enforcement mechanism for all identified and authenticated users based on their assigned responsibilities." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. On all interfaces, the control system shall provide the capability to enforce authorizations assigned to all users (humans, software processes and devices) for controlling use of the control system to support segregation of duties and least privilege.
2. Authorization is granting of permissions based on authentication. 
3.All authorization decisions should be made on the server, not the client.  
4. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
5. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
6. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
7. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
8. Server side implementation and presentation layer representations of access control rules must match. 
9. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
10. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
11. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="auth_humans_tools_audit_logs" name="Assets shall provide the capability for authorized humans and/or tools to access audit logs on a read-only basis." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Access Control - Authorize members
2. Least Privilege &amp; Need to Know Basis
3. Review of access </desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="config_according_to_recommended_netw_and_security" name="Assets shall provide the capability to be configured according to recommended network and security configurations as described in guidelines provided by the asset supplier. The asset shall provide an interface to the currently deployed network and security configuration settings." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Devices with network connectivity are capable of being updated from the network.
2. provide the capability to generate a report listing the currently deployed security settings in a machine-readable format.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="continuous_monitor_accepted_sec" name="Assets shall provide the capability to be continuously monitored using commonly accepted security industry practices and recommendations to detect, characterize and report security breaches in a timely manner." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Control system monitoring capability can be achieved through a variety of tools and
techniques (for example, IDS, IPS, malicious code protection mechanisms and network monitoring mechanisms).
2. Monitoring devices should be strategically deployed within the control system (for example, at
selected perimeter locations and near server farms supporting critical applications) to collect
essential information. Monitoring mechanisms may also be deployed at ad hoc locations
within the control system to track specific transactions
3. SIEM Implementation</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="cap_to_be_recovered_to_known_secure_state" name="Assets shall provide the capability to be recovered and reconstituted to a known secure state after a disruption or failure." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Control system recovery and reconstitution to a known secure state means that all system
parameters (either default or configurable) are set to secure values, security-critical patches
are reinstalled, security-related configuration settings are reestablished, system documentation and operating procedures are available, application and system software is reinstalled and configured with secure settings, information from the most recent, known secure backups is loaded and the system is fully tested and functional.
1. Roll back procedure.
2. Secure storage of previous version</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_for_audit_records" name="Assets shall provide the capability to create timestamps (including date and time) for use in audit records." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Timestamps (including date and time) of audit records should be generated using internal
system clocks.
1. provide timestamps for use in audit record generation.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" name="Assets shall provide the capability to create timestamps that are synchronized with a system wide time source." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>to synchronize internal system clocks at a configurable frequency.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="maintain_essential_functions" name="Assets shall provide the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>provide the capability to manage communication loads (such as
using rate limiting) to mitigate the effects of information flooding types of DoS events.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="support_auth_check_on_software_config" name="Assets shall provide the capability to perform or support authenticity checks on software, configuration and other information as well as the recording and reporting of the results of these checks or be integrated into a system that can perform or support authenticity checks." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Integrity verification methods are employed to detect, record, report and protect against software and information tampering.
1. cryptographic hashes
2. Notification of unauthorize changes
Integrity verification methods are employed to detect, record, report and protect against software and information tampering that may occur if other protection mechanisms (such as authorization enforcement) have been circumvented. The control system should employ formal or recommended integrity mechanisms (such as cryptographic hashes).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="integrity_check_software" name="Assets shall provide the capability to perform or support integrity checks on software, configuration and other information as well as the recording and reporting of the results of these checks or be integrated into a system that can perform or support integrity checks." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Integrity verification methods are employed to detect, record, report and protect against software and information tampering.
1. cryptographic hashes
2. Notification of unauthorize changes
Integrity verification methods are employed to detect, record, report and protect against software and information tampering that may occur if other protection mechanisms (such as authorization enforcement) have been circumvented. The control system should employ formal or recommended integrity mechanisms (such as cryptographic hashes).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_critical_long_lived_symmetric_keys" name="Assets shall provide the capability to protect critical, long lived symmetric keys via hardware mechanisms." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. establish the mutual trust using the symmetric key; store securely the shared secret (the authentication is valid as long as the shared secret remains secret); restrict access to the shared secret; ensure that the algorithms and keys used for the symmetric key authentication</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.16" supportedStandardRef="iec-62443-4-2:2019"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" name="Assets shall provide the capability to specifically restrict the use of unnecessary functions, ports, protocols and/or services." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc> 1. capability to specifically prohibit and/or restrict the use of unnecessary functions, ports, protocols and/or services.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="validate_syntax_length_content_of_any_input" name="Assets shall validate the syntax, length and content of any input data that is used as an industrial process control input or input via external interfaces that directly impacts the action of the asset." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. input data validation include out-of-range values for a defined field type, invalid characters in data fields, missing or incomplete data and buffer overflow.
2. SAST &amp; DAST
3. Data from external sources are sanitized based on acceptable formats and lengths.  It is preferred to use white listing, over black listing.
4. Data is validated when crossing API boundaries</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="phys_logical_connect_to_automation_process" name="Assets that physically or logically connect to an automation process shall provide the capability to set outputs to a predetermined state if normal operation as defined by the asset supplier cannot be maintained." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. The appropriate predetermined state of control system outputs is application dependent and could be one of the following user configurable options:
• Unpowered – the outputs fail to the unpowered state
• Hold – the outputs fail to the last-known good value
• Fixed – the outputs fail to a fixed value that is determined by the asset owner or an
application
2. All user supplied data is encoded prior to output. (i.e.. Html encoding, special character encoding).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_pw_policy_enforce" name="For assets utilizing password-based authentication, the asset shall provide the capability to enforce configurable password strength based on minimum length and variety of character types. " issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.
Note: A service should employ one or more tactics to prevent or at least slow down a brute force attack, including: blacklisting an IP after 5 unsuccessful attempts, slowing down attempts with increasing timeout delays introduced after 5 unsuccessful attempts, locking out non-admin accounts after 3 unsuccessful attempts.  The account must be disabled for a period of time sufficient to discourage brute force guessing of credentials, but not so long as to allow for a denial-of-service attack to be performed.  Allow non-admin users to reset their own passwords to prevent administrative burden.  If users are allowed to reset their password, best practice is to email a new password to the users email account and require a reset upon next logon.  It is not best practice to simply reset and display the new password on the authentication screen as an attacker may trigger that reset and change the password without notice to the user.  If using a screen reveal of password, should be accompanied by both a known secret of user, such as mothers maiden name and also an email to notify the user of such a change.  Temporary passwords and links should have a short expiration time.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_id_and_auth_for_human_users" name="Identify and authenticate all human users" issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. passwords, tokens, biometrics, Certificates, geographic location
2. role-based or group-based
3. should be applied to both local and remote access to the control system.
4. Least Privilege 
5. Segregation of Duties
6. Authentication types (factors): (1) something you know (a secret) -like username and password; (2) something you have - such as a token device or smart phone; and (3) something you are - such as biometrics. 
7. On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.
8.  services should run as non-root accounts or use SUID accounts that release privilege after service start.  Non-root accounts used for services should not have a shell enabled, i.e. /dev/null should be shell in passwd file.  In cases where the application must run with elevated privileges, raise privileges as late as possible, and drop them as soon as possible.  For windows based services, it is preferred to run the service as SYSTEM, instead of an administrator account, which would have credentials which may be guessed and used in an attack.
9. Authorization is granting of permissions based on authentication. 
10.All authorization decisions should be made on the server, not the client.  
11. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
12. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
13. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
14. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
15. Server side implementation and presentation layer representations of access control rules must match. 
16. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
17. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
18. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources
Note: system level forms of identification, such as IP or MAC address are easily spoofable and therefore do not qualify as a valid form of authentication. Establish and utilize standard, tested, authentication services whenever possible. Use a centralized implementation for all authentication controls, including libraries that call external authentication services. Segregate authentication logic from the resource being requested and use redirection to and from the centralized authentication control.  All authentication controls should fail securely. Enforce password complexity requirements established by policy or regulation. Authentication credentials should be sufficient to withstand attacks that are typical of the threats in the deployed environment. (e.g., requiring the use of alphabetic as well as numeric and/or special characters). Enforce password length requirements established by policy or regulation. Eight characters is commonly used, but 16 is better or consider the use of multi-word pass phrases. Password entry should be obscured on the user's screen. (e.g., on web forms use the input type "password")</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_human_user_interface_determine_user_took_action" name="If an asset provides a human user interface, the asset shall provide the capability to determine whether a given human user took a particular action. Control elements that are not able to support such capability shall be listed in component documents." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Examples of particular actions taken by a user include performing operator actions, changing
control system configurations, creating information, sending a message, approving
information (such as indicating concurrence) and receiving a message.
1. digital signatures, digital message receipts and timestamps</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.14" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="terminate_remote_session_auto_or_manual" name="If an asset supports remote sessions, the asset shall provide the capability to terminate a remote session either automatically after a configurable time period of inactivity, manually by a local authority, or manually by the user (human, software process or device) who initiated the session." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Terminate a remote session either automatically after a configurable time period of inactivity, manually by a local authority, or manually by the user (human, software process or device) who initiated the session.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" name="If an asset supports usage through wireless interfaces it shall provide the capability to integrate into the asset that supports usage authorization, monitoring and restrictions according to commonly accepted industry practices." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>provide the capability to authorize, monitor and enforce usage restrictions for wireless connectivity to the control system.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="user_crypto_algs" name="If cryptography is required, the asset shall use cryptographic algorithms, key sizes and mechanisms for key establishment and management according to commonly accepted security industry practices and recommendations." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. document the practices and procedures relating to cryptographic key establishment and management.
2. utilize established and tested encryption and hash algorithms, such as the advanced
encryption standard (AES) and the secure hash algorithm (SHA) series, and key sizes based
on an assigned standard.
3. Key generation needs to be performed using an effective random number generator.
4. The security policies and procedures for key management need to address
periodic key changes, key destruction, key distribution and encryption key backup in
accordance with defined standards</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_acc_mgmt_for_auth_users" name="Provide support of management of all accounts by authorized users" issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. individual, role-based, device-based, Service &amp;  default account management Policy.
2. Review of accounts.
3. Approvals for creating, disabling, removing or modifying accounts.
4.  On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="allocate_sufficient_audit_record_storage" name="The asset shall allocate sufficient audit record storage capacity according to commonly recognized recommendations for log management and system configuration. The asset shall provide auditing mechanisms to reduce the likelihood of such capacity being exceeded." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>The control system shall allocate sufficient audit record storage capacity according to
commonly recognized recommendations for log management and system configuration. The
control system shall provide auditing mechanisms to reduce the likelihood of such capacity
being exceeded</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.11" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="id_and_handle_error_conditions" name="The asset shall identify and handle error conditions in a manner such that effective remediation can occur. This shall be done in a manner which does not provide information that could be exploited by adversaries to attack the IACS unless revealing this information is necessary for the timely troubleshooting of problems." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Error messages generated by the control system should provide timely and useful information without revealing potentially harmful information.
2. Vulnerability Assessment &amp; Penetration Testing</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_auth_based_on_role_leas_priv" name="The asset shall provide authorization enforcement for all users based on their assigned responsibilities and least privilege" issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. enforce authorizations assigned to all human users.
2. Use control policies (for example, identity-based policies, role-based policies and rule-based policies) and associated read/write access enforcement mechanisms (for example, access control lists, access control matrices and cryptography).
2. check which roles are assigned to a verified user or asset and which privileges are assigned to these roles – if the requested operation is covered by the permissions, it is executed, otherwise rejected. Only qualified and authorized individuals should obtain the use of control system components for purposes of initiating changes, including upgrades and modifications. Authorization is granting of permissions based on authentication. 
3.All authorization decisions should be made on the server, not the client.  
4. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
5. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
6. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
7. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
8. Server side implementation and presentation layer representations of access control rules must match. 
9. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
10. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
11. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="role_to_define_and_modify_perm_mapping" name="The asset shall provide directly or through a compensating security mechanism, for an authorized role to define and modify the mapping of permissions to roles for all human users" issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>The control system shall provide the capability for an authorized user or role to define and
modify the mapping of permissions to roles for all human users.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="alert_personnel_prevent_svc_loss" name="The asset shall provide the capability to alert personnel and prevent the loss of essential services and functions in the event of an audit processing failure. The control system shall provide the capability to support appropriate actions in response to an audit processing failure according to commonly accepted industry practices and recommendations. " issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Audit generation typically occurs at the source of the event. Audit processing involves
transmission, possible augmentation (such as the addition of a timestamp) and persistent
storage of the audit records. Audit processing failures include, for example, software or
hardware errors, failures in the audit capturing mechanisms and audit storage capacity being
reached or exceeded
1.capability to alert personnel and prevent the loss of essential services and functions in the event of an audit processing failure.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.12" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_config_usage_restriction" name="The asset shall provide the capability to automatically enforce configurable usage restrictions" issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Authenticate &amp; Authorize devices before allowing connection.
2. Digital+E46 Signatures</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="deny_access_via_untrusted_netw_unless_approved" name="The asset shall provide the capability to deny access requests via untrusted networks unless approved by an assigned role." issueId="" platform="" cost="0" risk="83" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.15" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="deny_netw_traffic_allow_netw_traffic_exceptions" name="The asset shall provide the capability to deny network traffic by default and allow network traffic by exception (also termed deny all, permit by exception)." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>deny network traffic by default and allow network traffic by exception (also termed deny all, permit by exception).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="show_sys_use_notification" name="The asset shall provide the capability to display a system use notification message before authenticating. The system use notification message shall be configurable by authorized personnel." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. display a system use notification message or warning banners before authenticating &amp; configurable by authorized personnel.
2. Privacy and security policies and procedures need to be consistent with applicable laws,
directives, policies, regulations, standards and guidance.
3. Examples of elements for inclusion in the system use notification message are:
a) that the individual is accessing a specific control system;
b) that system usage may be monitored, recorded and subject to audit;
c) that unauthorized use of the system is prohibited and subject to criminal and/or civil
penalties; and
d) that use of the system indicates consent to monitoring and recording</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.14" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="employ_cypto_mechs_to_recognize_changes" name="The asset shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="employ_maware_protection" name="The asset shall provide the capability to employ malicious code protection mechanisms at all entry and exit points." issueId="" platform="" cost="0" risk="83" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>prevent, detect, mitigate and report instances of detected malicious code (for example, viruses, worms, Trojan horses and spyware) transported by electronic mail, electronic mail attachments, Internet access, removable media (for example, universal serial bus (USB) devices, diskettes or compact disks), PDF documents, web services, network connections and infected laptops or other
common means.
1. Detection Technique  - binary integrity and attributes monitoring, hashing and signature techniques.
2.Mitigation technique - file cleaning, quarantining, file deletion, host communication restriction and IPSs
3. Prevention Technique - application blacklisting and whitelisting techniques, removable media control, sandbox techniques and specific computing platforms mechanisms such as restricted firmware update capabilities, No Execute (NX) bit, data execution prevention (DEP), address space layout randomization (ASLR), stack corruption detection and mandatory access controls.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" name="The asset shall provide the capability to employ protection mechanisms to prevent, detect, report and mitigate the effects of malicious code or unauthorized software. The asset shall provide the capability to update the protection mechanisms." issueId="" platform="" cost="0" risk="83" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>prevent, detect, mitigate and report instances of detected malicious code (for example, viruses, worms, Trojan horses and spyware) transported by electronic mail, electronic mail attachments, Internet access, removable media (for example, universal serial bus (USB) devices, diskettes or compact disks), PDF documents, web services, network connections and infected laptops or other
common means.
1. Detection Technique  - binary integrity and attributes monitoring, hashing and signature techniques.
2.Mitigation technique - file cleaning, quarantining, file deletion, host communication restriction and IPSs
3. Prevention Technique - application blacklisting and whitelisting techniques, removable media control, sandbox techniques and specific computing platforms mechanisms such as restricted firmware update capabilities, No Execute (NX) bit, data execution prevention (DEP), address space layout randomization (ASLR), stack corruption detection and mandatory access controls.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="limit_invalid_attempts" name="The asset shall provide the capability to enforce a limit of a configurable number of consecutive invalid access attempts by any user (human, software process or device) during a configurable time period. The asset shall provide the capability to deny access for a specified period of time or until unlocked by an administrator when this limit has been exceeded." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. limit of a configurable number of consecutive invalid access attempts by any user (human, software process or device).
2. As per Policy.
3. For all invalid authentication attempts, the server should simply respond "invalid attempt, please retry" or similarly vague statement that does not imply partial success.  
Note: A service should employ one or more tactics to prevent or at least slow down a brute force attack, including: blacklisting an IP after 5 unsuccessful attempts, slowing down attempts with increasing timeout delays introduced after 5 unsuccessful attempts, locking out non-admin accounts after 3 unsuccessful attempts.  The account must be disabled for a period of time sufficient to discourage brute force guessing of credentials, but not so long as to allow for a denial-of-service attack to be performed.  Allow non-admin users to reset their own passwords to prevent administrative burden.  If users are allowed to reset their password, best practice is to email a new password to the users email account and require a reset upon next logon.  It is not best practice to simply reset and display the new password on the authentication screen as an attacker may trigger that reset and change the password without notice to the user.  If using a screen reveal of password, should be accompanied by both a known secret of user, such as mothers maiden name and also an email to notify the user of such a change.  Temporary passwords and links should have a short expiration time.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" name="The asset shall provide the capability to generate audit records relevant to security for the following categories: access control, request errors, operating system events, asset events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Generate audit records relevant to security for the following categories: access control, request errors, operating system events, control system events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" name="The asset shall provide the capability to identify and authenticate all software processes and devices. This capability shall enforce such identification and authentication on all interfaces which provide access to the asset to support least privilege in accordance with applicable security policies and procedures." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. identity bound to the physical device
2. passwords, tokens or location (physical or logical)
3. role-based, group-based or entity-based,
4. Combination of 1) something you know (a secret) -like username and password; (2) something you have - such as a token device or smart phone; and (3) something you are - such as biometrics. 
5. Assign identifiers that uniquely identify users/devices
a. E.g., employ a unique username-password combination for the user
b. Reasoning: This will prevent user 1 from spoofing as user 2. This is a concern for users with different levels of access.
6. Uniquely identify and authenticate users and devices
c. Multi-factor authentication
d. Use of authentication protocols that require no password/multifactor authentication: e.g., OAuth, OpenID, SAML</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_auth_init" name="The asset shall provide the capability to: initialize authenticator content; change all default authenticators upon asset installation; change/refresh all authenticators; protect all authenticators from unauthorized disclosure and modification when stored and transmitted." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>&gt; initialize authenticator content;
&gt; change all default authenticators upon control system installation;
&gt; change/refresh all authenticators; and
&gt; protect all authenticators from unauthorized disclosure and modification when stored and
transmitted
2.  tokens, symmetric keys, private keys (part of a public/private key pair), biometrics,
passwords, physical keys and key card
3. Human users should take reasonable measures to safeguard authenticators, including maintaining possession of their individual authenticators, not loaning or sharing authenticators with others and reporting lost or compromised authenticators immediately.
4. cryptographic protections such as encryption or hashing or by handshake protocols which do not require transmission of the password. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.
5. Lockout or loss of control due to security measures is not acceptable. If the control system is required to have a high level of availability, measures should be taken to maintain this high
level of availability (such as compensating physical countermeasures, duplicate keys and
supervisory override).
6. Complex strength of the authentication mechanism</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="logically_segment_control_system" name="The asset shall provide the capability to logically segment asset networks from non-asset networks and to logically segment critical asset networks from other asset networks." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Access from the control system to the World Wide Web should be clearly justified based on
control system operational requirements.
2. Logical Segmentation.
3. Physical Segmentation.
4. capability to provide network services to control system networks, critical or otherwise, without a connection to non-control system networks.
5. capability to logically and physically isolate critical control system networks from non-critical control system networks.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="mitigate_info_effects_flooding_types" name="The asset shall provide the capability to manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. boundary protection
2. restricting the information flow to be unidirectional outbound
3. manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events.
4. restrict the ability of all users (humans, software processes and devices) to cause DoS events which affect other control systems or networks.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="monitor_control_access_methods" name="The asset shall provide the capability to monitor and control all methods of access to the asset via untrusted networks." issueId="" platform="" cost="0" risk="83" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Examples of access to the control system via untrusted networks typically include remote
access methods (such as dial-up, broadband and wireless) as well as connections from a
company’s office (non-control system) network.
1. restrict access achieved through dial-up connections (for example, limiting dial-up access based upon the source of the request).
2. protect against unauthorized connections or subversion of authorized connections (for example, using virtual private network technology).
3. Access via untrusted networks to geographically remote control system component locations (for example, control centers and field locations) should only be enabled when necessary and authenticated.
4. Multifactor authentication for remote user access to the control system.
5. Use of VPNs &amp; Firewalls.
6. Monitoring &amp; Logging of Access for control systems.
7. deny access requests via untrusted networks unless approved by an assigned role.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.15" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="monitor_control_comms_zone_boundaries" name="The asset shall provide the capability to monitor and control communications at zone boundaries to enforce the compartmentalization defined in the risk-based zones and conduits model." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Any connections to external networks or other control systems should occur through managed
interfaces consisting of appropriate boundary protection devices (for example, proxies,
gateways, routers, firewalls, unidirectional gateways, guards and encrypted tunnels) arranged
in an effective architecture (for example, firewalls protecting application gateways residing in
a DMZ).
1. capability to deny network traffic by default and allow network traffic by exception (also termed deny all, permit by exception).
2. capability to prevent any communication through the control system boundary (also termed island mode).
3. The control system shall provide the capability to prevent any communication through the
control system boundary when there is an operational failure of the boundary protection
mechanisms (also termed fail close). This ‘fail close’ functionality shall be designed such that
it does not interfere with the operation of a SIS or other safety-related functions.
4. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="physically_segment_control_system" name="The asset shall provide the capability to physically segment asset networks from non-asset networks and to physically segment critical asset networks from non-critical asset networks." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_conf_of_info_traversing_netw" name="The asset shall provide the capability to protect the confidentiality of information at rest and remote access sessions traversing an untrusted network." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_conf_of_info_at_rest_remote_access" name="The asset shall provide the capability to protect the confidentiality of information for which explicit read authorization is supported, whether at rest or in transit." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. physical means, compartmentalization or encryption.
2. configuring explicit read authorizations in the control system.
3. Digital Certificates.
4. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_integrity_transmitted_info" name="The asset shall provide the capability to protect the integrity of transmitted information." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="report_current_list_of_installed_assets" name="The asset shall provide the capability to report the current list of installed assets and their associated properties." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Usage of component ID, capability and revision level.
2. Formal process of configuration management should be deployed to keep control of the
changes in the component inventory baseline
3. The system requires all default passwords and pass phrases to be changed in order to complete the setup, prior to being operational.  This includes SSID passphrases, default accounts, admin accounts, etc.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_support_mgmt_id_by_user_group_role" name="The asset shall provide the capability to support the management of identifiers by user, group, role or asset interface." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Management of identifiers by group, role or  system interface.
2. Session ID, resource ID, secure cookie management policy.
3. On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.
NOTE: Use the server or framework’s session management controls. The application should only recognize these session identifiers as valid. Session identifier creation must always be done on a trusted system (e.g., The server). Session management controls should use well vetted algorithms that ensure sufficiently random session identifiers. Set the domain and path for cookies containing authenticated session identifiers to an appropriately restricted value for the site. Logout functionality should fully terminate the associated session or connection. Logout functionality should be available from all pages protected by authorization. Establish a session inactivity timeout that is as short as possible, based on balancing risk and business functional requirements. In most cases it should be no more than several hours. Disallow persistent logins and enforce periodic session terminations, even when the session is active. Especially for applications supporting rich network connections or connecting to critical systems. Termination times should support business requirements and the user should receive sufficient notification to mitigate negative impacts. If a session was established before login, close that session and establish a new session after a successful login. Generate a new session identifier on any re-authentication. Do not allow concurrent logins with the same user ID. Supplement standard session management for sensitive server-side operations, like account management, by utilizing per-session strong random tokens or parameters. This method can be used to prevent Cross Site Request Forgery attacks. Supplement standard session management for highly sensitive or critical operations by utilizing per-request, as opposed to per-session, strong random tokens or parameters. Set the "secure" attribute for cookies transmitted over an TLS connection. Set cookies with the HttpOnly attribute, unless you specifically require client-side scripts within your application to read or set a cookie's value
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="switch_to_and_from_emergency_power_supply" name="The asset shall provide the capability to switch to and from an emergency power supply without affecting the existing security state or a documented degraded mode. " issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>There may be instances where compensating countermeasures such as physical door access
control or control system may be affected by loss of base power supply, in which case the emergency power supply should cover those associated systems.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="unique_id_human_users" name="The asset shall provide the capability to uniquely identify and authenticate all human users." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. passwords, tokens, biometrics, Certificates, geographic location
2. role-based or group-based
3. should be applied to both local and remote access to the control system.
4. Least Privilege 
5. Segregation of Duties
6. Authentication types (factors): (1) something you know (a secret) -like username and password; (2) something you have - such as a token device or smart phone; and (3) something you are - such as biometrics. 
7. On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.
8.  services should run as non-root accounts or use SUID accounts that release privilege after service start.  Non-root accounts used for services should not have a shell enabled, i.e. /dev/null should be shell in passwd file.  In cases where the application must run with elevated privileges, raise privileges as late as possible, and drop them as soon as possible.  For windows based services, it is preferred to run the service as SYSTEM, instead of an administrator account, which would have credentials which may be guessed and used in an attack.
9. Authorization is granting of permissions based on authentication. 
10.All authorization decisions should be made on the server, not the client.  
11. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
12. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
13. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
14. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
15. Server side implementation and presentation layer representations of access control rules must match. 
16. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
17. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
18. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources.
19. Assign identifiers that uniquely identify users/devices
a. E.g., employ a unique username-password combination for the user
b. Reasoning: This will prevent user 1 from spoofing as user 2. This is a concern for users with different levels of access.
20. Uniquely identify and authenticate users and devices
c. Multi-factor authentication
d. Use of authentication protocols that require no password/multifactor authentication: e.g., OAuth, OpenID, SAML
Note: system level forms of identification, such as IP or MAC address are easily spoofable and therefore do not qualify as a valid form of authentication. Establish and utilize standard, tested, authentication services whenever possible. Use a centralized implementation for all authentication controls, including libraries that call external authentication services. Segregate authentication logic from the resource being requested and use redirection to and from the centralized authentication control.  All authentication controls should fail securely. Enforce password complexity requirements established by policy or regulation. Authentication credentials should be sufficient to withstand attacks that are typical of the threats in the deployed environment. (e.g., requiring the use of alphabetic as well as numeric and/or special characters). Enforce password length requirements established by policy or regulation. Eight characters is commonly used, but 16 is better or consider the use of multi-word pass phrases. Password entry should be obscured on the user's screen. (e.g., on web forms use the input type "password")</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="validate_integrity_of_backup_info" name="The asset shall provide the capability to verify the reliability of backup mechanisms" issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>provide the capability to verify the reliability of backup mechanisms</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="id_auth_all_users_engaged_in_wireless_comms" name="The controls system shall provide the capability to identify and authenticate all users (humans, software processes or devices) engaged in wireless communication." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Identification of Wireless technologies include, but are not limited to, microwave, satellite, packet radio, Institute of Electrical and Electronics Engineers (IEEE) 802.11x, IEEE 802.15.4 (ZigBee,IEC 62591 – WirelessHART®, ISA-100.11a), IEEE 802.15.1 (Bluetooth), wireless LAN mobile routers, mobile phones with tethering and various infrared technologies.
1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="uniquely_id_auth_all_users_engaged_in_wireless_comms" name="The controls system shall provide the capability to uniquely identify and authenticate all users (humans, software processes or devices) engaged in wireless communication." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Identification of Wireless technologies include, but are not limited to, microwave, satellite, packet radio, Institute of Electrical and Electronics Engineers (IEEE) 802.11x, IEEE 802.15.4 (ZigBee,IEC 62591 – WirelessHART®, ISA-100.11a), IEEE 802.15.1 (Bluetooth), wireless LAN mobile routers, mobile phones with tethering and various infrared technologies.
1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_participate_in_sys_level_backup" name="The identity and location of critical files and the ability to conduct backups of user-level and system-level information (including system state information) shall be supported by the asset without affecting the normal plant operations." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. availability of up-to-date backups.
2. verify the reliability of backup mechanisms.
3. automate the backup function based on a configurable frequency.
4. Review of Failed Backups.
5. Centralize Backup, backup media.
6. Encrypted backup storage</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="obscure_auth_feedback" name="When an asset provides an authentication capability, the asset shall provide the capability to obscure feedback of authenticator information during the authentication process." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. obscure feedback of authentication information during the authentication process by displaying asterisks or other random characters when a human user types in a password obscures feedback of authentication information.
2. entry of wired equivalent privacy (WEP) keys, secure socket shell (SSH) token entry and
RSA one-time passwords.
3. not provide any hint as to the reason for the authentication failure, such as “unknown user name”.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.12" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="common-sl2-cr1-1" name="SL2 - Common - CR1.1" desc="" library="">
          <threats>
            <threat ref="cr1-1-auth_access_token_exploit" name="An adversary exploits a weakness in authentication to create an access token to associate a process/thread" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-287">
                  <countermeasures>
                    <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                    <countermeasure ref="unique_id_human_users" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                <countermeasure ref="unique_id_human_users" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-1-unauth_human_sys_access" name="Unauthorized human access to the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                    <countermeasure ref="unique_id_human_users" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                <countermeasure ref="unique_id_human_users" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-1-unid-sys-user" name="Unidentified user of the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="50" availability="25" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-286">
                  <countermeasures>
                    <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                    <countermeasure ref="unique_id_human_users" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                <countermeasure ref="unique_id_human_users" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-10" name="SL2 - Common - CR1.10" desc="" library="">
          <threats>
            <threat ref="cr1-10-adv_auth_feedback" name="An adversary receives authenticator feedback which helps him in user enumeration. E.g. invalid username. Invalid password." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-209">
                  <countermeasures>
                    <countermeasure ref="obscure_auth_feedback" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="obscure_auth_feedback" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-11" name="SL2 - Common - CR1.11" desc="" library="">
          <threats>
            <threat ref="cr1-11-adv_bruteforce_auth_creds" name="And adversary can bruteforce authentication credentials" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-522">
                  <countermeasures>
                    <countermeasure ref="limit_invalid_attempts" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="limit_invalid_attempts" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-12" name="SL2 - Common - CR1.12" desc="" library="">
          <threats>
            <threat ref="cr1-12-adv_no_motd" name="Adversaries who compromised the asset can dispute there was no message stating access was only for authorized personnel" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="show_sys_use_notification" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="show_sys_use_notification" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-13" name="SL2 - Common - CR1.13" desc="" library="">
          <threats>
            <threat ref="cr1-13-adv_access_untrusted_netw" name="An adversary accesses the asset via an untrusted network" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="75" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="deny_access_via_untrusted_netw_unless_approved" mitigation="50"/>
                    <countermeasure ref="monitor_control_access_methods" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="deny_access_via_untrusted_netw_unless_approved" mitigation="50"/>
                <countermeasure ref="monitor_control_access_methods" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-14" name="SL2 - Common - CR1.14" desc="" library="">
          <threats>
            <threat ref="cr1-14-rogue_employee_abuse_key" name="A rogue employee has unfettered access to a key and might use it for a malicious purpose or pass it onto someone else to the same end." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-322">
                  <countermeasures>
                    <countermeasure ref="protect_critical_long_lived_symmetric_keys" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_critical_long_lived_symmetric_keys" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-2" name="SL2 - Common - CR1.2" desc="" library="">
          <threats>
            <threat ref="cr1-2-unid_sys_backdoor" name="Unidentified backdoor plugged in the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-2-unid_softw_arb_code_exec" name="Unidentified software that executes arbitrary code" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-123">
                  <countermeasures>
                    <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-3" name="SL2 - Common - CR1.3" desc="" library="">
          <threats>
            <threat ref="cr1-3-adv_get_netw_info" name="An adversary that has previously obtained unauthorized access to certain device resources, uses that access to obtain information such as location and network information" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="provide_acc_mgmt_for_auth_users" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_acc_mgmt_for_auth_users" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-4" name="SL2 - Common - CR1.4" desc="" library="">
          <threats>
            <threat ref="cr1-4-adv_guess_trusted_id" name="An adversary guesses, obtains, or &quot;rides&quot; a trusted identifier (e.g. session ID, resource ID, cookie, etc.) to perform authorized actions under the guise of an authenticated user or service." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-384">
                  <countermeasures>
                    <countermeasure ref="provide_support_mgmt_id_by_user_group_role" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_support_mgmt_id_by_user_group_role" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-5" name="SL2 - Common - CR1.5" desc="" library="">
          <threats>
            <threat ref="cr1-5-adv_guess_default_pw" name="An adversary guesses the default password and user of an authenticator (e.g. admin:admin)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-521">
                  <countermeasures>
                    <countermeasure ref="provide_auth_init" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_auth_init" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-5-adv_retrieve_unencrypted_pw" name="An adversary is able to retrieve unencrypted passwords after a DBMS/DB -server breach" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-261">
                  <countermeasures>
                    <countermeasure ref="provide_auth_init" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_auth_init" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-6" name="SL2 - Common - CR1.6" desc="" library="">
          <threats>
            <threat ref="cr1-6-adv_rogue_dev_mitm" name="An adversary can plant a rogue device to perform man-in-the-middle attacks" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
                    <countermeasure ref="uniquely_id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
                <countermeasure ref="uniquely_id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-7" name="SL2 - Common - CR1.7" desc="" library="">
          <threats>
            <threat ref="cr1-7-adv_bruteforce_pw" name="An adversary is able to brute force the password" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-307">
                  <countermeasures>
                    <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-7-adv_guess_pw" name="An adversary is able to guess the password based on identifying an authenticator" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-521">
                  <countermeasures>
                    <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-1" name="SL2 - Common - CR2.1" desc="" library="">
          <threats>
            <threat ref="cr2-1-adv_connect_with_compromised_acc_make_changes" name="An adversary is able to connect to the asset with a compromised account and is able to make changes to all content available on the asset. (no roles)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_auth_all_users_based_on_resp" mitigation="34"/>
                    <countermeasure ref="enforce_auth_based_on_role_leas_priv" mitigation="33"/>
                    <countermeasure ref="role_to_define_and_modify_perm_mapping" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_auth_all_users_based_on_resp" mitigation="34"/>
                <countermeasure ref="enforce_auth_based_on_role_leas_priv" mitigation="33"/>
                <countermeasure ref="role_to_define_and_modify_perm_mapping" mitigation="33"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-10" name="SL2 - Common - CR2.10" desc="" library="">
          <threats>
            <threat ref="cr2-10-a_system_user_admin_is_not_notified_when_there_is_an_error_logging_the_system" name="A system user admin is not notified when there is an error logging the asset. Adversaries can use this by making the logging of the asset prone to errors by introducing a bug in the process. Now adversaries can compromise the system without it being logged." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="75" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="alert_personnel_prevent_svc_loss" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="alert_personnel_prevent_svc_loss" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-11" name="SL2 - Common - CR2.11" desc="" library="">
          <threats>
            <threat ref="cr2-11-an_adversary_compromises_a_system_without_knowing_when_he_compromised_it" name="An adversary compromises a system without knowing when he compromised it." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                    <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-12" name="SL2 - Common - CR2.12" desc="" library="">
          <threats>
            <threat ref="cr2-12-an_adversary_compromised_the_system_not_knowing_from_where_he_compromised_the_system" name="An adversary compromised the asset, not knowing from where he compromised the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="provide_human_user_interface_determine_user_took_action" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_human_user_interface_determine_user_took_action" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-2" name="SL2 - Common - CR2.2" desc="" library="">
          <threats>
            <threat ref="cr2-2-adv_wifi_access" name="An adversary is able to get access to the asset via wireless protocols without authorization" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-3" name="SL2 - Common - CR2.3" desc="" library="">
          <threats>
            <threat ref="cr2-3-adv_portable_dev_access" name="An adversary can access the asset using a portable device" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_config_usage_restriction" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_config_usage_restriction" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-6" name="SL2 - Common - CR2.6" desc="" library="">
          <threats>
            <threat ref="cr2-6-an_adversary_could_have_maintained_a_stored_session" name="An adversary could have maintained a stored session. By doing so he keeps access to the asset with the role identified with that corresponding session." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-384">
                  <countermeasures>
                    <countermeasure ref="terminate_remote_session_auto_or_manual" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="terminate_remote_session_auto_or_manual" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-8" name="SL2 - Common - CR2.8" desc="" library="">
          <threats>
            <threat ref="cr2-8-an_aversary_could_have_compromised_the_sytem_without_you_knowing" name="An adversary could have compromised the system without you knowing what part in the asset was compromised or how he compromised the asset " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-9" name="SL2 - Common - CR2.9" desc="" library="">
          <threats>
            <threat ref="cr2-9-logging_of_the_system_will_fail_when_allocated_storage_capacity_is_satisfied" name="Logging of the asset will fail when allocated storage capacity is satisfied. Attackers can take advantage of this by creating space-eater malware." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-117">
                  <countermeasures>
                    <countermeasure ref="allocate_sufficient_audit_record_storage" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="allocate_sufficient_audit_record_storage" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-1" name="SL2 - Common - CR3.1" desc="" library="">
          <threats>
            <threat ref="cr3-1-adv_intercept_netw_traffic" name="An adversary can intercept network traffic" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="25" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-5">
                  <countermeasures>
                    <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                    <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-2" name="SL2 - Common - CR3.2" desc="" library="">
          <threats>
            <threat ref="cr3-2-adv_phishing_mail" name="An adversary sends a phishing mail with a trojan as email attachment" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-507">
                  <countermeasures>
                    <countermeasure ref="employ_maware_protection" mitigation="50"/>
                    <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="employ_maware_protection" mitigation="50"/>
                <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-4" name="SL2 - Common - CR3.4" desc="" library="">
          <threats>
            <threat ref="cr3-4-adv_tamper_software" name="An adversary is able to tamper with software running on a system. On the asset no integrity check is in place." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-354">
                  <countermeasures>
                    <countermeasure ref="integrity_check_software" mitigation="50"/>
                    <countermeasure ref="support_auth_check_on_software_config" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="integrity_check_software" mitigation="50"/>
                <countermeasure ref="support_auth_check_on_software_config" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-5" name="SL2 - Common - CR3.5" desc="" library="">
          <threats>
            <threat ref="cr3-5-adv_xss" name="An adversary can perform cross site scripting when input is not validated" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-79">
                  <countermeasures>
                    <countermeasure ref="validate_syntax_length_content_of_any_input" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="validate_syntax_length_content_of_any_input" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-6" name="SL2 - Common - CR3.6" desc="" library="">
          <threats>
            <threat ref="cr3-6-adv_fuzz_sensor" name="An adversary can fuzz a sensor connected to a PLC which will cause the controller to generate wrong output values which can cause big system failures (DoS)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="75" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-20">
                  <countermeasures>
                    <countermeasure ref="phys_logical_connect_to_automation_process" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="phys_logical_connect_to_automation_process" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-7" name="SL2 - Common - CR3.7" desc="" library="">
          <threats>
            <threat ref="cr3-7-adv_disclose_info_via_error_msg" name="An adversary can use error messages that contain too much information, such as stack traces, to discover vulnerabilities in the running service." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-209">
                  <countermeasures>
                    <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-9" name="SL2 - Common - CR3.9" desc="" library="">
          <threats>
            <threat ref="cr3-9-adv_delete_audit_records_after_breach" name="An adversary is able to delete audit records after a system breach which can make investigations very difficult  " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-732">
                  <countermeasures>
                    <countermeasure ref="protect_audit_info_logs_tools" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_audit_info_logs_tools" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr4-1" name="SL2 - Common - CR4.1" desc="" library="">
          <threats>
            <threat ref="cr4-1-adv_intercept_unecrypted_file_in_transit" name="An adversary is able to intercept an unencrypted file in transit" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="protect_conf_of_info_at_rest_remote_access" mitigation="50"/>
                    <countermeasure ref="protect_conf_of_info_traversing_netw" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_conf_of_info_at_rest_remote_access" mitigation="50"/>
                <countermeasure ref="protect_conf_of_info_traversing_netw" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr4-3" name="SL2 - Common - CR4.3" desc="" library="">
          <threats>
            <threat ref="cr4-3-adv_break_alg_weak_encryption" name="When a weak encryption algorithm is used an adversary is capable of breaking the algorithm with standard available tools" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-326">
                  <countermeasures>
                    <countermeasure ref="user_crypto_algs" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="user_crypto_algs" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr5-1" name="SL2 - Common - CR5.1" desc="" library="">
          <threats>
            <threat ref="cr5-1-network_segmentation_exploit" name="An adversary is able to hop between internal networks since they are not segregated" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="logically_segment_control_system" mitigation="50"/>
                    <countermeasure ref="physically_segment_control_system" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="logically_segment_control_system" mitigation="50"/>
                <countermeasure ref="physically_segment_control_system" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr5-2" name="SL2 - Common - CR5.2" desc="" library="">
          <threats>
            <threat ref="cr5-2-lateralmovement_exploit" name="An adversary can complete lateral movement within the asset when no protection is set up" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="deny_netw_traffic_allow_netw_traffic_exceptions" mitigation="50"/>
                    <countermeasure ref="monitor_control_comms_zone_boundaries" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="deny_netw_traffic_allow_netw_traffic_exceptions" mitigation="50"/>
                <countermeasure ref="monitor_control_comms_zone_boundaries" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr6-1" name="SL2 - Common - CR6.1" desc="" library="">
          <threats>
            <threat ref="cr6-1-audit_log_exploit" name="An adversary may compromise the asset and edit the logfiles with non root privileges" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-532">
                  <countermeasures>
                    <countermeasure ref="auth_humans_tools_audit_logs" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="auth_humans_tools_audit_logs" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr6-2" name="SL2 - Common - CR6.2" desc="" library="">
          <threats>
            <threat ref="cr6-2-continuous_monitoring_exploit" name="An adversary compromises a system  without it being timely notified and detected by for example a IDS" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-693">
                  <countermeasures>
                    <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-1" name="SL2 - Common - CR7.1" desc="" library="">
          <threats>
            <threat ref="cr7-1-dos_no_protect" name="Assets might lose the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event.&#10;" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-1100">
                  <countermeasures>
                    <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                    <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-3" name="SL2 - Common - CR7.3" desc="" library="">
          <threats>
            <threat ref="cr7-3-no_usr_sys_info_backup" name="Assets might not regain their state (user- and system-level information) due to storage failure." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="50" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-636">
                  <countermeasures>
                    <countermeasure ref="provide_participate_in_sys_level_backup" mitigation="50"/>
                    <countermeasure ref="validate_integrity_of_backup_info" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_participate_in_sys_level_backup" mitigation="50"/>
                <countermeasure ref="validate_integrity_of_backup_info" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-4" name="SL2 - Common - CR7.4" desc="" library="">
          <threats>
            <threat ref="cr7-4-no_usr_sys_info_backup" name="Assets might not regain their state (user- and system-level information) due to storage failure." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="50" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-636">
                  <countermeasures>
                    <countermeasure ref="cap_to_be_recovered_to_known_secure_state" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="cap_to_be_recovered_to_known_secure_state" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-5" name="SL2 - Common - CR7.5" desc="" library="">
          <threats>
            <threat ref="cr7-5-emergency_power" name="An adversary can cause a power outage of a security system which will give an adversary to compromise the asset." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="switch_to_and_from_emergency_power_supply" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="switch_to_and_from_emergency_power_supply" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-6" name="SL2 - Common - CR7.6" desc="" library="">
          <threats>
            <threat ref="cr7-6-unauth_access_default_creds" name="Unauthorized component access might occur as a result of not being able to change default access credentials" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-798">
                  <countermeasures>
                    <countermeasure ref="config_according_to_recommended_netw_and_security" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="config_according_to_recommended_netw_and_security" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-7" name="SL2 - Common - CR7.7" desc="" library="">
          <threats>
            <threat ref="cr7-7-unauth_access_unnecessary_func" name="Unauthorized component access might occur as a result of not being able to restrict unnecessary functions, ports, protocols and/or services." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-8" name="SL2 - Common - CR7.8" desc="" library="">
          <threats>
            <threat ref="cr7-8-rogue_assets" name="Rogue assets might enter the network as a result of not being able to verify component identities." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="b68545e9-9feb-4a04-ab5c-c95a451d606c" diagramComponentId="3cbf9551-5bef-4507-9925-34e04f2cd70e" ref="d640190e-0666-40a9-a978-918b55966181" name="MQTT Broker" desc="" library="iot-security-compliance-framework" parentComponentRef="" componentDefinitionRef="mqtt-broker">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-319" name="Cleartext Transmission of Sensitive Information" state="0" impact="100" issueId="">
          <desc>The software transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.

Many communication channels can be "sniffed" by attackers during data transmission. For example, network traffic can often be sniffed by any attacker who has access to a network interface. This significantly lowers the difficulty of exploitation by attackers.  </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-03-13T16:00:43.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-354" name="Improper Validation of Integrity Check Value" state="0" impact="100" issueId="">
          <desc>The software does not validate or incorrectly validates the integrity check values or "checksums" of a message. This may prevent it from detecting if the data has been modified or corrupted in transmission.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-05-25T09:31:24.311">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="mqtt-broker-authentication" name="MQTT Broker does not require authentication" state="0" impact="100" issueId="">
          <desc>MQTT broker is configured to allow anonymous access.&amp;nbsp;The MQTT protocol supports authentication, but it is not mandatory. Authentication allows you to identify the devices and applications that connect to a broker, and prevent attackers from gaining access.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-02-19T14:39:43.871">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="mqtt-broker-authorization-support" name="MQTT broker does not support authorization" state="0" impact="100" issueId="">
          <desc>Without proper authorization in the MQTT broker, each authenticated client can publish and subscribe to all available topics.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-02-21T09:32:11.674">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="UNRESTRICTED-NETWORK" name="Service is exposed to a wide attack surface" state="0" impact="100" issueId="">
          <desc>The product is exposed or reachable by an unnecessarily large group of potential attackers. An over-exposure of a component increases the chance of an attacker gaining access to the system through a vulnerability.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-02-21T13:15:50.784">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="throttling-mqtt-broker" name="Throttling is not configured in the MQTT broker" state="0" impact="100" issueId="">
          <desc>MQTT broker can be flooded because throttling and limits are not configured.&amp;nbsp;&amp;nbsp;All the attacker needs to do is to find out which topic is most subscribed by the clients and flood the broker with messages on that topic with a higher QoS message.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-02-26T12:32:44.545">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="wildcard-subs-enabled-mqtt-broker" name="Wildcard subscriptions are enabled in the MQTT broker" state="0" impact="100" issueId="">
          <desc>MQTT broker allows subscribers to use "#" to listen for all messages.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-02-12T16:12:15.667">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="configure-throttling-mqtt-broker" name="Configure Throttling and Limits for the MQTT broker" issueId="" platform="" cost="0" risk="67" state="Recommended" owner="cnmarrow" library="iot-security-compliance-framework" source="RULES" edited="false">
          <desc>CPU, memory and bandwidth are limited resources. It can be crucial to limit the bandwidth or the maximum TCP connections the MQTT broker can accept to save resources and avoid abuse by malicious clients. 
                    &lt;div&gt;
                      The throttling and rate limiting must apply not only to per client (using either client ID or IP/port combination) and also on a global basis. Not only does this improves the system stability, it also provides security to end point. 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                     &lt;br&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                     &lt;b&gt;Remediation&lt;/b&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt;
                      Enforce MQTT broker throttling and limit properties. 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                     &lt;ul&gt; 
                      &lt;li&gt;Apply a global connection limit.&lt;/li&gt; 
                      &lt;li&gt;Set rates of allowed MQTT CONNECT packets per second.&lt;/li&gt; 
                      &lt;li&gt;Set the number of SSL handshake operations per listener that can occur concurrently.&lt;/li&gt; 
                      &lt;li&gt;Throttle the incoming network traffic for MQTT clients.&lt;/li&gt; 
                      &lt;li&gt;Set connection timeouts for clients.&lt;/li&gt; 
                      &lt;li&gt;Restrict MQTT Client ID Length.&lt;/li&gt; 
                      &lt;li&gt;Restrict Topic Length.&lt;/li&gt; 
                     &lt;/ul&gt; 
                    &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="Securing your MQTT infrastructure against DDoS Attacks" url="https://medium.com/@iotify/securing-your-mqtt-infrastructure-against-ddos-attacks-1d982a376047"/>
            <reference name="Throttling and Limits" url="https://www.hivemq.com/docs/hivemq/4.6/user-guide/restrictions.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>You can use MQTT Apache JMeter Plugin, that fully implements communications over MQTT protocol to test the MQTT broker (in a non production environment) under potential denial of service conditions.&amp;nbsp; 
                        &lt;div&gt;
                          The strategy of performance testing the message broker is imitating work publishers and subscribers working under different configurations and quality of service levels. 
                        &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-02-26T12:36:59.369">
              <output/>
            </source>
            <references>
              <reference name="Testing the MQTT Messaging Broker for IoT - A Guide" url="https://www.blazemeter.com/blog/testing-the-mqtt-messaging-broker-for-iot-a-guide/"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="mqtt-broker-dmz-deploy" name="Deploy the MQTT broker in a DMZ zone" issueId="" platform="" cost="0" risk="35" state="Recommended" owner="cnmarrow" library="iot-security-compliance-framework" source="RULES" edited="false">
          <desc>&lt;div&gt;
                    A DMZ is a demilitarized zone. Internet-facing services such as an MQTT broker often reside in this zone. A DMZ is a subnetwork. All access to downstream services such as databases and internal application services are protected by an additional firewall. If an attacker gets access to one of the services in the DMZ, he does not automatically gain access to other systems behind the additional firewall. In a dual-firewall scenario, firewalls from different vendors are frequently used. If an attacker is able to exploit a security hole of the first firewall, the second firewall cannot be breached by reusing of the same compromising technique. 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                     &lt;br&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                     &lt;b&gt; Remediation&lt;/b&gt; 
                     &lt;br&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt;
                    Deploy your MQTT broker in a DMZ zone if you need to access any internal business services (for example, web services or authentication services) from the broker. 
                    &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="MQTT and the NIST Cybersecurity Framework Version 1.0" url="https://docs.oasis-open.org/mqtt/mqtt-nist-cybersecurity/v1.0/mqtt-nist-cybersecurity-v1.0.html"/>
            <reference name="Securing the Home IoT Network" url="https://www.sans.org/reading-room/whitepapers/hsoffice/paper/37717"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Examine firewall and router configurations to verify that a DMZ is implemented to limit inbound traffic to only system components that provide authorized publicly accessible services, protocols, and ports. 
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-05-25T13:08:58.149">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="disable-wildcard-subs-mqtt-broker" name="Disable wildcard subscriptions in the MQTT broker" issueId="" platform="" cost="0" risk="67" state="Recommended" owner="cnmarrow" library="iot-security-compliance-framework" source="RULES" edited="false">
          <desc>&lt;div&gt;
                    When a client subscribes to a topic, it can subscribe to the exact topic of a published message or it can use wildcards to subscribe to multiple topics simultaneously.&amp;nbsp;A wildcard can only be used to subscribe to topics, not to publish a message. There are two different kinds of wildcards: single-level and multi-level. 
                    &lt;/div&gt; 
                    &lt;div&gt;
                    To harden an MQTT solution, wildcard subscriptions should be disabled in the broker. Make sure your MQTT broker provider supports this feature. 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;br&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;b&gt;Remediation&lt;/b&gt; 
                    &lt;/div&gt;Wildcard subscriptions should be disabled in the broker.
                    </desc>
          <implementations/>
          <references>
            <reference name="MQTT Security Fundamentals" url="https://www.hivemq.com/blog/mqtt-security-fundamentals-wrap-up"/>
            <reference name="MQTT Topics &amp; Best Practices - MQTT Essentials: Part 5" url="https://www.hivemq.com/blog/mqtt-essentials-part-5-mqtt-topics-best-practices/"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                        Use an MQTT client (mosquitto_pub) to specify only the multi-level wildcard as a topic (#). If you receive all messages that are sent to the MQTT broker, authorization is not enforced on the broker. 
                        &lt;/div&gt; 
                        &lt;div&gt; 
                        &lt;br&gt; 
                        &lt;/div&gt; 
                        &lt;div&gt;
                        mosquitto_sub -t '#' -v 
                        &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-02-12T16:13:26.949">
              <output/>
            </source>
            <references>
              <reference name="mosquitto_sub man page" url="https://mosquitto.org/man/mosquitto_sub-1.html"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="client-auth-mqtt-broker" name="Enforce client authentication in the MQTT broker" issueId="" platform="" cost="0" risk="67" state="Recommended" owner="cnmarrow" library="iot-security-compliance-framework" source="RULES" edited="false">
          <desc>&lt;div&gt;
                    To setup client authentication (only authorized clients can connect to the broker) you can choose between two main options: 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;ul&gt; 
                    &lt;li&gt;&lt;b&gt;Authentication by user and password&lt;/b&gt;&lt;/li&gt; 
                    &lt;/ul&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt;
                    MQTT Brokers support user authentication through username and password. When user authentication is enabled, a valid user name and password is required for connection. 
                    &lt;/div&gt; 
                    &lt;div&gt;
                    When the username and password are set on the client, the information is sent to the broker in plain text. This text is vulnerable to eavesdropping and provides an easy way for attackers to obtain the credentials. Secure transmission of usernames and passwords requires transport encryption (TLS/SSL). 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;ul&gt; 
                    &lt;li&gt;&lt;b&gt;Authentication by using client certificates&lt;/b&gt;&lt;/li&gt; 
                    &lt;/ul&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt;
                    Another possible authentication method is using the X.509 client certificate. The client presents this certificate to the broker during the TLS handshake. After a successful TLS handshake, some brokers permit use of certificate information for application layer authentication. This enables the broker to read all of the information in the certificate and use it for authentication purposes as well. If you provision IoT devices, X509 client certificates can be a very good source for authenticating clients on the MQTT broker. Only valid clients are allowed to establish a (secure) connection. This can save resources on the broker side, especially if costly MQTT authentication mechanisms such as database lookups or webservice calls are used on the broker side. Since the authentication takes place with the TLS handshake, authentication is done before a connection is established. 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;div&gt;
                    If a client certificate can't be trusted anymore (for example, if it was leaked), it's important to invalidate the client certificate immediately. To prevent malicious clients from using the leaked certificate, the server needs a way to identify invalid certificates and prohibit clients that attempt to connect with them. One option is to use Certificate Revocation Lists (CRLs). CRLs are simply a list of all invalid certificates. If you only have a few certificates deployed to MQTT clients, CRLs are a good solution. If you deal with thousands or even millions of certificates, CRLs can be big headache. Another way to revoke invalid certificates is the Online Certificate Status Protocol (OCSP). OCSP uses a service to ask for revocation information on specific client certificates. If you plan to use OCSP, you need an OCSP responder, which is essentially a HTTP server that responds to revocation-check requests. If you have a huge number of revoked certificates, this method has the significant advantage that you don't need to distribute the CRLs to the MQTT brokers.&amp;nbsp; 
                    &lt;/div&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;br&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;b&gt;Remediation&lt;/b&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt;
                    Use certificates to authenticate MQTT transactions. Only consider the MQTT native username/password with a transport encryption layer (TLS) if&amp;nbsp;deploying and managing X509 client certificates to the MQTT clients is not an option. It's also desirable to use a unique client identifier for every MQTT client (but not to rely only in this client identifier for authentication). 
                    &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="MQTT Security Fundamentals" url="https://www.hivemq.com/blog/mqtt-security-fundamentals-wrap-up"/>
            <reference name="MQTT client authentication using TLS" url="https://www.ibm.com/support/knowledgecenter/SSFKSJ_9.1.0/com.ibm.mq.adm.doc/q021330_.htm"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Use an MQTT client (mosquitto_pub) to test if a client can connect anonymously to the broker: 
                        &lt;div&gt; 
                        &lt;div&gt;
                        mosquitto_sub -t test/topic -h &amp;lt;broker address&amp;gt; 
                        &lt;/div&gt; 
                        &lt;div&gt; 
                        &lt;br&gt; 
                        &lt;/div&gt; 
                        &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-02-19T14:48:10.648">
              <output/>
            </source>
            <references>
              <reference name="mosquitto_sub man page" url="https://mosquitto.org/man/mosquitto_sub-1.html"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce-authz-mqtt-broker" name="Enforce strict authorization in the MQTT broker" issueId="" platform="" cost="0" risk="67" state="Recommended" owner="cnmarrow" library="iot-security-compliance-framework" source="RULES" edited="false">
          <desc>When using MQTT, it's important to select a broker that also enables you to enforce strict authorization.&amp;nbsp; 
                    &lt;div&gt;
                    When a client establishes a connection with the broker, it can perform two activities: publish and subscribe to topics. Topics are the main resource available to clients and require authorization/protection for a secure system. Otherwise, without authorization, any client would have the ability to subscribe and publish to any topic available on the broker.&amp;nbsp; 
                    &lt;/div&gt; 
                    &lt;div&gt;
                    The most common types of authorization used are Role Based Access Controls (RBAC) and Access Control List (ACL).&amp;nbsp; 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;ul&gt; 
                    &lt;li&gt;In RBAC, a role provides a level of abstraction between a client and the main resource, i.e. topics in this case. Permissions are always associated with a certain role, allowing the broker to authorize the ability for a client to publish or subscribe to a certain topic.&amp;nbsp;&lt;/li&gt; 
                    &lt;li&gt;ACL associates certain clients with a list of permissions. These permissions provide policies on what topics a client can subscribe/publish to.&amp;nbsp;&lt;/li&gt; 
                    &lt;/ul&gt;Using ACL or RBAC a broker can be configured with topic permissions. During the run-time, the broker can determine allowed topics, allowed operations, and allowed quality of service. If a client attempts to perform an unauthorized operation, the broker can perform actions such as disconnecting from a client or acknowledging the client but preventing it from the publishing data to other clients that have subscribed to the same topic. 
                    &lt;/div&gt; 
                    &lt;div&gt;
                    It's also desirable to use a unique client identifier for every MQTT client. 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;br&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;div&gt;
                    Here is a possible topic permission: 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;ul&gt; 
                    &lt;li&gt;Allowed topic (exact topic or wild card topic)&lt;/li&gt; 
                    &lt;li&gt;Allowed operation (publish, subscribe, both)&lt;/li&gt; 
                    &lt;li&gt;Allowed quality of service level (0, 1, 2, all)&lt;/li&gt; 
                    &lt;li&gt;This kind of topic permission allows the broker to specify authorization policies for clients and limit their ability to subscribe and publish messages. For example, give a client the permission to subscribe only to a single topic and use only a certain quality of service level.&lt;/li&gt; 
                    &lt;/ul&gt; 
                    &lt;/div&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;br&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;b&gt;Remediation&lt;/b&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt;
                    Enforce strict authorization in the MQTT broker using topic permissions for each MQTT client. Whenever a client wants to publish or subscribe, the MQTT broker should check for the permissions of the client. These permissions can be cached (which means that the flow of messages is not affected). 
                    &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="MQTT Security Fundamentals" url="https://www.hivemq.com/blog/mqtt-security-fundamentals-wrap-up"/>
            <reference name="Securing IoT devices and gateways" url="https://developer.ibm.com/technologies/iot/articles/iot-trs-secure-iot-solutions1/"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                        To verify if authorization is enforced in the MQTT broker, we can test if an MQTT client can subscribe to the $SYS topic and see information about the broker using mosquito_sub client. 
                        &lt;/div&gt; 
                        &lt;div&gt; 
                        &lt;br&gt; 
                        &lt;/div&gt; 
                        &lt;div&gt;
                        mosquitto_sub -t "$SYS/#" -v -h &amp;lt;broker address&amp;gt; 
                        &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-02-21T09:34:43.548">
              <output/>
            </source>
            <references>
              <reference name="mosquitto_sub - an MQTT version 5/3.1.1/3.1 client for subscribing to topics" url="https://manpages.debian.org/testing/mosquitto-clients/mosquitto_sub.1.en.html"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="client-id-permission-mqtt-broker" name="Include the client ID of the publishing MQTT client in the permission" issueId="" platform="" cost="0" risk="67" state="Recommended" owner="cnmarrow" library="iot-security-compliance-framework" source="RULES" edited="false">
          <desc>A common best practice is to include the client ID of the publishing client in the permission. The MQTT client is restricted to publish only to topics that are prefixed with its own client ID. For example, client123/temperature or client123/#. The same solution can be used for subscribing. This is a good pattern for topics that are only concerned with one client. Of course, this is often not the only permission needed. Frequently, a client has permissions to subscribe to more general topics. For example, clients/status or clients/command. Use of this pattern depends highly on your individual use case. 
                    &lt;div&gt; 
                    &lt;br&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;b&gt;Remediation&lt;/b&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt;
                    Include the client ID of the publishing client in the permission. 
                    &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="HiveMQ Extension Developer Guide - Authorization" url="https://www.hivemq.com/docs/hivemq/4.6/extensions/authorization.html"/>
            <reference name="MQTT client identity and authorization" url="https://www.ibm.com/support/knowledgecenter/SSFKSJ_8.0.0/com.ibm.mq.adm.doc/q021300_.htm"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-02-21T10:05:11.996">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="mqtt-broker-traffic-firewall" name="Route every connection to an MQTT broker through a firewall" issueId="" platform="" cost="0" risk="35" state="Recommended" owner="cnmarrow" library="iot-security-compliance-framework" source="RULES" edited="false">
          <desc>Every connection to an MQTT broker should pass at least one firewall that implements sophisticated rules for accessing downstream components. If your are able to block attackers at the firewall level, they won't be able to access other systems in your infrastructure.&amp;nbsp; 
                    &lt;div&gt; 
                    &lt;div&gt;
                    Block any traffic that you don't expect in your downstream applications. For an MQTT broker the following traffic is probably worth blocking: 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;ul&gt; 
                    &lt;li&gt;UDP: MQTT uses TCP, you can block all UDP datagram packets.&lt;/li&gt; 
                    &lt;li&gt;ICMP: While it may not be the smartest idea to block all ICMP traffic, ICMP traffic, ping and traceroute ICMP packets could be worth investigating as candidates to block.&lt;/li&gt; 
                    &lt;/ul&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt;
                    It's also a good idea to block traffic to any ports that are not needed for your MQTT system. Don't block the following standard MQTT ports with your firewall: 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;ul&gt; 
                    &lt;li&gt;1883: This is the default MQTT port. 1883 is defined at IANA as MQTT over TCP.&amp;nbsp;&lt;/li&gt; 
                    &lt;li&gt;8883: This is the default MQTT port for MQTT over TLS. It's registered at IANA for Secure MQTT.&lt;/li&gt; 
                    &lt;/ul&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt;
                    If you are in full control of your MQTT system and know the IPs of your MQTT clients, only allow traffic for the needed IP ranges. This precaution locks out any clients that are not in the defined IP ranges. 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;br&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;b&gt;Remediation&lt;/b&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt;
                    Block traffic to any ports that are not needed for your MQTT system. 
                    &lt;/div&gt; 
                    &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="FAQ - Frequently Asked Questions" url="https://mqtt.org/faq"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                        Since MQTT brokers listen on a port number, a simple port scanner can find the broker. The device search engine Shodan now includes searches for MQTT brokers, and we can use a free Shodan account to find a limited set of brokers.&amp;nbsp; An attacker would look for as many brokers as possible by using a port scanner such as nmap. The following command would be able to find many more devices than our simple setup:&amp;nbsp; 
                        &lt;/div&gt; 
                        &lt;div&gt; 
                        &lt;br&gt; 
                        &lt;/div&gt; 
                        &lt;div&gt;
                        nmap -sS -sV -v -p 1883,8883 -oA mqtt-scan IPRANGE 
                        &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-02-21T13:08:58.306">
              <output/>
            </source>
            <references>
              <reference name="Nmap mqtt-subscribe" url="https://nmap.org/nsedoc/scripts/mqtt-subscribe.html"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="limit-mqtt-messages-sizes" name="Set a limit for MQTT message sizes" issueId="" platform="" cost="0" risk="67" state="Recommended" owner="cnmarrow" library="iot-security-compliance-framework" source="RULES" edited="false">
          <desc>&lt;div&gt;
                    MQTT defines a maximum message size of 256MB. In most MQTT deployment scenarios, messages are often smaller than a kilobyte. If you are familiar with your usage scenario and you know the maximum message size that can occur, it makes sense to decrease the maximum allowed message size to that limit. If no limit is set, it is possible for malicious MQTT clients to send large messages (which can result in excessive memory consumption and unneeded bandwidth usage). 
                    &lt;br&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;br&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;b&gt;Remediation&lt;/b&gt; 
                    &lt;br&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt;
                    Limit the maximum message size on a global and per-client basis. 
                    &lt;/div&gt;
                    </desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt; 
                        &lt;ul&gt; 
                        &lt;li&gt;Use a client to send and receive data over MQTT.&lt;br&gt;&lt;/li&gt; 
                        &lt;li&gt;Increase the message size of the data in a development/testing environment to test the presence of maximum message size thresholds. &lt;br&gt;&lt;/li&gt; 
                        &lt;li&gt;Verify that when the MQTT broker receives a message that exceeds that threshold, it drops the packet.&lt;/li&gt; 
                        &lt;/ul&gt; 
                        &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-05-25T13:30:34.342">
              <output/>
            </source>
            <references>
              <reference name="MQTT Client and Mosquitto Broker Message Restrictions With Examples" url="https://www.steves-internet-guide.com/mqtt-broker-message-restrictions/"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="access-tokens-authz-mqtt-clients" name="Use Access Tokens to authorize MQTT clients" issueId="" platform="" cost="0" risk="67" state="Recommended" owner="cnmarrow" library="iot-security-compliance-framework" source="RULES" edited="false">
          <desc>Access tokens provide an additional mechanism for scoping permissions for clients. By scoping the permissions of a client, you can prevent unauthorized access to read or write data that may have adverse effects on other client devices connected to your IoT infrastructure. When publishing or subscribing, the broker needs to authorize the client. Token authorization allows for a client to claim what scope, or permissions, it has. Another way to provide authorization with a server is to provide a third-party source for the broker to look up authorizations associated with a client based on a token and unique id. In order to connect to a broker with an access token, the client must send its access token with a connect message using the password field. In this case, additional identification can be provided with the username field as well. Before requesting a connection, the client must be provided with an access token and scope. There are a variety of token services available. The most commonly used is OAuth 2.0. The client credential flow is modeled above where a client requests a token using credentials and is granted an access token. 
                    &lt;div&gt; 
                    &lt;br&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;b&gt;Remediation&lt;/b&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt;
                    Use Access Tokens to&amp;nbsp; prevent unauthorized access to read or write data 
                    &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="Authenticating &amp; Authorizing Devices using MQTT with Auth0" url="https://auth0.com/docs/integrations/authenticating-devices-using-mqtt"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-02-21T11:37:08.057">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="data-integrity-checks" name="Use data integrity checks" issueId="" platform="" cost="0" risk="67" state="Recommended" owner="cnmarrow" library="iot-security-compliance-framework" source="RULES" edited="false">
          <desc>&lt;div&gt;
                    Use data integrity checks with stamps as a good addition to message encryption. Even if the attacker can decrypt the message (and encrypt it after modification), the integrity check still fails if the message was altered. Especially if you use MQTT without TLS, data integrity checks add an additional layer of security. 
                    &lt;br&gt; 
                    &lt;br&gt;MQTT PUBLISH packets can contain a digital signature/MAC/checksum that verifies the contents of the packet. This calculated stamp is typically added to the payload (for example, at the beginning of the payload). The receiver of the packet can verify the integrity of the data by recalculating/validating the stamp. This validation assures that the message was not tampered with by a malicious third party. 
                    &lt;br&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;br&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt; 
                    &lt;b&gt;Remediation&lt;/b&gt; 
                    &lt;br&gt; 
                    &lt;/div&gt; 
                    &lt;div&gt;
                    Use data integrity checks with stamps. 
                    &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="MQTT Message Data Integrity - MQTT Security Fundamentals" url="https://www.hivemq.com/blog/mqtt-security-fundamentals-mqtt-message-data-integrity/"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt; 
                        &lt;li&gt;Review the project documentation and use exploratory testing looking for parts of the application/system (components i.e. For example, input fields, databases or logs) that move, store or handle data/information.&lt;/li&gt; 
                        &lt;li&gt;For each identified component determine what type of data/information is logically acceptable and what types the application/system should guard against. Also, consider who according to the business logic is allowed to insert, update and delete data/information and in each component.&lt;/li&gt; 
                        &lt;li&gt;Attempt to insert, update or edit delete the data/information values with invalid data/information into each component (i.e. input, database, or log) by users that should not be allowed per the business logic workflow.&lt;/li&gt; 
                        &lt;/ul&gt; 
                        &lt;br&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2020-05-25T13:34:13.516">
              <output/>
            </source>
            <references>
              <reference name="Test Integrity Checks" url="https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/10-Business_Logic_Testing/03-Test_Integrity_Checks"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="IOT2.4.7.13" name="Where the MQTT protocol is used, it is protected by a TLS connection with no known cipher vulnerabilities" issueId="" platform="" cost="1" risk="34" state="Recommended" owner="cnmarrow" library="iot-security-compliance-framework" source="RULES" edited="false">
          <desc>&lt;p&gt;Where the &lt;span class="caps"&gt;MQTT&lt;/span&gt; protocol is used, it is protected by a &lt;span class="caps"&gt;TLS&lt;/span&gt; connection with no known cipher vulnerabilities.&lt;/p&gt; 
                    &lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br&gt;&lt;/font&gt;&lt;/b&gt; &lt;span class="caps"&gt;MQTT&lt;/span&gt; (Message Queue Telemetry Transport), is a very lightweight and widely used messaging and information exchange protocol for IoT devices throughout the world. The &lt;span class="caps"&gt;MQTT&lt;/span&gt; communication can be encrypted using &lt;span class="caps"&gt;TLS&lt;/span&gt; / &lt;span class="caps"&gt;SSL&lt;/span&gt; protocols, ensuring a secure and safe communication.&lt;/p&gt; 
                    &lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br&gt;&lt;/font&gt;&lt;/b&gt; Ensure that where the &lt;span class="caps"&gt;MQTT&lt;/span&gt; protocol is used, it is protected by a &lt;span class="caps"&gt;TLS&lt;/span&gt; connection with no known cipher vulnerabilities.&lt;/p&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="MQTT Version 3.1.1 Plus Errata 01" url="https://docs.oasis-open.org/mqtt/mqtt/v3.1.1/mqtt-v3.1.1.html"/>
            <reference name="MQTT and CoAP, IoT Protocols" url="https://www.eclipse.org/community/eclipse_newsletter/2014/february/article2.php"/>
          </references>
          <standards>
            <standard ref="2.4.7.13" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.7.13" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2019-03-13T16:00:43.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AUTHENTICATION AND AUTHORIZATION" name="Authentication and Authorization" desc="" library="iot-security-compliance-framework">
          <threats>
            <threat ref="mqtt-broker-dos" name="An attacker can publish data to the MQTT broker to publish spam data so that both broker and subscriber get flooded and may result in denial of service" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iot-security-compliance-framework" editable="true">
              <desc>The MQTT brokers are considered as the main component of any MQTT-based IoT application as it offers many services to the clients. One of the main risks related with the MQTT protocol is flooding the broker which leads to a DoS attack. The attacker compromises the broker and sends false control or data packets during the DoS attack. Therefore, automatic recoverability from the DoS attack, the time taken for the recoverability, and the impact of broker failure in the IoT application are the significant security concerns in MQTT protocol.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="Understanding Denial-of-Service Attacks" url="https://www.us-cert.gov/ncas/tips/ST04-015"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-354">
                  <countermeasures>
                    <countermeasure ref="data-integrity-checks" mitigation="25"/>
                    <countermeasure ref="limit-mqtt-messages-sizes" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="mqtt-broker-authentication">
                  <countermeasures>
                    <countermeasure ref="client-auth-mqtt-broker" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="throttling-mqtt-broker">
                  <countermeasures>
                    <countermeasure ref="configure-throttling-mqtt-broker" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="client-auth-mqtt-broker" mitigation="25"/>
                <countermeasure ref="configure-throttling-mqtt-broker" mitigation="25"/>
                <countermeasure ref="data-integrity-checks" mitigation="25"/>
                <countermeasure ref="limit-mqtt-messages-sizes" mitigation="25"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="subscribe-all-mqtt-topics" name="An attacker can start to subscribe to all topics on an unprotected MQTT broker to gather sensitive data" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iot-security-compliance-framework" editable="true">
              <desc>If the environment is insecure, and a third party gets access to it, that third party can subscribe to all MQTT messages being passed around (MQTT allows subscribers to use "#" to listen for all messages). There are usually no ACLs (Access Control Lists), which is a fine grained access control to the topics in place, so once you are connected, you can also publish to topics. In this case, you can control devices or at least poison the data being collected by publishing on behalf of the devices.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="A Comparative Analysis on Security of MQTT Brokers" url="https://www.researchgate.net/publication/336358715_A_Comparative_Analysis_on_Security_of_MQTT_Brokers"/>
                <reference name="Are smart homes vulnerable to hacking?" url="https://blog.avast.com/mqtt-vulnerabilities-hacking-smart-homes"/>
                <reference name="Attack Scenarios and Security Analysis of MQTT Communication Protocol in IoT System" url="https://beei.org/index.php/EECSI/article/viewFile/1064/627"/>
              </references>
              <weaknesses>
                <weakness ref="mqtt-broker-authentication">
                  <countermeasures>
                    <countermeasure ref="client-auth-mqtt-broker" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="mqtt-broker-authorization-support">
                  <countermeasures>
                    <countermeasure ref="access-tokens-authz-mqtt-clients" mitigation="20"/>
                    <countermeasure ref="client-id-permission-mqtt-broker" mitigation="20"/>
                    <countermeasure ref="enforce-authz-mqtt-broker" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="wildcard-subs-enabled-mqtt-broker">
                  <countermeasures>
                    <countermeasure ref="disable-wildcard-subs-mqtt-broker" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="access-tokens-authz-mqtt-clients" mitigation="20"/>
                <countermeasure ref="client-auth-mqtt-broker" mitigation="20"/>
                <countermeasure ref="client-id-permission-mqtt-broker" mitigation="20"/>
                <countermeasure ref="disable-wildcard-subs-mqtt-broker" mitigation="20"/>
                <countermeasure ref="enforce-authz-mqtt-broker" mitigation="20"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="NETWORKING" name="Networking" desc="" library="iot-security-compliance-framework">
          <threats>
            <threat ref="CAPEC-157" name="An attacker monitors information transmitted between logical or physical nodes of a network" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iot-security-compliance-framework" editable="true">
              <desc>&lt;p&gt;An attacker monitors information transmitted between logical or physical nodes of a network. The attacker need not be able to prevent reception or change content but must simply be able to observe and read the traffic. The attacker might precipitate or indirectly influence the content of the observed transaction, but the attacker is never the intended recipient of the information. Any transmission medium can theoretically be sniffed if the attacker can listen to the contents between the sender and recipient.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-319">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.7.13" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="IOT2.4.7.13" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="UNAUTHORIZED-CONNECTION" name="Attackers gain unauthorized connection to the resources" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="iot-security-compliance-framework" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized connection to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="UNRESTRICTED-NETWORK">
                  <countermeasures>
                    <countermeasure ref="mqtt-broker-dmz-deploy" mitigation="50"/>
                    <countermeasure ref="mqtt-broker-traffic-firewall" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="mqtt-broker-dmz-deploy" mitigation="50"/>
                <countermeasure ref="mqtt-broker-traffic-firewall" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="cd19aee2-7869-4c64-9133-a7a7bf1f0cf8" diagramComponentId="5945212a-0753-49b8-bf07-52d2d099f181" ref="3b0f5a33-e86d-4105-a5f3-6ab225733193" name="Sensors" desc="" library="" parentComponentRef="" componentDefinitionRef="sensor-meters-valves">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="iec62443-sl2"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-300" name="Channel Accessible by Non-Endpoint ('Man-in-the-Middle')" state="0" impact="100" issueId="">
          <desc>The product does not adequately verify the identity of actors at both ends of a communication channel, or does not adequately ensure the integrity of the channel, in a way that allows the channel to be accessed or influenced by an actor that is not an endpoint.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-284" name="Improper Access Control" state="0" impact="100" issueId="">
          <desc>The software does not restrict or incorrectly restricts access to a resource from an unauthorized actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-79" name="Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')" state="0" impact="100" issueId="">
          <desc>The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-307" name="Improper Restriction of Excessive Authentication Attempts" state="0" impact="100" issueId="">
          <desc>The software does not implement sufficient measures to prevent multiple failed authentication attempts within in a short time frame, making it more susceptible to brute force attacks.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-732" name="Incorrect Permission Assignment for Critical Resource" state="0" impact="100" issueId="">
          <desc>The software specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-209" name="Information Exposure Through an Error Message" state="0" impact="100" issueId="">
          <desc>The software generates an error message that includes sensitive information about its environment, users, or associated data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-1100" name="Insufficient Isolation of System-Dependent Functions" state="0" impact="100" issueId="">
          <desc>The product or code does not isolate system-dependent
					functionality into separate stand-alone modules.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="">
          <desc>When a security-critical event occurs, the software either does not record the event or omits important details about the event when logging it.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-522" name="Insufficiently Protected Credentials" state="0" impact="100" issueId="">
          <desc>This weakness occurs when the application transmits or stores authentication credentials and uses an insecure method that is susceptible to unauthorized interception and/or retrieval.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-5" name="J2EE Misconfiguration: Data Transmission Without Encryption" state="0" impact="100" issueId="">
          <desc>Information sent over a network can be compromised while in transit. An attacker may be able to read or modify the contents if the data are sent in plaintext or are weakly encrypted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-311" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="">
          <desc>The software does not encrypt sensitive or critical information before storage or transmission.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-693" name="Protection Mechanism Failure" state="0" impact="100" issueId="">
          <desc>The product does not use or incorrectly uses a protection mechanism that provides sufficient defence against directed attacks against the product.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-521" name="Weak Password Requirements" state="0" impact="100" issueId="">
          <desc>The product does not require that users should have strong passwords, which makes it easier for attackers to compromise user accounts.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="protect_audit_info_logs_tools" name="Assets shall protect audit information, audit logs, and audit tools (if present) from unauthorized access, modification and deletion." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. the storage of audit information to hardware-enforced write-once media.
2. Access Management Process</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.11" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_auth_all_users_based_on_resp" name="Assets shall provide an authorization enforcement mechanism for all identified and authenticated users based on their assigned responsibilities." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. On all interfaces, the control system shall provide the capability to enforce authorizations assigned to all users (humans, software processes and devices) for controlling use of the control system to support segregation of duties and least privilege.
2. Authorization is granting of permissions based on authentication. 
3.All authorization decisions should be made on the server, not the client.  
4. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
5. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
6. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
7. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
8. Server side implementation and presentation layer representations of access control rules must match. 
9. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
10. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
11. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="continuous_monitor_accepted_sec" name="Assets shall provide the capability to be continuously monitored using commonly accepted security industry practices and recommendations to detect, characterize and report security breaches in a timely manner." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Control system monitoring capability can be achieved through a variety of tools and
techniques (for example, IDS, IPS, malicious code protection mechanisms and network monitoring mechanisms).
2. Monitoring devices should be strategically deployed within the control system (for example, at
selected perimeter locations and near server farms supporting critical applications) to collect
essential information. Monitoring mechanisms may also be deployed at ad hoc locations
within the control system to track specific transactions
3. SIEM Implementation</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_for_audit_records" name="Assets shall provide the capability to create timestamps (including date and time) for use in audit records." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Timestamps (including date and time) of audit records should be generated using internal
system clocks.
1. provide timestamps for use in audit record generation.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" name="Assets shall provide the capability to create timestamps that are synchronized with a system wide time source." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>to synchronize internal system clocks at a configurable frequency.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="maintain_essential_functions" name="Assets shall provide the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>provide the capability to manage communication loads (such as
using rate limiting) to mitigate the effects of information flooding types of DoS events.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" name="Assets shall provide the capability to specifically restrict the use of unnecessary functions, ports, protocols and/or services." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc> 1. capability to specifically prohibit and/or restrict the use of unnecessary functions, ports, protocols and/or services.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="validate_syntax_length_content_of_any_input" name="Assets shall validate the syntax, length and content of any input data that is used as an industrial process control input or input via external interfaces that directly impacts the action of the asset." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. input data validation include out-of-range values for a defined field type, invalid characters in data fields, missing or incomplete data and buffer overflow.
2. SAST &amp; DAST
3. Data from external sources are sanitized based on acceptable formats and lengths.  It is preferred to use white listing, over black listing.
4. Data is validated when crossing API boundaries</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_pw_policy_enforce" name="For assets utilizing password-based authentication, the asset shall provide the capability to enforce configurable password strength based on minimum length and variety of character types. " issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.
Note: A service should employ one or more tactics to prevent or at least slow down a brute force attack, including: blacklisting an IP after 5 unsuccessful attempts, slowing down attempts with increasing timeout delays introduced after 5 unsuccessful attempts, locking out non-admin accounts after 3 unsuccessful attempts.  The account must be disabled for a period of time sufficient to discourage brute force guessing of credentials, but not so long as to allow for a denial-of-service attack to be performed.  Allow non-admin users to reset their own passwords to prevent administrative burden.  If users are allowed to reset their password, best practice is to email a new password to the users email account and require a reset upon next logon.  It is not best practice to simply reset and display the new password on the authentication screen as an attacker may trigger that reset and change the password without notice to the user.  If using a screen reveal of password, should be accompanied by both a known secret of user, such as mothers maiden name and also an email to notify the user of such a change.  Temporary passwords and links should have a short expiration time.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_human_user_interface_determine_user_took_action" name="If an asset provides a human user interface, the asset shall provide the capability to determine whether a given human user took a particular action. Control elements that are not able to support such capability shall be listed in component documents." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Examples of particular actions taken by a user include performing operator actions, changing
control system configurations, creating information, sending a message, approving
information (such as indicating concurrence) and receiving a message.
1. digital signatures, digital message receipts and timestamps</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.14" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" name="If an asset supports usage through wireless interfaces it shall provide the capability to integrate into the asset that supports usage authorization, monitoring and restrictions according to commonly accepted industry practices." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>provide the capability to authorize, monitor and enforce usage restrictions for wireless connectivity to the control system.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="id_and_handle_error_conditions" name="The asset shall identify and handle error conditions in a manner such that effective remediation can occur. This shall be done in a manner which does not provide information that could be exploited by adversaries to attack the IACS unless revealing this information is necessary for the timely troubleshooting of problems." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Error messages generated by the control system should provide timely and useful information without revealing potentially harmful information.
2. Vulnerability Assessment &amp; Penetration Testing</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_auth_based_on_role_leas_priv" name="The asset shall provide authorization enforcement for all users based on their assigned responsibilities and least privilege" issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. enforce authorizations assigned to all human users.
2. Use control policies (for example, identity-based policies, role-based policies and rule-based policies) and associated read/write access enforcement mechanisms (for example, access control lists, access control matrices and cryptography).
2. check which roles are assigned to a verified user or asset and which privileges are assigned to these roles – if the requested operation is covered by the permissions, it is executed, otherwise rejected. Only qualified and authorized individuals should obtain the use of control system components for purposes of initiating changes, including upgrades and modifications. Authorization is granting of permissions based on authentication. 
3.All authorization decisions should be made on the server, not the client.  
4. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
5. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
6. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
7. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
8. Server side implementation and presentation layer representations of access control rules must match. 
9. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
10. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
11. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="role_to_define_and_modify_perm_mapping" name="The asset shall provide directly or through a compensating security mechanism, for an authorized role to define and modify the mapping of permissions to roles for all human users" issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>The control system shall provide the capability for an authorized user or role to define and
modify the mapping of permissions to roles for all human users.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_config_usage_restriction" name="The asset shall provide the capability to automatically enforce configurable usage restrictions" issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Authenticate &amp; Authorize devices before allowing connection.
2. Digital+E46 Signatures</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="employ_cypto_mechs_to_recognize_changes" name="The asset shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="limit_invalid_attempts" name="The asset shall provide the capability to enforce a limit of a configurable number of consecutive invalid access attempts by any user (human, software process or device) during a configurable time period. The asset shall provide the capability to deny access for a specified period of time or until unlocked by an administrator when this limit has been exceeded." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. limit of a configurable number of consecutive invalid access attempts by any user (human, software process or device).
2. As per Policy.
3. For all invalid authentication attempts, the server should simply respond "invalid attempt, please retry" or similarly vague statement that does not imply partial success.  
Note: A service should employ one or more tactics to prevent or at least slow down a brute force attack, including: blacklisting an IP after 5 unsuccessful attempts, slowing down attempts with increasing timeout delays introduced after 5 unsuccessful attempts, locking out non-admin accounts after 3 unsuccessful attempts.  The account must be disabled for a period of time sufficient to discourage brute force guessing of credentials, but not so long as to allow for a denial-of-service attack to be performed.  Allow non-admin users to reset their own passwords to prevent administrative burden.  If users are allowed to reset their password, best practice is to email a new password to the users email account and require a reset upon next logon.  It is not best practice to simply reset and display the new password on the authentication screen as an attacker may trigger that reset and change the password without notice to the user.  If using a screen reveal of password, should be accompanied by both a known secret of user, such as mothers maiden name and also an email to notify the user of such a change.  Temporary passwords and links should have a short expiration time.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" name="The asset shall provide the capability to generate audit records relevant to security for the following categories: access control, request errors, operating system events, asset events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Generate audit records relevant to security for the following categories: access control, request errors, operating system events, control system events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="logically_segment_control_system" name="The asset shall provide the capability to logically segment asset networks from non-asset networks and to logically segment critical asset networks from other asset networks." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Access from the control system to the World Wide Web should be clearly justified based on
control system operational requirements.
2. Logical Segmentation.
3. Physical Segmentation.
4. capability to provide network services to control system networks, critical or otherwise, without a connection to non-control system networks.
5. capability to logically and physically isolate critical control system networks from non-critical control system networks.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="mitigate_info_effects_flooding_types" name="The asset shall provide the capability to manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. boundary protection
2. restricting the information flow to be unidirectional outbound
3. manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events.
4. restrict the ability of all users (humans, software processes and devices) to cause DoS events which affect other control systems or networks.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="physically_segment_control_system" name="The asset shall provide the capability to physically segment asset networks from non-asset networks and to physically segment critical asset networks from non-critical asset networks." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="prevent_further_access_init_seslock" name="The asset shall provide the capability to prevent further access by initiating a session lock after a configurable time period of inactivity or by manual initiation. The session lock shall remain in effect until the human user who owns the session or another authorized human user re-establishes access using appropriate identification and authentication procedures." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. activate session lock mechanisms automatically after a configurable time period.
2. In some cases, session lock for control system operator workstations or nodes is not advised (for example, sessions which are required for immediate operator responses in emergency situations).
3. In situations where the control system cannot support session lock, the responsible entity should employ appropriate compensating countermeasures (for example, providing increased physical security, personnel security and auditing measures).
Note: Use the server or framework’s session management controls. The application should only recognize these session identifiers as valid. Session identifier creation must always be done on a trusted system (e.g., The server). Session management controls should use well vetted algorithms that ensure sufficiently random session identifiers. Set the domain and path for cookies containing authenticated session identifiers to an appropriately restricted value for the site. Logout functionality should fully terminate the associated session or connection. Logout functionality should be available from all pages protected by authorization. Establish a session inactivity timeout that is as short as possible, based on balancing risk and business functional requirements. In most cases it should be no more than several hours. Disallow persistent logins and enforce periodic session terminations, even when the session is active. Especially for applications supporting rich network connections or connecting to critical systems. Termination times should support business requirements and the user should receive sufficient notification to mitigate negative impacts. If a session was established before login, close that session and establish a new session after a successful login. Generate a new session identifier on any re-authentication. Do not allow concurrent logins with the same user ID. Supplement standard session management for sensitive server-side operations, like account management, by utilizing per-session strong random tokens or parameters. This method can be used to prevent Cross Site Request Forgery attacks. Supplement standard session management for highly sensitive or critical operations by utilizing per-request, as opposed to per-session, strong random tokens or parameters. Set the "secure" attribute for cookies transmitted over an TLS connection. Set cookies with the HttpOnly attribute, unless you specifically require client-side scripts within your application to read or set a cookie's value</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_conf_of_info_traversing_netw" name="The asset shall provide the capability to protect the confidentiality of information at rest and remote access sessions traversing an untrusted network." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_conf_of_info_at_rest_remote_access" name="The asset shall provide the capability to protect the confidentiality of information for which explicit read authorization is supported, whether at rest or in transit." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. physical means, compartmentalization or encryption.
2. configuring explicit read authorizations in the control system.
3. Digital Certificates.
4. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_integrity_transmitted_info" name="The asset shall provide the capability to protect the integrity of transmitted information." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="report_current_list_of_installed_assets" name="The asset shall provide the capability to report the current list of installed assets and their associated properties." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Usage of component ID, capability and revision level.
2. Formal process of configuration management should be deployed to keep control of the
changes in the component inventory baseline
3. The system requires all default passwords and pass phrases to be changed in order to complete the setup, prior to being operational.  This includes SSID passphrases, default accounts, admin accounts, etc.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="switch_to_and_from_emergency_power_supply" name="The asset shall provide the capability to switch to and from an emergency power supply without affecting the existing security state or a documented degraded mode. " issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>There may be instances where compensating countermeasures such as physical door access
control or control system may be affected by loss of base power supply, in which case the emergency power supply should cover those associated systems.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="common-sl2-cr1-11" name="SL2 - Common - CR1.11" desc="" library="">
          <threats>
            <threat ref="cr1-11-adv_bruteforce_auth_creds" name="And adversary can bruteforce authentication credentials" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-522">
                  <countermeasures>
                    <countermeasure ref="limit_invalid_attempts" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="limit_invalid_attempts" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-7" name="SL2 - Common - CR1.7" desc="" library="">
          <threats>
            <threat ref="cr1-7-adv_bruteforce_pw" name="An adversary is able to brute force the password" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-307">
                  <countermeasures>
                    <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-7-adv_guess_pw" name="An adversary is able to guess the password based on identifying an authenticator" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-521">
                  <countermeasures>
                    <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-1" name="SL2 - Common - CR2.1" desc="" library="">
          <threats>
            <threat ref="cr2-1-adv_connect_with_compromised_acc_make_changes" name="An adversary is able to connect to the asset with a compromised account and is able to make changes to all content available on the asset. (no roles)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_auth_all_users_based_on_resp" mitigation="34"/>
                    <countermeasure ref="enforce_auth_based_on_role_leas_priv" mitigation="33"/>
                    <countermeasure ref="role_to_define_and_modify_perm_mapping" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_auth_all_users_based_on_resp" mitigation="34"/>
                <countermeasure ref="enforce_auth_based_on_role_leas_priv" mitigation="33"/>
                <countermeasure ref="role_to_define_and_modify_perm_mapping" mitigation="33"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-11" name="SL2 - Common - CR2.11" desc="" library="">
          <threats>
            <threat ref="cr2-11-an_adversary_compromises_a_system_without_knowing_when_he_compromised_it" name="An adversary compromises a system without knowing when he compromised it." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                    <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-12" name="SL2 - Common - CR2.12" desc="" library="">
          <threats>
            <threat ref="cr2-12-an_adversary_compromised_the_system_not_knowing_from_where_he_compromised_the_system" name="An adversary compromised the asset, not knowing from where he compromised the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="provide_human_user_interface_determine_user_took_action" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_human_user_interface_determine_user_took_action" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-2" name="SL2 - Common - CR2.2" desc="" library="">
          <threats>
            <threat ref="cr2-2-adv_wifi_access" name="An adversary is able to get access to the asset via wireless protocols without authorization" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-3" name="SL2 - Common - CR2.3" desc="" library="">
          <threats>
            <threat ref="cr2-3-adv_portable_dev_access" name="An adversary can access the asset using a portable device" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_config_usage_restriction" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_config_usage_restriction" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-5" name="SL2 - Common - CR2.5" desc="" library="">
          <threats>
            <threat ref="cr2-5-an_adversary_can_perform_a_dos_attack_by_making_consecutive_authorization_requests" name="An adversary can perform a DoS attack by making consecutive authorization requests" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-307">
                  <countermeasures>
                    <countermeasure ref="prevent_further_access_init_seslock" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="prevent_further_access_init_seslock" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-8" name="SL2 - Common - CR2.8" desc="" library="">
          <threats>
            <threat ref="cr2-8-an_aversary_could_have_compromised_the_sytem_without_you_knowing" name="An adversary could have compromised the system without you knowing what part in the asset was compromised or how he compromised the asset " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-1" name="SL2 - Common - CR3.1" desc="" library="">
          <threats>
            <threat ref="cr3-1-adv_intercept_netw_traffic" name="An adversary can intercept network traffic" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="25" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-5">
                  <countermeasures>
                    <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                    <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-5" name="SL2 - Common - CR3.5" desc="" library="">
          <threats>
            <threat ref="cr3-5-adv_xss" name="An adversary can perform cross site scripting when input is not validated" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-79">
                  <countermeasures>
                    <countermeasure ref="validate_syntax_length_content_of_any_input" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="validate_syntax_length_content_of_any_input" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-7" name="SL2 - Common - CR3.7" desc="" library="">
          <threats>
            <threat ref="cr3-7-adv_disclose_info_via_error_msg" name="An adversary can use error messages that contain too much information, such as stack traces, to discover vulnerabilities in the running service." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-209">
                  <countermeasures>
                    <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-9" name="SL2 - Common - CR3.9" desc="" library="">
          <threats>
            <threat ref="cr3-9-adv_delete_audit_records_after_breach" name="An adversary is able to delete audit records after a system breach which can make investigations very difficult  " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-732">
                  <countermeasures>
                    <countermeasure ref="protect_audit_info_logs_tools" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_audit_info_logs_tools" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr4-1" name="SL2 - Common - CR4.1" desc="" library="">
          <threats>
            <threat ref="cr4-1-adv_intercept_unecrypted_file_in_transit" name="An adversary is able to intercept an unencrypted file in transit" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="protect_conf_of_info_at_rest_remote_access" mitigation="50"/>
                    <countermeasure ref="protect_conf_of_info_traversing_netw" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_conf_of_info_at_rest_remote_access" mitigation="50"/>
                <countermeasure ref="protect_conf_of_info_traversing_netw" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr5-1" name="SL2 - Common - CR5.1" desc="" library="">
          <threats>
            <threat ref="cr5-1-network_segmentation_exploit" name="An adversary is able to hop between internal networks since they are not segregated" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="logically_segment_control_system" mitigation="50"/>
                    <countermeasure ref="physically_segment_control_system" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="logically_segment_control_system" mitigation="50"/>
                <countermeasure ref="physically_segment_control_system" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr6-2" name="SL2 - Common - CR6.2" desc="" library="">
          <threats>
            <threat ref="cr6-2-continuous_monitoring_exploit" name="An adversary compromises a system  without it being timely notified and detected by for example a IDS" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-693">
                  <countermeasures>
                    <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-1" name="SL2 - Common - CR7.1" desc="" library="">
          <threats>
            <threat ref="cr7-1-dos_no_protect" name="Assets might lose the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event.&#10;" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-1100">
                  <countermeasures>
                    <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                    <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-5" name="SL2 - Common - CR7.5" desc="" library="">
          <threats>
            <threat ref="cr7-5-emergency_power" name="An adversary can cause a power outage of a security system which will give an adversary to compromise the asset." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="switch_to_and_from_emergency_power_supply" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="switch_to_and_from_emergency_power_supply" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-7" name="SL2 - Common - CR7.7" desc="" library="">
          <threats>
            <threat ref="cr7-7-unauth_access_unnecessary_func" name="Unauthorized component access might occur as a result of not being able to restrict unnecessary functions, ports, protocols and/or services." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-8" name="SL2 - Common - CR7.8" desc="" library="">
          <threats>
            <threat ref="cr7-8-rogue_assets" name="Rogue assets might enter the network as a result of not being able to verify component identities." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="c8cbc7f7-45d4-4486-a738-bb274fea4fea" diagramComponentId="45a1430b-7f5c-4694-856c-926e2dff35eb" ref="07017200-5604-494c-98b5-be7ec5de66b5" name="Patient Sensor - IoMT" desc="" library="" parentComponentRef="" componentDefinitionRef="sensor-meters-valves">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="iec62443-sl1"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-284" name="Improper Access Control" state="0" impact="100" issueId="">
          <desc>The software does not restrict or incorrectly restricts access to a resource from an unauthorized actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-79" name="Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')" state="0" impact="100" issueId="">
          <desc>The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-307" name="Improper Restriction of Excessive Authentication Attempts" state="0" impact="100" issueId="">
          <desc>The software does not implement sufficient measures to prevent multiple failed authentication attempts within in a short time frame, making it more susceptible to brute force attacks.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-209" name="Information Exposure Through an Error Message" state="0" impact="100" issueId="">
          <desc>The software generates an error message that includes sensitive information about its environment, users, or associated data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-1100" name="Insufficient Isolation of System-Dependent Functions" state="0" impact="100" issueId="">
          <desc>The product or code does not isolate system-dependent
					functionality into separate stand-alone modules.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="">
          <desc>When a security-critical event occurs, the software either does not record the event or omits important details about the event when logging it.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-522" name="Insufficiently Protected Credentials" state="0" impact="100" issueId="">
          <desc>This weakness occurs when the application transmits or stores authentication credentials and uses an insecure method that is susceptible to unauthorized interception and/or retrieval.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-5" name="J2EE Misconfiguration: Data Transmission Without Encryption" state="0" impact="100" issueId="">
          <desc>Information sent over a network can be compromised while in transit. An attacker may be able to read or modify the contents if the data are sent in plaintext or are weakly encrypted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-311" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="">
          <desc>The software does not encrypt sensitive or critical information before storage or transmission.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-521" name="Weak Password Requirements" state="0" impact="100" issueId="">
          <desc>The product does not require that users should have strong passwords, which makes it easier for attackers to compromise user accounts.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="enforce_auth_all_users_based_on_resp" name="Assets shall provide an authorization enforcement mechanism for all identified and authenticated users based on their assigned responsibilities." issueId="" platform="" cost="0" risk="88" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. On all interfaces, the control system shall provide the capability to enforce authorizations assigned to all users (humans, software processes and devices) for controlling use of the control system to support segregation of duties and least privilege.
2. Authorization is granting of permissions based on authentication. 
3.All authorization decisions should be made on the server, not the client.  
4. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
5. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
6. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
7. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
8. Server side implementation and presentation layer representations of access control rules must match. 
9. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
10. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
11. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_for_audit_records" name="Assets shall provide the capability to create timestamps (including date and time) for use in audit records." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Timestamps (including date and time) of audit records should be generated using internal
system clocks.
1. provide timestamps for use in audit record generation.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="maintain_essential_functions" name="Assets shall provide the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>provide the capability to manage communication loads (such as
using rate limiting) to mitigate the effects of information flooding types of DoS events.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" name="Assets shall provide the capability to specifically restrict the use of unnecessary functions, ports, protocols and/or services." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc> 1. capability to specifically prohibit and/or restrict the use of unnecessary functions, ports, protocols and/or services.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="validate_syntax_length_content_of_any_input" name="Assets shall validate the syntax, length and content of any input data that is used as an industrial process control input or input via external interfaces that directly impacts the action of the asset." issueId="" platform="" cost="0" risk="88" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. input data validation include out-of-range values for a defined field type, invalid characters in data fields, missing or incomplete data and buffer overflow.
2. SAST &amp; DAST
3. Data from external sources are sanitized based on acceptable formats and lengths.  It is preferred to use white listing, over black listing.
4. Data is validated when crossing API boundaries</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_pw_policy_enforce" name="For assets utilizing password-based authentication, the asset shall provide the capability to enforce configurable password strength based on minimum length and variety of character types. " issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.
Note: A service should employ one or more tactics to prevent or at least slow down a brute force attack, including: blacklisting an IP after 5 unsuccessful attempts, slowing down attempts with increasing timeout delays introduced after 5 unsuccessful attempts, locking out non-admin accounts after 3 unsuccessful attempts.  The account must be disabled for a period of time sufficient to discourage brute force guessing of credentials, but not so long as to allow for a denial-of-service attack to be performed.  Allow non-admin users to reset their own passwords to prevent administrative burden.  If users are allowed to reset their password, best practice is to email a new password to the users email account and require a reset upon next logon.  It is not best practice to simply reset and display the new password on the authentication screen as an attacker may trigger that reset and change the password without notice to the user.  If using a screen reveal of password, should be accompanied by both a known secret of user, such as mothers maiden name and also an email to notify the user of such a change.  Temporary passwords and links should have a short expiration time.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_human_user_interface_determine_user_took_action" name="If an asset provides a human user interface, the asset shall provide the capability to determine whether a given human user took a particular action. Control elements that are not able to support such capability shall be listed in component documents." issueId="" platform="" cost="0" risk="88" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Examples of particular actions taken by a user include performing operator actions, changing
control system configurations, creating information, sending a message, approving
information (such as indicating concurrence) and receiving a message.
1. digital signatures, digital message receipts and timestamps</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.14" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" name="If an asset supports usage through wireless interfaces it shall provide the capability to integrate into the asset that supports usage authorization, monitoring and restrictions according to commonly accepted industry practices." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>provide the capability to authorize, monitor and enforce usage restrictions for wireless connectivity to the control system.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="id_and_handle_error_conditions" name="The asset shall identify and handle error conditions in a manner such that effective remediation can occur. This shall be done in a manner which does not provide information that could be exploited by adversaries to attack the IACS unless revealing this information is necessary for the timely troubleshooting of problems." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Error messages generated by the control system should provide timely and useful information without revealing potentially harmful information.
2. Vulnerability Assessment &amp; Penetration Testing</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_config_usage_restriction" name="The asset shall provide the capability to automatically enforce configurable usage restrictions" issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Authenticate &amp; Authorize devices before allowing connection.
2. Digital+E46 Signatures</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="limit_invalid_attempts" name="The asset shall provide the capability to enforce a limit of a configurable number of consecutive invalid access attempts by any user (human, software process or device) during a configurable time period. The asset shall provide the capability to deny access for a specified period of time or until unlocked by an administrator when this limit has been exceeded." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. limit of a configurable number of consecutive invalid access attempts by any user (human, software process or device).
2. As per Policy.
3. For all invalid authentication attempts, the server should simply respond "invalid attempt, please retry" or similarly vague statement that does not imply partial success.  
Note: A service should employ one or more tactics to prevent or at least slow down a brute force attack, including: blacklisting an IP after 5 unsuccessful attempts, slowing down attempts with increasing timeout delays introduced after 5 unsuccessful attempts, locking out non-admin accounts after 3 unsuccessful attempts.  The account must be disabled for a period of time sufficient to discourage brute force guessing of credentials, but not so long as to allow for a denial-of-service attack to be performed.  Allow non-admin users to reset their own passwords to prevent administrative burden.  If users are allowed to reset their password, best practice is to email a new password to the users email account and require a reset upon next logon.  It is not best practice to simply reset and display the new password on the authentication screen as an attacker may trigger that reset and change the password without notice to the user.  If using a screen reveal of password, should be accompanied by both a known secret of user, such as mothers maiden name and also an email to notify the user of such a change.  Temporary passwords and links should have a short expiration time.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" name="The asset shall provide the capability to generate audit records relevant to security for the following categories: access control, request errors, operating system events, asset events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result." issueId="" platform="" cost="0" risk="88" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Generate audit records relevant to security for the following categories: access control, request errors, operating system events, control system events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="logically_segment_control_system" name="The asset shall provide the capability to logically segment asset networks from non-asset networks and to logically segment critical asset networks from other asset networks." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Access from the control system to the World Wide Web should be clearly justified based on
control system operational requirements.
2. Logical Segmentation.
3. Physical Segmentation.
4. capability to provide network services to control system networks, critical or otherwise, without a connection to non-control system networks.
5. capability to logically and physically isolate critical control system networks from non-critical control system networks.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="prevent_further_access_init_seslock" name="The asset shall provide the capability to prevent further access by initiating a session lock after a configurable time period of inactivity or by manual initiation. The session lock shall remain in effect until the human user who owns the session or another authorized human user re-establishes access using appropriate identification and authentication procedures." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. activate session lock mechanisms automatically after a configurable time period.
2. In some cases, session lock for control system operator workstations or nodes is not advised (for example, sessions which are required for immediate operator responses in emergency situations).
3. In situations where the control system cannot support session lock, the responsible entity should employ appropriate compensating countermeasures (for example, providing increased physical security, personnel security and auditing measures).
Note: Use the server or framework’s session management controls. The application should only recognize these session identifiers as valid. Session identifier creation must always be done on a trusted system (e.g., The server). Session management controls should use well vetted algorithms that ensure sufficiently random session identifiers. Set the domain and path for cookies containing authenticated session identifiers to an appropriately restricted value for the site. Logout functionality should fully terminate the associated session or connection. Logout functionality should be available from all pages protected by authorization. Establish a session inactivity timeout that is as short as possible, based on balancing risk and business functional requirements. In most cases it should be no more than several hours. Disallow persistent logins and enforce periodic session terminations, even when the session is active. Especially for applications supporting rich network connections or connecting to critical systems. Termination times should support business requirements and the user should receive sufficient notification to mitigate negative impacts. If a session was established before login, close that session and establish a new session after a successful login. Generate a new session identifier on any re-authentication. Do not allow concurrent logins with the same user ID. Supplement standard session management for sensitive server-side operations, like account management, by utilizing per-session strong random tokens or parameters. This method can be used to prevent Cross Site Request Forgery attacks. Supplement standard session management for highly sensitive or critical operations by utilizing per-request, as opposed to per-session, strong random tokens or parameters. Set the "secure" attribute for cookies transmitted over an TLS connection. Set cookies with the HttpOnly attribute, unless you specifically require client-side scripts within your application to read or set a cookie's value</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_conf_of_info_at_rest_remote_access" name="The asset shall provide the capability to protect the confidentiality of information for which explicit read authorization is supported, whether at rest or in transit." issueId="" platform="" cost="0" risk="88" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. physical means, compartmentalization or encryption.
2. configuring explicit read authorizations in the control system.
3. Digital Certificates.
4. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_integrity_transmitted_info" name="The asset shall provide the capability to protect the integrity of transmitted information." issueId="" platform="" cost="0" risk="88" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="switch_to_and_from_emergency_power_supply" name="The asset shall provide the capability to switch to and from an emergency power supply without affecting the existing security state or a documented degraded mode. " issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>There may be instances where compensating countermeasures such as physical door access
control or control system may be affected by loss of base power supply, in which case the emergency power supply should cover those associated systems.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="common-sl1-cr1-11" name="SL1 - Common - CR1.11" desc="" library="">
          <threats>
            <threat ref="cr1-11-adv_bruteforce_auth_creds" name="And adversary can bruteforce authentication credentials" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-522">
                  <countermeasures>
                    <countermeasure ref="limit_invalid_attempts" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="limit_invalid_attempts" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl1-cr1-7" name="SL1 - Common - CR1.7" desc="" library="">
          <threats>
            <threat ref="cr1-7-adv_bruteforce_pw" name="An adversary is able to brute force the password" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-307">
                  <countermeasures>
                    <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-7-adv_guess_pw" name="An adversary is able to guess the password based on identifying an authenticator" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-521">
                  <countermeasures>
                    <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl1-cr2-1" name="SL1 - Common - CR2.1" desc="" library="">
          <threats>
            <threat ref="cr2-1-adv_connect_with_compromised_acc_make_changes" name="An adversary is able to connect to the asset with a compromised account and is able to make changes to all content available on the asset. (no roles)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_auth_all_users_based_on_resp" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_auth_all_users_based_on_resp" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl1-cr2-11" name="SL1 - Common - CR2.11" desc="" library="">
          <threats>
            <threat ref="cr2-11-an_adversary_compromises_a_system_without_knowing_when_he_compromised_it" name="An adversary compromises a system without knowing when he compromised it." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="create_timestamps_for_audit_records" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="create_timestamps_for_audit_records" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl1-cr2-12" name="SL1 - Common - CR2.12" desc="" library="">
          <threats>
            <threat ref="cr2-12-an_adversary_compromised_the_system_not_knowing_from_where_he_compromised_the_system" name="An adversary compromised the asset, not knowing from where he compromised the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="provide_human_user_interface_determine_user_took_action" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_human_user_interface_determine_user_took_action" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl1-cr2-2" name="SL1 - Common - CR2.2" desc="" library="">
          <threats>
            <threat ref="cr2-2-adv_wifi_access" name="An adversary is able to get access to the asset via wireless protocols without authorization" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl1-cr2-3" name="SL1 - Common - CR2.3" desc="" library="">
          <threats>
            <threat ref="cr2-3-adv_portable_dev_access" name="An adversary can access the asset using a portable device" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_config_usage_restriction" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_config_usage_restriction" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl1-cr2-5" name="SL1 - Common - CR2.5" desc="" library="">
          <threats>
            <threat ref="cr2-5-an_adversary_can_perform_a_dos_attack_by_making_consecutive_authorization_requests" name="An adversary can perform a DoS attack by making consecutive authorization requests" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-307">
                  <countermeasures>
                    <countermeasure ref="prevent_further_access_init_seslock" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="prevent_further_access_init_seslock" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl1-cr2-8" name="SL1 - Common - CR2.8" desc="" library="">
          <threats>
            <threat ref="cr2-8-an_aversary_could_have_compromised_the_sytem_without_you_knowing" name="An adversary could have compromised the system without you knowing what part in the asset was compromised or how he compromised the asset " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl1-cr3-1" name="SL1 - Common - CR3.1" desc="" library="">
          <threats>
            <threat ref="cr3-1-adv_intercept_netw_traffic" name="An adversary can intercept network traffic" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="25" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-5">
                  <countermeasures>
                    <countermeasure ref="protect_integrity_transmitted_info" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_integrity_transmitted_info" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl1-cr3-5" name="SL1 - Common - CR3.5" desc="" library="">
          <threats>
            <threat ref="cr3-5-adv_xss" name="An adversary can perform cross site scripting when input is not validated" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-79">
                  <countermeasures>
                    <countermeasure ref="validate_syntax_length_content_of_any_input" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="validate_syntax_length_content_of_any_input" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl1-cr3-7" name="SL1 - Common - CR3.7" desc="" library="">
          <threats>
            <threat ref="cr3-7-adv_disclose_info_via_error_msg" name="An adversary can use error messages that contain too much information, such as stack traces, to discover vulnerabilities in the running service." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-209">
                  <countermeasures>
                    <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl1-cr4-1" name="SL1 - Common - CR4.1" desc="" library="">
          <threats>
            <threat ref="cr4-1-adv_intercept_unecrypted_file_in_transit" name="An adversary is able to intercept an unencrypted file in transit" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="protect_conf_of_info_at_rest_remote_access" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_conf_of_info_at_rest_remote_access" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl1-cr5-1" name="SL1 - Common - CR5.1" desc="" library="">
          <threats>
            <threat ref="cr5-1-network_segmentation_exploit" name="An adversary is able to hop between internal networks since they are not segregated" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="logically_segment_control_system" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="logically_segment_control_system" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl1-cr7-1" name="SL1 - Common - CR7.1" desc="" library="">
          <threats>
            <threat ref="cr7-1-dos_no_protect" name="Assets might lose the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event.&#10;" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-1100">
                  <countermeasures>
                    <countermeasure ref="maintain_essential_functions" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="maintain_essential_functions" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl1-cr7-5" name="SL1 - Common - CR7.5" desc="" library="">
          <threats>
            <threat ref="cr7-5-emergency_power" name="An adversary can cause a power outage of a security system which will give an adversary to compromise the asset." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="switch_to_and_from_emergency_power_supply" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="switch_to_and_from_emergency_power_supply" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl1-cr7-7" name="SL1 - Common - CR7.7" desc="" library="">
          <threats>
            <threat ref="cr7-7-unauth_access_unnecessary_func" name="Unauthorized component access might occur as a result of not being able to restrict unnecessary functions, ports, protocols and/or services." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="a6890218-4768-4e25-b720-94b9416f7c53" diagramComponentId="c320ba2f-88fa-45e2-bb43-c1b16a596f5b" ref="016991f0-9d1d-4412-80be-ad4e3e3c8364" name="Medical Air/Gas Compressor" desc="" library="" parentComponentRef="" componentDefinitionRef="actuator-compressor-motor-drive">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="iec62443-sl2"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-300" name="Channel Accessible by Non-Endpoint ('Man-in-the-Middle')" state="0" impact="100" issueId="">
          <desc>The product does not adequately verify the identity of actors at both ends of a communication channel, or does not adequately ensure the integrity of the channel, in a way that allows the channel to be accessed or influenced by an actor that is not an endpoint.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-284" name="Improper Access Control" state="0" impact="100" issueId="">
          <desc>The software does not restrict or incorrectly restricts access to a resource from an unauthorized actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-287" name="Improper Authentication" state="0" impact="100" issueId="">
          <desc>When an actor claims to have a given identity, the software does not prove or insufficiently proves that the claim is correct.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-79" name="Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')" state="0" impact="100" issueId="">
          <desc>The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-147" name="Improper Neutralization of Input Terminators" state="0" impact="100" issueId="">
          <desc>The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as input terminators when they are sent to a downstream component.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-307" name="Improper Restriction of Excessive Authentication Attempts" state="0" impact="100" issueId="">
          <desc>The software does not implement sufficient measures to prevent multiple failed authentication attempts within in a short time frame, making it more susceptible to brute force attacks.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-354" name="Improper Validation of Integrity Check Value" state="0" impact="100" issueId="">
          <desc>The software does not validate or incorrectly validates the integrity check values or "checksums" of a message. This may prevent it from detecting if the data has been modified or corrupted in transmission.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-532" name="Inclusion of Sensitive Information in Log Files" state="0" impact="100" issueId="">
          <desc>Information written to log files can be of a sensitive nature and give valuable guidance to an attacker or expose sensitive user information.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-732" name="Incorrect Permission Assignment for Critical Resource" state="0" impact="100" issueId="">
          <desc>The software specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-286" name="Incorrect User Management" state="0" impact="100" issueId="">
          <desc>The software does not properly manage a user within its environment.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-209" name="Information Exposure Through an Error Message" state="0" impact="100" issueId="">
          <desc>The software generates an error message that includes sensitive information about its environment, users, or associated data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-1100" name="Insufficient Isolation of System-Dependent Functions" state="0" impact="100" issueId="">
          <desc>The product or code does not isolate system-dependent
					functionality into separate stand-alone modules.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="">
          <desc>When a security-critical event occurs, the software either does not record the event or omits important details about the event when logging it.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-522" name="Insufficiently Protected Credentials" state="0" impact="100" issueId="">
          <desc>This weakness occurs when the application transmits or stores authentication credentials and uses an insecure method that is susceptible to unauthorized interception and/or retrieval.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-5" name="J2EE Misconfiguration: Data Transmission Without Encryption" state="0" impact="100" issueId="">
          <desc>Information sent over a network can be compromised while in transit. An attacker may be able to read or modify the contents if the data are sent in plaintext or are weakly encrypted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-322" name="Key Exchange without Entity Authentication" state="0" impact="100" issueId="">
          <desc>The software performs a key exchange with an actor without verifying the identity of that actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-311" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="">
          <desc>The software does not encrypt sensitive or critical information before storage or transmission.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-636" name="Not Failing Securely ('Failing Open')" state="0" impact="100" issueId="">
          <desc>When the product encounters an error condition or failure, its design requires it to fall back to a state that is less secure than other options that are available, such as selecting the weakest encryption algorithm or using the most permissive access control restrictions.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-693" name="Protection Mechanism Failure" state="0" impact="100" issueId="">
          <desc>The product does not use or incorrectly uses a protection mechanism that provides sufficient defence against directed attacks against the product.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-384" name="Session Fixation" state="0" impact="100" issueId="">
          <desc>Authenticating a user, or otherwise establishing a new user session, without invalidating any existing session identifier gives an attacker the opportunity to steal authenticated sessions.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-507" name="Trojan Horse" state="0" impact="100" issueId="">
          <desc>The software appears to contain benign or useful functionality, but it also contains code that is hidden from normal operation that violates the intended security policy of the user or the system administrator.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-798" name="Use of Hard-coded Credentials" state="0" impact="100" issueId="">
          <desc>The software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-261" name="Weak Cryptography for Passwords" state="0" impact="100" issueId="">
          <desc>Obscuring a password with a trivial encoding does not protect the password.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-521" name="Weak Password Requirements" state="0" impact="100" issueId="">
          <desc>The product does not require that users should have strong passwords, which makes it easier for attackers to compromise user accounts.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="protect_audit_info_logs_tools" name="Assets shall protect audit information, audit logs, and audit tools (if present) from unauthorized access, modification and deletion." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. the storage of audit information to hardware-enforced write-once media.
2. Access Management Process</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.11" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_auth_all_users_based_on_resp" name="Assets shall provide an authorization enforcement mechanism for all identified and authenticated users based on their assigned responsibilities." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. On all interfaces, the control system shall provide the capability to enforce authorizations assigned to all users (humans, software processes and devices) for controlling use of the control system to support segregation of duties and least privilege.
2. Authorization is granting of permissions based on authentication. 
3.All authorization decisions should be made on the server, not the client.  
4. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
5. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
6. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
7. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
8. Server side implementation and presentation layer representations of access control rules must match. 
9. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
10. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
11. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="auth_humans_tools_audit_logs" name="Assets shall provide the capability for authorized humans and/or tools to access audit logs on a read-only basis." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Access Control - Authorize members
2. Least Privilege &amp; Need to Know Basis
3. Review of access </desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="config_according_to_recommended_netw_and_security" name="Assets shall provide the capability to be configured according to recommended network and security configurations as described in guidelines provided by the asset supplier. The asset shall provide an interface to the currently deployed network and security configuration settings." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Devices with network connectivity are capable of being updated from the network.
2. provide the capability to generate a report listing the currently deployed security settings in a machine-readable format.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="continuous_monitor_accepted_sec" name="Assets shall provide the capability to be continuously monitored using commonly accepted security industry practices and recommendations to detect, characterize and report security breaches in a timely manner." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Control system monitoring capability can be achieved through a variety of tools and
techniques (for example, IDS, IPS, malicious code protection mechanisms and network monitoring mechanisms).
2. Monitoring devices should be strategically deployed within the control system (for example, at
selected perimeter locations and near server farms supporting critical applications) to collect
essential information. Monitoring mechanisms may also be deployed at ad hoc locations
within the control system to track specific transactions
3. SIEM Implementation</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="cap_to_be_recovered_to_known_secure_state" name="Assets shall provide the capability to be recovered and reconstituted to a known secure state after a disruption or failure." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Control system recovery and reconstitution to a known secure state means that all system
parameters (either default or configurable) are set to secure values, security-critical patches
are reinstalled, security-related configuration settings are reestablished, system documentation and operating procedures are available, application and system software is reinstalled and configured with secure settings, information from the most recent, known secure backups is loaded and the system is fully tested and functional.
1. Roll back procedure.
2. Secure storage of previous version</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_for_audit_records" name="Assets shall provide the capability to create timestamps (including date and time) for use in audit records." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Timestamps (including date and time) of audit records should be generated using internal
system clocks.
1. provide timestamps for use in audit record generation.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" name="Assets shall provide the capability to create timestamps that are synchronized with a system wide time source." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>to synchronize internal system clocks at a configurable frequency.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="maintain_essential_functions" name="Assets shall provide the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>provide the capability to manage communication loads (such as
using rate limiting) to mitigate the effects of information flooding types of DoS events.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="support_auth_check_on_software_config" name="Assets shall provide the capability to perform or support authenticity checks on software, configuration and other information as well as the recording and reporting of the results of these checks or be integrated into a system that can perform or support authenticity checks." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Integrity verification methods are employed to detect, record, report and protect against software and information tampering.
1. cryptographic hashes
2. Notification of unauthorize changes
Integrity verification methods are employed to detect, record, report and protect against software and information tampering that may occur if other protection mechanisms (such as authorization enforcement) have been circumvented. The control system should employ formal or recommended integrity mechanisms (such as cryptographic hashes).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="integrity_check_software" name="Assets shall provide the capability to perform or support integrity checks on software, configuration and other information as well as the recording and reporting of the results of these checks or be integrated into a system that can perform or support integrity checks." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Integrity verification methods are employed to detect, record, report and protect against software and information tampering.
1. cryptographic hashes
2. Notification of unauthorize changes
Integrity verification methods are employed to detect, record, report and protect against software and information tampering that may occur if other protection mechanisms (such as authorization enforcement) have been circumvented. The control system should employ formal or recommended integrity mechanisms (such as cryptographic hashes).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_critical_long_lived_symmetric_keys" name="Assets shall provide the capability to protect critical, long lived symmetric keys via hardware mechanisms." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. establish the mutual trust using the symmetric key; store securely the shared secret (the authentication is valid as long as the shared secret remains secret); restrict access to the shared secret; ensure that the algorithms and keys used for the symmetric key authentication</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.16" supportedStandardRef="iec-62443-4-2:2019"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" name="Assets shall provide the capability to specifically restrict the use of unnecessary functions, ports, protocols and/or services." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc> 1. capability to specifically prohibit and/or restrict the use of unnecessary functions, ports, protocols and/or services.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="validate_syntax_length_content_of_any_input" name="Assets shall validate the syntax, length and content of any input data that is used as an industrial process control input or input via external interfaces that directly impacts the action of the asset." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. input data validation include out-of-range values for a defined field type, invalid characters in data fields, missing or incomplete data and buffer overflow.
2. SAST &amp; DAST
3. Data from external sources are sanitized based on acceptable formats and lengths.  It is preferred to use white listing, over black listing.
4. Data is validated when crossing API boundaries</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_pw_policy_enforce" name="For assets utilizing password-based authentication, the asset shall provide the capability to enforce configurable password strength based on minimum length and variety of character types. " issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.
Note: A service should employ one or more tactics to prevent or at least slow down a brute force attack, including: blacklisting an IP after 5 unsuccessful attempts, slowing down attempts with increasing timeout delays introduced after 5 unsuccessful attempts, locking out non-admin accounts after 3 unsuccessful attempts.  The account must be disabled for a period of time sufficient to discourage brute force guessing of credentials, but not so long as to allow for a denial-of-service attack to be performed.  Allow non-admin users to reset their own passwords to prevent administrative burden.  If users are allowed to reset their password, best practice is to email a new password to the users email account and require a reset upon next logon.  It is not best practice to simply reset and display the new password on the authentication screen as an attacker may trigger that reset and change the password without notice to the user.  If using a screen reveal of password, should be accompanied by both a known secret of user, such as mothers maiden name and also an email to notify the user of such a change.  Temporary passwords and links should have a short expiration time.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_id_and_auth_for_human_users" name="Identify and authenticate all human users" issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. passwords, tokens, biometrics, Certificates, geographic location
2. role-based or group-based
3. should be applied to both local and remote access to the control system.
4. Least Privilege 
5. Segregation of Duties
6. Authentication types (factors): (1) something you know (a secret) -like username and password; (2) something you have - such as a token device or smart phone; and (3) something you are - such as biometrics. 
7. On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.
8.  services should run as non-root accounts or use SUID accounts that release privilege after service start.  Non-root accounts used for services should not have a shell enabled, i.e. /dev/null should be shell in passwd file.  In cases where the application must run with elevated privileges, raise privileges as late as possible, and drop them as soon as possible.  For windows based services, it is preferred to run the service as SYSTEM, instead of an administrator account, which would have credentials which may be guessed and used in an attack.
9. Authorization is granting of permissions based on authentication. 
10.All authorization decisions should be made on the server, not the client.  
11. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
12. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
13. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
14. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
15. Server side implementation and presentation layer representations of access control rules must match. 
16. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
17. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
18. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources
Note: system level forms of identification, such as IP or MAC address are easily spoofable and therefore do not qualify as a valid form of authentication. Establish and utilize standard, tested, authentication services whenever possible. Use a centralized implementation for all authentication controls, including libraries that call external authentication services. Segregate authentication logic from the resource being requested and use redirection to and from the centralized authentication control.  All authentication controls should fail securely. Enforce password complexity requirements established by policy or regulation. Authentication credentials should be sufficient to withstand attacks that are typical of the threats in the deployed environment. (e.g., requiring the use of alphabetic as well as numeric and/or special characters). Enforce password length requirements established by policy or regulation. Eight characters is commonly used, but 16 is better or consider the use of multi-word pass phrases. Password entry should be obscured on the user's screen. (e.g., on web forms use the input type "password")</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_human_user_interface_determine_user_took_action" name="If an asset provides a human user interface, the asset shall provide the capability to determine whether a given human user took a particular action. Control elements that are not able to support such capability shall be listed in component documents." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Examples of particular actions taken by a user include performing operator actions, changing
control system configurations, creating information, sending a message, approving
information (such as indicating concurrence) and receiving a message.
1. digital signatures, digital message receipts and timestamps</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.14" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" name="If an asset supports usage through wireless interfaces it shall provide the capability to integrate into the asset that supports usage authorization, monitoring and restrictions according to commonly accepted industry practices." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>provide the capability to authorize, monitor and enforce usage restrictions for wireless connectivity to the control system.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_acc_mgmt_for_auth_users" name="Provide support of management of all accounts by authorized users" issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. individual, role-based, device-based, Service &amp;  default account management Policy.
2. Review of accounts.
3. Approvals for creating, disabling, removing or modifying accounts.
4.  On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="id_and_handle_error_conditions" name="The asset shall identify and handle error conditions in a manner such that effective remediation can occur. This shall be done in a manner which does not provide information that could be exploited by adversaries to attack the IACS unless revealing this information is necessary for the timely troubleshooting of problems." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Error messages generated by the control system should provide timely and useful information without revealing potentially harmful information.
2. Vulnerability Assessment &amp; Penetration Testing</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_auth_based_on_role_leas_priv" name="The asset shall provide authorization enforcement for all users based on their assigned responsibilities and least privilege" issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. enforce authorizations assigned to all human users.
2. Use control policies (for example, identity-based policies, role-based policies and rule-based policies) and associated read/write access enforcement mechanisms (for example, access control lists, access control matrices and cryptography).
2. check which roles are assigned to a verified user or asset and which privileges are assigned to these roles – if the requested operation is covered by the permissions, it is executed, otherwise rejected. Only qualified and authorized individuals should obtain the use of control system components for purposes of initiating changes, including upgrades and modifications. Authorization is granting of permissions based on authentication. 
3.All authorization decisions should be made on the server, not the client.  
4. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
5. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
6. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
7. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
8. Server side implementation and presentation layer representations of access control rules must match. 
9. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
10. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
11. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="role_to_define_and_modify_perm_mapping" name="The asset shall provide directly or through a compensating security mechanism, for an authorized role to define and modify the mapping of permissions to roles for all human users" issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>The control system shall provide the capability for an authorized user or role to define and
modify the mapping of permissions to roles for all human users.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="alert_personnel_prevent_svc_loss" name="The asset shall provide the capability to alert personnel and prevent the loss of essential services and functions in the event of an audit processing failure. The control system shall provide the capability to support appropriate actions in response to an audit processing failure according to commonly accepted industry practices and recommendations. " issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Audit generation typically occurs at the source of the event. Audit processing involves
transmission, possible augmentation (such as the addition of a timestamp) and persistent
storage of the audit records. Audit processing failures include, for example, software or
hardware errors, failures in the audit capturing mechanisms and audit storage capacity being
reached or exceeded
1.capability to alert personnel and prevent the loss of essential services and functions in the event of an audit processing failure.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.12" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="show_sys_use_notification" name="The asset shall provide the capability to display a system use notification message before authenticating. The system use notification message shall be configurable by authorized personnel." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. display a system use notification message or warning banners before authenticating &amp; configurable by authorized personnel.
2. Privacy and security policies and procedures need to be consistent with applicable laws,
directives, policies, regulations, standards and guidance.
3. Examples of elements for inclusion in the system use notification message are:
a) that the individual is accessing a specific control system;
b) that system usage may be monitored, recorded and subject to audit;
c) that unauthorized use of the system is prohibited and subject to criminal and/or civil
penalties; and
d) that use of the system indicates consent to monitoring and recording</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.14" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="employ_cypto_mechs_to_recognize_changes" name="The asset shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="employ_maware_protection" name="The asset shall provide the capability to employ malicious code protection mechanisms at all entry and exit points." issueId="" platform="" cost="0" risk="83" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>prevent, detect, mitigate and report instances of detected malicious code (for example, viruses, worms, Trojan horses and spyware) transported by electronic mail, electronic mail attachments, Internet access, removable media (for example, universal serial bus (USB) devices, diskettes or compact disks), PDF documents, web services, network connections and infected laptops or other
common means.
1. Detection Technique  - binary integrity and attributes monitoring, hashing and signature techniques.
2.Mitigation technique - file cleaning, quarantining, file deletion, host communication restriction and IPSs
3. Prevention Technique - application blacklisting and whitelisting techniques, removable media control, sandbox techniques and specific computing platforms mechanisms such as restricted firmware update capabilities, No Execute (NX) bit, data execution prevention (DEP), address space layout randomization (ASLR), stack corruption detection and mandatory access controls.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" name="The asset shall provide the capability to employ protection mechanisms to prevent, detect, report and mitigate the effects of malicious code or unauthorized software. The asset shall provide the capability to update the protection mechanisms." issueId="" platform="" cost="0" risk="83" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>prevent, detect, mitigate and report instances of detected malicious code (for example, viruses, worms, Trojan horses and spyware) transported by electronic mail, electronic mail attachments, Internet access, removable media (for example, universal serial bus (USB) devices, diskettes or compact disks), PDF documents, web services, network connections and infected laptops or other
common means.
1. Detection Technique  - binary integrity and attributes monitoring, hashing and signature techniques.
2.Mitigation technique - file cleaning, quarantining, file deletion, host communication restriction and IPSs
3. Prevention Technique - application blacklisting and whitelisting techniques, removable media control, sandbox techniques and specific computing platforms mechanisms such as restricted firmware update capabilities, No Execute (NX) bit, data execution prevention (DEP), address space layout randomization (ASLR), stack corruption detection and mandatory access controls.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="limit_invalid_attempts" name="The asset shall provide the capability to enforce a limit of a configurable number of consecutive invalid access attempts by any user (human, software process or device) during a configurable time period. The asset shall provide the capability to deny access for a specified period of time or until unlocked by an administrator when this limit has been exceeded." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. limit of a configurable number of consecutive invalid access attempts by any user (human, software process or device).
2. As per Policy.
3. For all invalid authentication attempts, the server should simply respond "invalid attempt, please retry" or similarly vague statement that does not imply partial success.  
Note: A service should employ one or more tactics to prevent or at least slow down a brute force attack, including: blacklisting an IP after 5 unsuccessful attempts, slowing down attempts with increasing timeout delays introduced after 5 unsuccessful attempts, locking out non-admin accounts after 3 unsuccessful attempts.  The account must be disabled for a period of time sufficient to discourage brute force guessing of credentials, but not so long as to allow for a denial-of-service attack to be performed.  Allow non-admin users to reset their own passwords to prevent administrative burden.  If users are allowed to reset their password, best practice is to email a new password to the users email account and require a reset upon next logon.  It is not best practice to simply reset and display the new password on the authentication screen as an attacker may trigger that reset and change the password without notice to the user.  If using a screen reveal of password, should be accompanied by both a known secret of user, such as mothers maiden name and also an email to notify the user of such a change.  Temporary passwords and links should have a short expiration time.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" name="The asset shall provide the capability to generate audit records relevant to security for the following categories: access control, request errors, operating system events, asset events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Generate audit records relevant to security for the following categories: access control, request errors, operating system events, control system events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_auth_init" name="The asset shall provide the capability to: initialize authenticator content; change all default authenticators upon asset installation; change/refresh all authenticators; protect all authenticators from unauthorized disclosure and modification when stored and transmitted." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>&gt; initialize authenticator content;
&gt; change all default authenticators upon control system installation;
&gt; change/refresh all authenticators; and
&gt; protect all authenticators from unauthorized disclosure and modification when stored and
transmitted
2.  tokens, symmetric keys, private keys (part of a public/private key pair), biometrics,
passwords, physical keys and key card
3. Human users should take reasonable measures to safeguard authenticators, including maintaining possession of their individual authenticators, not loaning or sharing authenticators with others and reporting lost or compromised authenticators immediately.
4. cryptographic protections such as encryption or hashing or by handshake protocols which do not require transmission of the password. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.
5. Lockout or loss of control due to security measures is not acceptable. If the control system is required to have a high level of availability, measures should be taken to maintain this high
level of availability (such as compensating physical countermeasures, duplicate keys and
supervisory override).
6. Complex strength of the authentication mechanism</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="logically_segment_control_system" name="The asset shall provide the capability to logically segment asset networks from non-asset networks and to logically segment critical asset networks from other asset networks." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Access from the control system to the World Wide Web should be clearly justified based on
control system operational requirements.
2. Logical Segmentation.
3. Physical Segmentation.
4. capability to provide network services to control system networks, critical or otherwise, without a connection to non-control system networks.
5. capability to logically and physically isolate critical control system networks from non-critical control system networks.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="mitigate_info_effects_flooding_types" name="The asset shall provide the capability to manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. boundary protection
2. restricting the information flow to be unidirectional outbound
3. manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events.
4. restrict the ability of all users (humans, software processes and devices) to cause DoS events which affect other control systems or networks.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="physically_segment_control_system" name="The asset shall provide the capability to physically segment asset networks from non-asset networks and to physically segment critical asset networks from non-critical asset networks." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="prevent_further_access_init_seslock" name="The asset shall provide the capability to prevent further access by initiating a session lock after a configurable time period of inactivity or by manual initiation. The session lock shall remain in effect until the human user who owns the session or another authorized human user re-establishes access using appropriate identification and authentication procedures." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. activate session lock mechanisms automatically after a configurable time period.
2. In some cases, session lock for control system operator workstations or nodes is not advised (for example, sessions which are required for immediate operator responses in emergency situations).
3. In situations where the control system cannot support session lock, the responsible entity should employ appropriate compensating countermeasures (for example, providing increased physical security, personnel security and auditing measures).
Note: Use the server or framework’s session management controls. The application should only recognize these session identifiers as valid. Session identifier creation must always be done on a trusted system (e.g., The server). Session management controls should use well vetted algorithms that ensure sufficiently random session identifiers. Set the domain and path for cookies containing authenticated session identifiers to an appropriately restricted value for the site. Logout functionality should fully terminate the associated session or connection. Logout functionality should be available from all pages protected by authorization. Establish a session inactivity timeout that is as short as possible, based on balancing risk and business functional requirements. In most cases it should be no more than several hours. Disallow persistent logins and enforce periodic session terminations, even when the session is active. Especially for applications supporting rich network connections or connecting to critical systems. Termination times should support business requirements and the user should receive sufficient notification to mitigate negative impacts. If a session was established before login, close that session and establish a new session after a successful login. Generate a new session identifier on any re-authentication. Do not allow concurrent logins with the same user ID. Supplement standard session management for sensitive server-side operations, like account management, by utilizing per-session strong random tokens or parameters. This method can be used to prevent Cross Site Request Forgery attacks. Supplement standard session management for highly sensitive or critical operations by utilizing per-request, as opposed to per-session, strong random tokens or parameters. Set the "secure" attribute for cookies transmitted over an TLS connection. Set cookies with the HttpOnly attribute, unless you specifically require client-side scripts within your application to read or set a cookie's value</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_conf_of_info_traversing_netw" name="The asset shall provide the capability to protect the confidentiality of information at rest and remote access sessions traversing an untrusted network." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_conf_of_info_at_rest_remote_access" name="The asset shall provide the capability to protect the confidentiality of information for which explicit read authorization is supported, whether at rest or in transit." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. physical means, compartmentalization or encryption.
2. configuring explicit read authorizations in the control system.
3. Digital Certificates.
4. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_integrity_of_sessions" name="The asset shall provide the capability to protect the integrity of sessions. The asset shall reject any usage of invalid session IDs." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Use of session integrity mechanisms can have a significant overhead and therefore their use should be considered in light of requirements for real-time communications.
2. capability to invalidate session IDs upon user logout or other session termination (including browser sessions).
3. generate a unique session ID for each session and treat all unexpected session IDs as invalid.
4. generate unique session IDs with commonly accepted sources of randomness.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_integrity_transmitted_info" name="The asset shall provide the capability to protect the integrity of transmitted information." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="report_current_list_of_installed_assets" name="The asset shall provide the capability to report the current list of installed assets and their associated properties." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Usage of component ID, capability and revision level.
2. Formal process of configuration management should be deployed to keep control of the
changes in the component inventory baseline
3. The system requires all default passwords and pass phrases to be changed in order to complete the setup, prior to being operational.  This includes SSID passphrases, default accounts, admin accounts, etc.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_support_mgmt_id_by_user_group_role" name="The asset shall provide the capability to support the management of identifiers by user, group, role or asset interface." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Management of identifiers by group, role or  system interface.
2. Session ID, resource ID, secure cookie management policy.
3. On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.
NOTE: Use the server or framework’s session management controls. The application should only recognize these session identifiers as valid. Session identifier creation must always be done on a trusted system (e.g., The server). Session management controls should use well vetted algorithms that ensure sufficiently random session identifiers. Set the domain and path for cookies containing authenticated session identifiers to an appropriately restricted value for the site. Logout functionality should fully terminate the associated session or connection. Logout functionality should be available from all pages protected by authorization. Establish a session inactivity timeout that is as short as possible, based on balancing risk and business functional requirements. In most cases it should be no more than several hours. Disallow persistent logins and enforce periodic session terminations, even when the session is active. Especially for applications supporting rich network connections or connecting to critical systems. Termination times should support business requirements and the user should receive sufficient notification to mitigate negative impacts. If a session was established before login, close that session and establish a new session after a successful login. Generate a new session identifier on any re-authentication. Do not allow concurrent logins with the same user ID. Supplement standard session management for sensitive server-side operations, like account management, by utilizing per-session strong random tokens or parameters. This method can be used to prevent Cross Site Request Forgery attacks. Supplement standard session management for highly sensitive or critical operations by utilizing per-request, as opposed to per-session, strong random tokens or parameters. Set the "secure" attribute for cookies transmitted over an TLS connection. Set cookies with the HttpOnly attribute, unless you specifically require client-side scripts within your application to read or set a cookie's value
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="verify_intended_ops" name="The asset shall provide the capability to support verification of the intended operation of security functions and report when anomalies are discovered during FAT, SAT and scheduled maintenance. These security functions shall include all those necessary to support the security requirements specified in this standard." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Security verification functions include:
• Verification of antivirus measures by European Institute for Computer Antivirus Research
(EICAR) testing of the control system file system. Antivirus software should detect this and
appropriate incident handling procedures should be triggered.
• Verification of the identification, authentication and use control measures by attempting
access with an unauthorized account (for some functionality this could be automated).
• Verification of IDSs as a security control by including a rule in the IDS that triggers on
irregular, but known non-malicious traffic. The test could then be performed by introducing
traffic that triggers this rule and the appropriate IDS monitoring and incident handling
procedures.
• Confirmation that audit logging is occurring as required by security policies and
procedures and has not been disabled by an internal or external entity.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="switch_to_and_from_emergency_power_supply" name="The asset shall provide the capability to switch to and from an emergency power supply without affecting the existing security state or a documented degraded mode. " issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>There may be instances where compensating countermeasures such as physical door access
control or control system may be affected by loss of base power supply, in which case the emergency power supply should cover those associated systems.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="unique_id_human_users" name="The asset shall provide the capability to uniquely identify and authenticate all human users." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. passwords, tokens, biometrics, Certificates, geographic location
2. role-based or group-based
3. should be applied to both local and remote access to the control system.
4. Least Privilege 
5. Segregation of Duties
6. Authentication types (factors): (1) something you know (a secret) -like username and password; (2) something you have - such as a token device or smart phone; and (3) something you are - such as biometrics. 
7. On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.
8.  services should run as non-root accounts or use SUID accounts that release privilege after service start.  Non-root accounts used for services should not have a shell enabled, i.e. /dev/null should be shell in passwd file.  In cases where the application must run with elevated privileges, raise privileges as late as possible, and drop them as soon as possible.  For windows based services, it is preferred to run the service as SYSTEM, instead of an administrator account, which would have credentials which may be guessed and used in an attack.
9. Authorization is granting of permissions based on authentication. 
10.All authorization decisions should be made on the server, not the client.  
11. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
12. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
13. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
14. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
15. Server side implementation and presentation layer representations of access control rules must match. 
16. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
17. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
18. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources.
19. Assign identifiers that uniquely identify users/devices
a. E.g., employ a unique username-password combination for the user
b. Reasoning: This will prevent user 1 from spoofing as user 2. This is a concern for users with different levels of access.
20. Uniquely identify and authenticate users and devices
c. Multi-factor authentication
d. Use of authentication protocols that require no password/multifactor authentication: e.g., OAuth, OpenID, SAML
Note: system level forms of identification, such as IP or MAC address are easily spoofable and therefore do not qualify as a valid form of authentication. Establish and utilize standard, tested, authentication services whenever possible. Use a centralized implementation for all authentication controls, including libraries that call external authentication services. Segregate authentication logic from the resource being requested and use redirection to and from the centralized authentication control.  All authentication controls should fail securely. Enforce password complexity requirements established by policy or regulation. Authentication credentials should be sufficient to withstand attacks that are typical of the threats in the deployed environment. (e.g., requiring the use of alphabetic as well as numeric and/or special characters). Enforce password length requirements established by policy or regulation. Eight characters is commonly used, but 16 is better or consider the use of multi-word pass phrases. Password entry should be obscured on the user's screen. (e.g., on web forms use the input type "password")</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="validate_integrity_of_backup_info" name="The asset shall provide the capability to verify the reliability of backup mechanisms" issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>provide the capability to verify the reliability of backup mechanisms</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="id_auth_all_users_engaged_in_wireless_comms" name="The controls system shall provide the capability to identify and authenticate all users (humans, software processes or devices) engaged in wireless communication." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Identification of Wireless technologies include, but are not limited to, microwave, satellite, packet radio, Institute of Electrical and Electronics Engineers (IEEE) 802.11x, IEEE 802.15.4 (ZigBee,IEC 62591 – WirelessHART®, ISA-100.11a), IEEE 802.15.1 (Bluetooth), wireless LAN mobile routers, mobile phones with tethering and various infrared technologies.
1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="uniquely_id_auth_all_users_engaged_in_wireless_comms" name="The controls system shall provide the capability to uniquely identify and authenticate all users (humans, software processes or devices) engaged in wireless communication." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Identification of Wireless technologies include, but are not limited to, microwave, satellite, packet radio, Institute of Electrical and Electronics Engineers (IEEE) 802.11x, IEEE 802.15.4 (ZigBee,IEC 62591 – WirelessHART®, ISA-100.11a), IEEE 802.15.1 (Bluetooth), wireless LAN mobile routers, mobile phones with tethering and various infrared technologies.
1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_participate_in_sys_level_backup" name="The identity and location of critical files and the ability to conduct backups of user-level and system-level information (including system state information) shall be supported by the asset without affecting the normal plant operations." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. availability of up-to-date backups.
2. verify the reliability of backup mechanisms.
3. automate the backup function based on a configurable frequency.
4. Review of Failed Backups.
5. Centralize Backup, backup media.
6. Encrypted backup storage</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="common-sl2-cr1-1" name="SL2 - Common - CR1.1" desc="" library="">
          <threats>
            <threat ref="cr1-1-auth_access_token_exploit" name="An adversary exploits a weakness in authentication to create an access token to associate a process/thread" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-287">
                  <countermeasures>
                    <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                    <countermeasure ref="unique_id_human_users" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                <countermeasure ref="unique_id_human_users" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-1-unauth_human_sys_access" name="Unauthorized human access to the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                    <countermeasure ref="unique_id_human_users" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                <countermeasure ref="unique_id_human_users" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-1-unid-sys-user" name="Unidentified user of the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="50" availability="25" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-286">
                  <countermeasures>
                    <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                    <countermeasure ref="unique_id_human_users" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                <countermeasure ref="unique_id_human_users" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-11" name="SL2 - Common - CR1.11" desc="" library="">
          <threats>
            <threat ref="cr1-11-adv_bruteforce_auth_creds" name="And adversary can bruteforce authentication credentials" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-522">
                  <countermeasures>
                    <countermeasure ref="limit_invalid_attempts" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="limit_invalid_attempts" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-12" name="SL2 - Common - CR1.12" desc="" library="">
          <threats>
            <threat ref="cr1-12-adv_no_motd" name="Adversaries who compromised the asset can dispute there was no message stating access was only for authorized personnel" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="show_sys_use_notification" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="show_sys_use_notification" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-14" name="SL2 - Common - CR1.14" desc="" library="">
          <threats>
            <threat ref="cr1-14-rogue_employee_abuse_key" name="A rogue employee has unfettered access to a key and might use it for a malicious purpose or pass it onto someone else to the same end." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-322">
                  <countermeasures>
                    <countermeasure ref="protect_critical_long_lived_symmetric_keys" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_critical_long_lived_symmetric_keys" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-3" name="SL2 - Common - CR1.3" desc="" library="">
          <threats>
            <threat ref="cr1-3-adv_get_netw_info" name="An adversary that has previously obtained unauthorized access to certain device resources, uses that access to obtain information such as location and network information" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="provide_acc_mgmt_for_auth_users" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_acc_mgmt_for_auth_users" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-4" name="SL2 - Common - CR1.4" desc="" library="">
          <threats>
            <threat ref="cr1-4-adv_guess_trusted_id" name="An adversary guesses, obtains, or &quot;rides&quot; a trusted identifier (e.g. session ID, resource ID, cookie, etc.) to perform authorized actions under the guise of an authenticated user or service." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-384">
                  <countermeasures>
                    <countermeasure ref="provide_support_mgmt_id_by_user_group_role" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_support_mgmt_id_by_user_group_role" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-5" name="SL2 - Common - CR1.5" desc="" library="">
          <threats>
            <threat ref="cr1-5-adv_guess_default_pw" name="An adversary guesses the default password and user of an authenticator (e.g. admin:admin)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-521">
                  <countermeasures>
                    <countermeasure ref="provide_auth_init" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_auth_init" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-5-adv_retrieve_unencrypted_pw" name="An adversary is able to retrieve unencrypted passwords after a DBMS/DB -server breach" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-261">
                  <countermeasures>
                    <countermeasure ref="provide_auth_init" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_auth_init" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-6" name="SL2 - Common - CR1.6" desc="" library="">
          <threats>
            <threat ref="cr1-6-adv_rogue_dev_mitm" name="An adversary can plant a rogue device to perform man-in-the-middle attacks" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
                    <countermeasure ref="uniquely_id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
                <countermeasure ref="uniquely_id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-7" name="SL2 - Common - CR1.7" desc="" library="">
          <threats>
            <threat ref="cr1-7-adv_bruteforce_pw" name="An adversary is able to brute force the password" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-307">
                  <countermeasures>
                    <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-7-adv_guess_pw" name="An adversary is able to guess the password based on identifying an authenticator" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-521">
                  <countermeasures>
                    <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-1" name="SL2 - Common - CR2.1" desc="" library="">
          <threats>
            <threat ref="cr2-1-adv_connect_with_compromised_acc_make_changes" name="An adversary is able to connect to the asset with a compromised account and is able to make changes to all content available on the asset. (no roles)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_auth_all_users_based_on_resp" mitigation="34"/>
                    <countermeasure ref="enforce_auth_based_on_role_leas_priv" mitigation="33"/>
                    <countermeasure ref="role_to_define_and_modify_perm_mapping" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_auth_all_users_based_on_resp" mitigation="34"/>
                <countermeasure ref="enforce_auth_based_on_role_leas_priv" mitigation="33"/>
                <countermeasure ref="role_to_define_and_modify_perm_mapping" mitigation="33"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-10" name="SL2 - Common - CR2.10" desc="" library="">
          <threats>
            <threat ref="cr2-10-a_system_user_admin_is_not_notified_when_there_is_an_error_logging_the_system" name="A system user admin is not notified when there is an error logging the asset. Adversaries can use this by making the logging of the asset prone to errors by introducing a bug in the process. Now adversaries can compromise the system without it being logged." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="75" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="alert_personnel_prevent_svc_loss" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="alert_personnel_prevent_svc_loss" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-11" name="SL2 - Common - CR2.11" desc="" library="">
          <threats>
            <threat ref="cr2-11-an_adversary_compromises_a_system_without_knowing_when_he_compromised_it" name="An adversary compromises a system without knowing when he compromised it." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                    <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-12" name="SL2 - Common - CR2.12" desc="" library="">
          <threats>
            <threat ref="cr2-12-an_adversary_compromised_the_system_not_knowing_from_where_he_compromised_the_system" name="An adversary compromised the asset, not knowing from where he compromised the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="provide_human_user_interface_determine_user_took_action" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_human_user_interface_determine_user_took_action" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-2" name="SL2 - Common - CR2.2" desc="" library="">
          <threats>
            <threat ref="cr2-2-adv_wifi_access" name="An adversary is able to get access to the asset via wireless protocols without authorization" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-5" name="SL2 - Common - CR2.5" desc="" library="">
          <threats>
            <threat ref="cr2-5-an_adversary_can_perform_a_dos_attack_by_making_consecutive_authorization_requests" name="An adversary can perform a DoS attack by making consecutive authorization requests" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-307">
                  <countermeasures>
                    <countermeasure ref="prevent_further_access_init_seslock" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="prevent_further_access_init_seslock" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-8" name="SL2 - Common - CR2.8" desc="" library="">
          <threats>
            <threat ref="cr2-8-an_aversary_could_have_compromised_the_sytem_without_you_knowing" name="An adversary could have compromised the system without you knowing what part in the asset was compromised or how he compromised the asset " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-1" name="SL2 - Common - CR3.1" desc="" library="">
          <threats>
            <threat ref="cr3-1-adv_intercept_netw_traffic" name="An adversary can intercept network traffic" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="25" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-5">
                  <countermeasures>
                    <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                    <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-2" name="SL2 - Common - CR3.2" desc="" library="">
          <threats>
            <threat ref="cr3-2-adv_phishing_mail" name="An adversary sends a phishing mail with a trojan as email attachment" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-507">
                  <countermeasures>
                    <countermeasure ref="employ_maware_protection" mitigation="50"/>
                    <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="employ_maware_protection" mitigation="50"/>
                <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-3" name="SL2 - Common - CR3.3" desc="" library="">
          <threats>
            <threat ref="cr3-3-adv_plant_backdoor" name="An adversary could have planted a backdoor on the asset without the user ever knowing (no anti-virus)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-147">
                  <countermeasures>
                    <countermeasure ref="verify_intended_ops" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="verify_intended_ops" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-4" name="SL2 - Common - CR3.4" desc="" library="">
          <threats>
            <threat ref="cr3-4-adv_tamper_software" name="An adversary is able to tamper with software running on a system. On the asset no integrity check is in place." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-354">
                  <countermeasures>
                    <countermeasure ref="integrity_check_software" mitigation="50"/>
                    <countermeasure ref="support_auth_check_on_software_config" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="integrity_check_software" mitigation="50"/>
                <countermeasure ref="support_auth_check_on_software_config" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-5" name="SL2 - Common - CR3.5" desc="" library="">
          <threats>
            <threat ref="cr3-5-adv_xss" name="An adversary can perform cross site scripting when input is not validated" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-79">
                  <countermeasures>
                    <countermeasure ref="validate_syntax_length_content_of_any_input" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="validate_syntax_length_content_of_any_input" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-7" name="SL2 - Common - CR3.7" desc="" library="">
          <threats>
            <threat ref="cr3-7-adv_disclose_info_via_error_msg" name="An adversary can use error messages that contain too much information, such as stack traces, to discover vulnerabilities in the running service." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-209">
                  <countermeasures>
                    <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-8" name="SL2 - Common - CR3.8" desc="" library="">
          <threats>
            <threat ref="cr3-8-adv_mitm_random_sessionid" name="An adversary can perform a man in the middle attack when generating a session with a random session-ID." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="protect_integrity_of_sessions" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_integrity_of_sessions" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-9" name="SL2 - Common - CR3.9" desc="" library="">
          <threats>
            <threat ref="cr3-9-adv_delete_audit_records_after_breach" name="An adversary is able to delete audit records after a system breach which can make investigations very difficult  " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-732">
                  <countermeasures>
                    <countermeasure ref="protect_audit_info_logs_tools" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_audit_info_logs_tools" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr4-1" name="SL2 - Common - CR4.1" desc="" library="">
          <threats>
            <threat ref="cr4-1-adv_intercept_unecrypted_file_in_transit" name="An adversary is able to intercept an unencrypted file in transit" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="protect_conf_of_info_at_rest_remote_access" mitigation="50"/>
                    <countermeasure ref="protect_conf_of_info_traversing_netw" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_conf_of_info_at_rest_remote_access" mitigation="50"/>
                <countermeasure ref="protect_conf_of_info_traversing_netw" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr5-1" name="SL2 - Common - CR5.1" desc="" library="">
          <threats>
            <threat ref="cr5-1-network_segmentation_exploit" name="An adversary is able to hop between internal networks since they are not segregated" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="logically_segment_control_system" mitigation="50"/>
                    <countermeasure ref="physically_segment_control_system" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="logically_segment_control_system" mitigation="50"/>
                <countermeasure ref="physically_segment_control_system" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr6-1" name="SL2 - Common - CR6.1" desc="" library="">
          <threats>
            <threat ref="cr6-1-audit_log_exploit" name="An adversary may compromise the asset and edit the logfiles with non root privileges" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-532">
                  <countermeasures>
                    <countermeasure ref="auth_humans_tools_audit_logs" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="auth_humans_tools_audit_logs" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr6-2" name="SL2 - Common - CR6.2" desc="" library="">
          <threats>
            <threat ref="cr6-2-continuous_monitoring_exploit" name="An adversary compromises a system  without it being timely notified and detected by for example a IDS" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-693">
                  <countermeasures>
                    <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-1" name="SL2 - Common - CR7.1" desc="" library="">
          <threats>
            <threat ref="cr7-1-dos_no_protect" name="Assets might lose the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event.&#10;" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-1100">
                  <countermeasures>
                    <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                    <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-3" name="SL2 - Common - CR7.3" desc="" library="">
          <threats>
            <threat ref="cr7-3-no_usr_sys_info_backup" name="Assets might not regain their state (user- and system-level information) due to storage failure." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="50" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-636">
                  <countermeasures>
                    <countermeasure ref="provide_participate_in_sys_level_backup" mitigation="50"/>
                    <countermeasure ref="validate_integrity_of_backup_info" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_participate_in_sys_level_backup" mitigation="50"/>
                <countermeasure ref="validate_integrity_of_backup_info" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-4" name="SL2 - Common - CR7.4" desc="" library="">
          <threats>
            <threat ref="cr7-4-no_usr_sys_info_backup" name="Assets might not regain their state (user- and system-level information) due to storage failure." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="50" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-636">
                  <countermeasures>
                    <countermeasure ref="cap_to_be_recovered_to_known_secure_state" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="cap_to_be_recovered_to_known_secure_state" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-5" name="SL2 - Common - CR7.5" desc="" library="">
          <threats>
            <threat ref="cr7-5-emergency_power" name="An adversary can cause a power outage of a security system which will give an adversary to compromise the asset." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="switch_to_and_from_emergency_power_supply" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="switch_to_and_from_emergency_power_supply" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-6" name="SL2 - Common - CR7.6" desc="" library="">
          <threats>
            <threat ref="cr7-6-unauth_access_default_creds" name="Unauthorized component access might occur as a result of not being able to change default access credentials" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-798">
                  <countermeasures>
                    <countermeasure ref="config_according_to_recommended_netw_and_security" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="config_according_to_recommended_netw_and_security" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-7" name="SL2 - Common - CR7.7" desc="" library="">
          <threats>
            <threat ref="cr7-7-unauth_access_unnecessary_func" name="Unauthorized component access might occur as a result of not being able to restrict unnecessary functions, ports, protocols and/or services." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-8" name="SL2 - Common - CR7.8" desc="" library="">
          <threats>
            <threat ref="cr7-8-rogue_assets" name="Rogue assets might enter the network as a result of not being able to verify component identities." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="7a44f0fa-2363-4eee-8896-fd095a432198" diagramComponentId="b97e2821-f908-4d05-9d24-095c1c4b672c" ref="d2253644-dbf2-4ae9-97e6-0fcd3713c378" name="Serial Interface - RS485 Port" desc="" library="" parentComponentRef="" componentDefinitionRef="serial-interface-rs485">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="iec62443-sl2"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-300" name="Channel Accessible by Non-Endpoint ('Man-in-the-Middle')" state="0" impact="100" issueId="">
          <desc>The product does not adequately verify the identity of actors at both ends of a communication channel, or does not adequately ensure the integrity of the channel, in a way that allows the channel to be accessed or influenced by an actor that is not an endpoint.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-209" name="Information Exposure Through an Error Message" state="0" impact="100" issueId="">
          <desc>The software generates an error message that includes sensitive information about its environment, users, or associated data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-1100" name="Insufficient Isolation of System-Dependent Functions" state="0" impact="100" issueId="">
          <desc>The product or code does not isolate system-dependent
					functionality into separate stand-alone modules.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="">
          <desc>When a security-critical event occurs, the software either does not record the event or omits important details about the event when logging it.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-5" name="J2EE Misconfiguration: Data Transmission Without Encryption" state="0" impact="100" issueId="">
          <desc>Information sent over a network can be compromised while in transit. An attacker may be able to read or modify the contents if the data are sent in plaintext or are weakly encrypted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-693" name="Protection Mechanism Failure" state="0" impact="100" issueId="">
          <desc>The product does not use or incorrectly uses a protection mechanism that provides sufficient defence against directed attacks against the product.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="continuous_monitor_accepted_sec" name="Assets shall provide the capability to be continuously monitored using commonly accepted security industry practices and recommendations to detect, characterize and report security breaches in a timely manner." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Control system monitoring capability can be achieved through a variety of tools and
techniques (for example, IDS, IPS, malicious code protection mechanisms and network monitoring mechanisms).
2. Monitoring devices should be strategically deployed within the control system (for example, at
selected perimeter locations and near server farms supporting critical applications) to collect
essential information. Monitoring mechanisms may also be deployed at ad hoc locations
within the control system to track specific transactions
3. SIEM Implementation</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_for_audit_records" name="Assets shall provide the capability to create timestamps (including date and time) for use in audit records." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Timestamps (including date and time) of audit records should be generated using internal
system clocks.
1. provide timestamps for use in audit record generation.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" name="Assets shall provide the capability to create timestamps that are synchronized with a system wide time source." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>to synchronize internal system clocks at a configurable frequency.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="maintain_essential_functions" name="Assets shall provide the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>provide the capability to manage communication loads (such as
using rate limiting) to mitigate the effects of information flooding types of DoS events.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="id_and_handle_error_conditions" name="The asset shall identify and handle error conditions in a manner such that effective remediation can occur. This shall be done in a manner which does not provide information that could be exploited by adversaries to attack the IACS unless revealing this information is necessary for the timely troubleshooting of problems." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Error messages generated by the control system should provide timely and useful information without revealing potentially harmful information.
2. Vulnerability Assessment &amp; Penetration Testing</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="employ_cypto_mechs_to_recognize_changes" name="The asset shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" name="The asset shall provide the capability to generate audit records relevant to security for the following categories: access control, request errors, operating system events, asset events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Generate audit records relevant to security for the following categories: access control, request errors, operating system events, control system events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="mitigate_info_effects_flooding_types" name="The asset shall provide the capability to manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. boundary protection
2. restricting the information flow to be unidirectional outbound
3. manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events.
4. restrict the ability of all users (humans, software processes and devices) to cause DoS events which affect other control systems or networks.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_integrity_transmitted_info" name="The asset shall provide the capability to protect the integrity of transmitted information." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="report_current_list_of_installed_assets" name="The asset shall provide the capability to report the current list of installed assets and their associated properties." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Usage of component ID, capability and revision level.
2. Formal process of configuration management should be deployed to keep control of the
changes in the component inventory baseline
3. The system requires all default passwords and pass phrases to be changed in order to complete the setup, prior to being operational.  This includes SSID passphrases, default accounts, admin accounts, etc.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="common-sl2-cr2-11" name="SL2 - Common - CR2.11" desc="" library="">
          <threats>
            <threat ref="cr2-11-an_adversary_compromises_a_system_without_knowing_when_he_compromised_it" name="An adversary compromises a system without knowing when he compromised it." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                    <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-8" name="SL2 - Common - CR2.8" desc="" library="">
          <threats>
            <threat ref="cr2-8-an_aversary_could_have_compromised_the_sytem_without_you_knowing" name="An adversary could have compromised the system without you knowing what part in the asset was compromised or how he compromised the asset " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-1" name="SL2 - Common - CR3.1" desc="" library="">
          <threats>
            <threat ref="cr3-1-adv_intercept_netw_traffic" name="An adversary can intercept network traffic" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="25" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-5">
                  <countermeasures>
                    <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                    <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-7" name="SL2 - Common - CR3.7" desc="" library="">
          <threats>
            <threat ref="cr3-7-adv_disclose_info_via_error_msg" name="An adversary can use error messages that contain too much information, such as stack traces, to discover vulnerabilities in the running service." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-209">
                  <countermeasures>
                    <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr6-2" name="SL2 - Common - CR6.2" desc="" library="">
          <threats>
            <threat ref="cr6-2-continuous_monitoring_exploit" name="An adversary compromises a system  without it being timely notified and detected by for example a IDS" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-693">
                  <countermeasures>
                    <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-1" name="SL2 - Common - CR7.1" desc="" library="">
          <threats>
            <threat ref="cr7-1-dos_no_protect" name="Assets might lose the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event.&#10;" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-1100">
                  <countermeasures>
                    <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                    <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-8" name="SL2 - Common - CR7.8" desc="" library="">
          <threats>
            <threat ref="cr7-8-rogue_assets" name="Rogue assets might enter the network as a result of not being able to verify component identities." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="5f748c6b-90d3-4a27-bf2c-d23b68df0df2" diagramComponentId="652b7f53-8f6b-4464-bdbb-fcf71f37696c" ref="381c61a9-0000-4cfa-8bd6-4f8707a65e2f" name="Sensors" desc="" library="" parentComponentRef="" componentDefinitionRef="sensor-meters-valves">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="iec62443-sl2"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-300" name="Channel Accessible by Non-Endpoint ('Man-in-the-Middle')" state="0" impact="100" issueId="">
          <desc>The product does not adequately verify the identity of actors at both ends of a communication channel, or does not adequately ensure the integrity of the channel, in a way that allows the channel to be accessed or influenced by an actor that is not an endpoint.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-284" name="Improper Access Control" state="0" impact="100" issueId="">
          <desc>The software does not restrict or incorrectly restricts access to a resource from an unauthorized actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-79" name="Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')" state="0" impact="100" issueId="">
          <desc>The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-307" name="Improper Restriction of Excessive Authentication Attempts" state="0" impact="100" issueId="">
          <desc>The software does not implement sufficient measures to prevent multiple failed authentication attempts within in a short time frame, making it more susceptible to brute force attacks.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-732" name="Incorrect Permission Assignment for Critical Resource" state="0" impact="100" issueId="">
          <desc>The software specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-209" name="Information Exposure Through an Error Message" state="0" impact="100" issueId="">
          <desc>The software generates an error message that includes sensitive information about its environment, users, or associated data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-1100" name="Insufficient Isolation of System-Dependent Functions" state="0" impact="100" issueId="">
          <desc>The product or code does not isolate system-dependent
					functionality into separate stand-alone modules.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="">
          <desc>When a security-critical event occurs, the software either does not record the event or omits important details about the event when logging it.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-522" name="Insufficiently Protected Credentials" state="0" impact="100" issueId="">
          <desc>This weakness occurs when the application transmits or stores authentication credentials and uses an insecure method that is susceptible to unauthorized interception and/or retrieval.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-5" name="J2EE Misconfiguration: Data Transmission Without Encryption" state="0" impact="100" issueId="">
          <desc>Information sent over a network can be compromised while in transit. An attacker may be able to read or modify the contents if the data are sent in plaintext or are weakly encrypted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-311" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="">
          <desc>The software does not encrypt sensitive or critical information before storage or transmission.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-693" name="Protection Mechanism Failure" state="0" impact="100" issueId="">
          <desc>The product does not use or incorrectly uses a protection mechanism that provides sufficient defence against directed attacks against the product.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-521" name="Weak Password Requirements" state="0" impact="100" issueId="">
          <desc>The product does not require that users should have strong passwords, which makes it easier for attackers to compromise user accounts.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="protect_audit_info_logs_tools" name="Assets shall protect audit information, audit logs, and audit tools (if present) from unauthorized access, modification and deletion." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. the storage of audit information to hardware-enforced write-once media.
2. Access Management Process</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.11" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_auth_all_users_based_on_resp" name="Assets shall provide an authorization enforcement mechanism for all identified and authenticated users based on their assigned responsibilities." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. On all interfaces, the control system shall provide the capability to enforce authorizations assigned to all users (humans, software processes and devices) for controlling use of the control system to support segregation of duties and least privilege.
2. Authorization is granting of permissions based on authentication. 
3.All authorization decisions should be made on the server, not the client.  
4. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
5. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
6. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
7. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
8. Server side implementation and presentation layer representations of access control rules must match. 
9. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
10. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
11. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="continuous_monitor_accepted_sec" name="Assets shall provide the capability to be continuously monitored using commonly accepted security industry practices and recommendations to detect, characterize and report security breaches in a timely manner." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Control system monitoring capability can be achieved through a variety of tools and
techniques (for example, IDS, IPS, malicious code protection mechanisms and network monitoring mechanisms).
2. Monitoring devices should be strategically deployed within the control system (for example, at
selected perimeter locations and near server farms supporting critical applications) to collect
essential information. Monitoring mechanisms may also be deployed at ad hoc locations
within the control system to track specific transactions
3. SIEM Implementation</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_for_audit_records" name="Assets shall provide the capability to create timestamps (including date and time) for use in audit records." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Timestamps (including date and time) of audit records should be generated using internal
system clocks.
1. provide timestamps for use in audit record generation.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" name="Assets shall provide the capability to create timestamps that are synchronized with a system wide time source." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>to synchronize internal system clocks at a configurable frequency.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="maintain_essential_functions" name="Assets shall provide the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>provide the capability to manage communication loads (such as
using rate limiting) to mitigate the effects of information flooding types of DoS events.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" name="Assets shall provide the capability to specifically restrict the use of unnecessary functions, ports, protocols and/or services." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc> 1. capability to specifically prohibit and/or restrict the use of unnecessary functions, ports, protocols and/or services.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="validate_syntax_length_content_of_any_input" name="Assets shall validate the syntax, length and content of any input data that is used as an industrial process control input or input via external interfaces that directly impacts the action of the asset." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. input data validation include out-of-range values for a defined field type, invalid characters in data fields, missing or incomplete data and buffer overflow.
2. SAST &amp; DAST
3. Data from external sources are sanitized based on acceptable formats and lengths.  It is preferred to use white listing, over black listing.
4. Data is validated when crossing API boundaries</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_pw_policy_enforce" name="For assets utilizing password-based authentication, the asset shall provide the capability to enforce configurable password strength based on minimum length and variety of character types. " issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.
Note: A service should employ one or more tactics to prevent or at least slow down a brute force attack, including: blacklisting an IP after 5 unsuccessful attempts, slowing down attempts with increasing timeout delays introduced after 5 unsuccessful attempts, locking out non-admin accounts after 3 unsuccessful attempts.  The account must be disabled for a period of time sufficient to discourage brute force guessing of credentials, but not so long as to allow for a denial-of-service attack to be performed.  Allow non-admin users to reset their own passwords to prevent administrative burden.  If users are allowed to reset their password, best practice is to email a new password to the users email account and require a reset upon next logon.  It is not best practice to simply reset and display the new password on the authentication screen as an attacker may trigger that reset and change the password without notice to the user.  If using a screen reveal of password, should be accompanied by both a known secret of user, such as mothers maiden name and also an email to notify the user of such a change.  Temporary passwords and links should have a short expiration time.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_human_user_interface_determine_user_took_action" name="If an asset provides a human user interface, the asset shall provide the capability to determine whether a given human user took a particular action. Control elements that are not able to support such capability shall be listed in component documents." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Examples of particular actions taken by a user include performing operator actions, changing
control system configurations, creating information, sending a message, approving
information (such as indicating concurrence) and receiving a message.
1. digital signatures, digital message receipts and timestamps</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.14" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" name="If an asset supports usage through wireless interfaces it shall provide the capability to integrate into the asset that supports usage authorization, monitoring and restrictions according to commonly accepted industry practices." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>provide the capability to authorize, monitor and enforce usage restrictions for wireless connectivity to the control system.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="id_and_handle_error_conditions" name="The asset shall identify and handle error conditions in a manner such that effective remediation can occur. This shall be done in a manner which does not provide information that could be exploited by adversaries to attack the IACS unless revealing this information is necessary for the timely troubleshooting of problems." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Error messages generated by the control system should provide timely and useful information without revealing potentially harmful information.
2. Vulnerability Assessment &amp; Penetration Testing</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_auth_based_on_role_leas_priv" name="The asset shall provide authorization enforcement for all users based on their assigned responsibilities and least privilege" issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. enforce authorizations assigned to all human users.
2. Use control policies (for example, identity-based policies, role-based policies and rule-based policies) and associated read/write access enforcement mechanisms (for example, access control lists, access control matrices and cryptography).
2. check which roles are assigned to a verified user or asset and which privileges are assigned to these roles – if the requested operation is covered by the permissions, it is executed, otherwise rejected. Only qualified and authorized individuals should obtain the use of control system components for purposes of initiating changes, including upgrades and modifications. Authorization is granting of permissions based on authentication. 
3.All authorization decisions should be made on the server, not the client.  
4. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
5. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
6. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
7. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
8. Server side implementation and presentation layer representations of access control rules must match. 
9. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
10. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
11. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="role_to_define_and_modify_perm_mapping" name="The asset shall provide directly or through a compensating security mechanism, for an authorized role to define and modify the mapping of permissions to roles for all human users" issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>The control system shall provide the capability for an authorized user or role to define and
modify the mapping of permissions to roles for all human users.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_config_usage_restriction" name="The asset shall provide the capability to automatically enforce configurable usage restrictions" issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Authenticate &amp; Authorize devices before allowing connection.
2. Digital+E46 Signatures</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="employ_cypto_mechs_to_recognize_changes" name="The asset shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="limit_invalid_attempts" name="The asset shall provide the capability to enforce a limit of a configurable number of consecutive invalid access attempts by any user (human, software process or device) during a configurable time period. The asset shall provide the capability to deny access for a specified period of time or until unlocked by an administrator when this limit has been exceeded." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. limit of a configurable number of consecutive invalid access attempts by any user (human, software process or device).
2. As per Policy.
3. For all invalid authentication attempts, the server should simply respond "invalid attempt, please retry" or similarly vague statement that does not imply partial success.  
Note: A service should employ one or more tactics to prevent or at least slow down a brute force attack, including: blacklisting an IP after 5 unsuccessful attempts, slowing down attempts with increasing timeout delays introduced after 5 unsuccessful attempts, locking out non-admin accounts after 3 unsuccessful attempts.  The account must be disabled for a period of time sufficient to discourage brute force guessing of credentials, but not so long as to allow for a denial-of-service attack to be performed.  Allow non-admin users to reset their own passwords to prevent administrative burden.  If users are allowed to reset their password, best practice is to email a new password to the users email account and require a reset upon next logon.  It is not best practice to simply reset and display the new password on the authentication screen as an attacker may trigger that reset and change the password without notice to the user.  If using a screen reveal of password, should be accompanied by both a known secret of user, such as mothers maiden name and also an email to notify the user of such a change.  Temporary passwords and links should have a short expiration time.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" name="The asset shall provide the capability to generate audit records relevant to security for the following categories: access control, request errors, operating system events, asset events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Generate audit records relevant to security for the following categories: access control, request errors, operating system events, control system events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="logically_segment_control_system" name="The asset shall provide the capability to logically segment asset networks from non-asset networks and to logically segment critical asset networks from other asset networks." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Access from the control system to the World Wide Web should be clearly justified based on
control system operational requirements.
2. Logical Segmentation.
3. Physical Segmentation.
4. capability to provide network services to control system networks, critical or otherwise, without a connection to non-control system networks.
5. capability to logically and physically isolate critical control system networks from non-critical control system networks.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="mitigate_info_effects_flooding_types" name="The asset shall provide the capability to manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. boundary protection
2. restricting the information flow to be unidirectional outbound
3. manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events.
4. restrict the ability of all users (humans, software processes and devices) to cause DoS events which affect other control systems or networks.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="physically_segment_control_system" name="The asset shall provide the capability to physically segment asset networks from non-asset networks and to physically segment critical asset networks from non-critical asset networks." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="prevent_further_access_init_seslock" name="The asset shall provide the capability to prevent further access by initiating a session lock after a configurable time period of inactivity or by manual initiation. The session lock shall remain in effect until the human user who owns the session or another authorized human user re-establishes access using appropriate identification and authentication procedures." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. activate session lock mechanisms automatically after a configurable time period.
2. In some cases, session lock for control system operator workstations or nodes is not advised (for example, sessions which are required for immediate operator responses in emergency situations).
3. In situations where the control system cannot support session lock, the responsible entity should employ appropriate compensating countermeasures (for example, providing increased physical security, personnel security and auditing measures).
Note: Use the server or framework’s session management controls. The application should only recognize these session identifiers as valid. Session identifier creation must always be done on a trusted system (e.g., The server). Session management controls should use well vetted algorithms that ensure sufficiently random session identifiers. Set the domain and path for cookies containing authenticated session identifiers to an appropriately restricted value for the site. Logout functionality should fully terminate the associated session or connection. Logout functionality should be available from all pages protected by authorization. Establish a session inactivity timeout that is as short as possible, based on balancing risk and business functional requirements. In most cases it should be no more than several hours. Disallow persistent logins and enforce periodic session terminations, even when the session is active. Especially for applications supporting rich network connections or connecting to critical systems. Termination times should support business requirements and the user should receive sufficient notification to mitigate negative impacts. If a session was established before login, close that session and establish a new session after a successful login. Generate a new session identifier on any re-authentication. Do not allow concurrent logins with the same user ID. Supplement standard session management for sensitive server-side operations, like account management, by utilizing per-session strong random tokens or parameters. This method can be used to prevent Cross Site Request Forgery attacks. Supplement standard session management for highly sensitive or critical operations by utilizing per-request, as opposed to per-session, strong random tokens or parameters. Set the "secure" attribute for cookies transmitted over an TLS connection. Set cookies with the HttpOnly attribute, unless you specifically require client-side scripts within your application to read or set a cookie's value</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_conf_of_info_traversing_netw" name="The asset shall provide the capability to protect the confidentiality of information at rest and remote access sessions traversing an untrusted network." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_conf_of_info_at_rest_remote_access" name="The asset shall provide the capability to protect the confidentiality of information for which explicit read authorization is supported, whether at rest or in transit." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. physical means, compartmentalization or encryption.
2. configuring explicit read authorizations in the control system.
3. Digital Certificates.
4. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_integrity_transmitted_info" name="The asset shall provide the capability to protect the integrity of transmitted information." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="report_current_list_of_installed_assets" name="The asset shall provide the capability to report the current list of installed assets and their associated properties." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Usage of component ID, capability and revision level.
2. Formal process of configuration management should be deployed to keep control of the
changes in the component inventory baseline
3. The system requires all default passwords and pass phrases to be changed in order to complete the setup, prior to being operational.  This includes SSID passphrases, default accounts, admin accounts, etc.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="switch_to_and_from_emergency_power_supply" name="The asset shall provide the capability to switch to and from an emergency power supply without affecting the existing security state or a documented degraded mode. " issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>There may be instances where compensating countermeasures such as physical door access
control or control system may be affected by loss of base power supply, in which case the emergency power supply should cover those associated systems.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="common-sl2-cr1-11" name="SL2 - Common - CR1.11" desc="" library="">
          <threats>
            <threat ref="cr1-11-adv_bruteforce_auth_creds" name="And adversary can bruteforce authentication credentials" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-522">
                  <countermeasures>
                    <countermeasure ref="limit_invalid_attempts" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="limit_invalid_attempts" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-7" name="SL2 - Common - CR1.7" desc="" library="">
          <threats>
            <threat ref="cr1-7-adv_bruteforce_pw" name="An adversary is able to brute force the password" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-307">
                  <countermeasures>
                    <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-7-adv_guess_pw" name="An adversary is able to guess the password based on identifying an authenticator" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-521">
                  <countermeasures>
                    <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-1" name="SL2 - Common - CR2.1" desc="" library="">
          <threats>
            <threat ref="cr2-1-adv_connect_with_compromised_acc_make_changes" name="An adversary is able to connect to the asset with a compromised account and is able to make changes to all content available on the asset. (no roles)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_auth_all_users_based_on_resp" mitigation="34"/>
                    <countermeasure ref="enforce_auth_based_on_role_leas_priv" mitigation="33"/>
                    <countermeasure ref="role_to_define_and_modify_perm_mapping" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_auth_all_users_based_on_resp" mitigation="34"/>
                <countermeasure ref="enforce_auth_based_on_role_leas_priv" mitigation="33"/>
                <countermeasure ref="role_to_define_and_modify_perm_mapping" mitigation="33"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-11" name="SL2 - Common - CR2.11" desc="" library="">
          <threats>
            <threat ref="cr2-11-an_adversary_compromises_a_system_without_knowing_when_he_compromised_it" name="An adversary compromises a system without knowing when he compromised it." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                    <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-12" name="SL2 - Common - CR2.12" desc="" library="">
          <threats>
            <threat ref="cr2-12-an_adversary_compromised_the_system_not_knowing_from_where_he_compromised_the_system" name="An adversary compromised the asset, not knowing from where he compromised the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="provide_human_user_interface_determine_user_took_action" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_human_user_interface_determine_user_took_action" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-2" name="SL2 - Common - CR2.2" desc="" library="">
          <threats>
            <threat ref="cr2-2-adv_wifi_access" name="An adversary is able to get access to the asset via wireless protocols without authorization" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-3" name="SL2 - Common - CR2.3" desc="" library="">
          <threats>
            <threat ref="cr2-3-adv_portable_dev_access" name="An adversary can access the asset using a portable device" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_config_usage_restriction" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_config_usage_restriction" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-5" name="SL2 - Common - CR2.5" desc="" library="">
          <threats>
            <threat ref="cr2-5-an_adversary_can_perform_a_dos_attack_by_making_consecutive_authorization_requests" name="An adversary can perform a DoS attack by making consecutive authorization requests" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-307">
                  <countermeasures>
                    <countermeasure ref="prevent_further_access_init_seslock" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="prevent_further_access_init_seslock" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-8" name="SL2 - Common - CR2.8" desc="" library="">
          <threats>
            <threat ref="cr2-8-an_aversary_could_have_compromised_the_sytem_without_you_knowing" name="An adversary could have compromised the system without you knowing what part in the asset was compromised or how he compromised the asset " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-1" name="SL2 - Common - CR3.1" desc="" library="">
          <threats>
            <threat ref="cr3-1-adv_intercept_netw_traffic" name="An adversary can intercept network traffic" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="25" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-5">
                  <countermeasures>
                    <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                    <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-5" name="SL2 - Common - CR3.5" desc="" library="">
          <threats>
            <threat ref="cr3-5-adv_xss" name="An adversary can perform cross site scripting when input is not validated" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-79">
                  <countermeasures>
                    <countermeasure ref="validate_syntax_length_content_of_any_input" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="validate_syntax_length_content_of_any_input" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-7" name="SL2 - Common - CR3.7" desc="" library="">
          <threats>
            <threat ref="cr3-7-adv_disclose_info_via_error_msg" name="An adversary can use error messages that contain too much information, such as stack traces, to discover vulnerabilities in the running service." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-209">
                  <countermeasures>
                    <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-9" name="SL2 - Common - CR3.9" desc="" library="">
          <threats>
            <threat ref="cr3-9-adv_delete_audit_records_after_breach" name="An adversary is able to delete audit records after a system breach which can make investigations very difficult  " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-732">
                  <countermeasures>
                    <countermeasure ref="protect_audit_info_logs_tools" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_audit_info_logs_tools" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr4-1" name="SL2 - Common - CR4.1" desc="" library="">
          <threats>
            <threat ref="cr4-1-adv_intercept_unecrypted_file_in_transit" name="An adversary is able to intercept an unencrypted file in transit" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="protect_conf_of_info_at_rest_remote_access" mitigation="50"/>
                    <countermeasure ref="protect_conf_of_info_traversing_netw" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_conf_of_info_at_rest_remote_access" mitigation="50"/>
                <countermeasure ref="protect_conf_of_info_traversing_netw" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr5-1" name="SL2 - Common - CR5.1" desc="" library="">
          <threats>
            <threat ref="cr5-1-network_segmentation_exploit" name="An adversary is able to hop between internal networks since they are not segregated" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="logically_segment_control_system" mitigation="50"/>
                    <countermeasure ref="physically_segment_control_system" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="logically_segment_control_system" mitigation="50"/>
                <countermeasure ref="physically_segment_control_system" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr6-2" name="SL2 - Common - CR6.2" desc="" library="">
          <threats>
            <threat ref="cr6-2-continuous_monitoring_exploit" name="An adversary compromises a system  without it being timely notified and detected by for example a IDS" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-693">
                  <countermeasures>
                    <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-1" name="SL2 - Common - CR7.1" desc="" library="">
          <threats>
            <threat ref="cr7-1-dos_no_protect" name="Assets might lose the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event.&#10;" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-1100">
                  <countermeasures>
                    <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                    <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-5" name="SL2 - Common - CR7.5" desc="" library="">
          <threats>
            <threat ref="cr7-5-emergency_power" name="An adversary can cause a power outage of a security system which will give an adversary to compromise the asset." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="switch_to_and_from_emergency_power_supply" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="switch_to_and_from_emergency_power_supply" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-7" name="SL2 - Common - CR7.7" desc="" library="">
          <threats>
            <threat ref="cr7-7-unauth_access_unnecessary_func" name="Unauthorized component access might occur as a result of not being able to restrict unnecessary functions, ports, protocols and/or services." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-8" name="SL2 - Common - CR7.8" desc="" library="">
          <threats>
            <threat ref="cr7-8-rogue_assets" name="Rogue assets might enter the network as a result of not being able to verify component identities." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="647f2cda-1528-4cc3-a1df-2a207f423a85" diagramComponentId="988be79a-7a7d-488d-8e32-ab8f8b50a629" ref="95ade30b-5a44-42d8-a6b9-c744760cdde9" name="Gateway,Router" desc="" library="" parentComponentRef="" componentDefinitionRef="gateway-router">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="iec62443-sl2"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-300" name="Channel Accessible by Non-Endpoint ('Man-in-the-Middle')" state="0" impact="100" issueId="">
          <desc>The product does not adequately verify the identity of actors at both ends of a communication channel, or does not adequately ensure the integrity of the channel, in a way that allows the channel to be accessed or influenced by an actor that is not an endpoint.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-284" name="Improper Access Control" state="0" impact="100" issueId="">
          <desc>The software does not restrict or incorrectly restricts access to a resource from an unauthorized actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-287" name="Improper Authentication" state="0" impact="100" issueId="">
          <desc>When an actor claims to have a given identity, the software does not prove or insufficiently proves that the claim is correct.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-94" name="Improper Control of Generation of Code ('Code Injection')" state="0" impact="100" issueId="">
          <desc>The software constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behaviour of the intended code segment.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-20" name="Improper Input Validation" state="0" impact="100" issueId="">
          <desc>The product does not validate or incorrectly validates input that can affect the control flow or data flow of a program.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-79" name="Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')" state="0" impact="100" issueId="">
          <desc>The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-147" name="Improper Neutralization of Input Terminators" state="0" impact="100" issueId="">
          <desc>The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as input terminators when they are sent to a downstream component.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-117" name="Improper Output Neutralization for Logs" state="0" impact="100" issueId="">
          <desc>The software does not neutralize or incorrectly neutralizes output that is written to logs.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-307" name="Improper Restriction of Excessive Authentication Attempts" state="0" impact="100" issueId="">
          <desc>The software does not implement sufficient measures to prevent multiple failed authentication attempts within in a short time frame, making it more susceptible to brute force attacks.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-354" name="Improper Validation of Integrity Check Value" state="0" impact="100" issueId="">
          <desc>The software does not validate or incorrectly validates the integrity check values or "checksums" of a message. This may prevent it from detecting if the data has been modified or corrupted in transmission.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-347" name="Improper Verification of Cryptographic Signature" state="0" impact="100" issueId="">
          <desc>The software does not verify, or incorrectly verifies, the cryptographic signature for data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-326" name="Inadequate Encryption Strength" state="0" impact="100" issueId="">
          <desc>The software stores or transmits sensitive data using an encryption scheme that is theoretically sound, but is not strong enough for the level of protection required.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-532" name="Inclusion of Sensitive Information in Log Files" state="0" impact="100" issueId="">
          <desc>Information written to log files can be of a sensitive nature and give valuable guidance to an attacker or expose sensitive user information.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-732" name="Incorrect Permission Assignment for Critical Resource" state="0" impact="100" issueId="">
          <desc>The software specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-286" name="Incorrect User Management" state="0" impact="100" issueId="">
          <desc>The software does not properly manage a user within its environment.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-209" name="Information Exposure Through an Error Message" state="0" impact="100" issueId="">
          <desc>The software generates an error message that includes sensitive information about its environment, users, or associated data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-1100" name="Insufficient Isolation of System-Dependent Functions" state="0" impact="100" issueId="">
          <desc>The product or code does not isolate system-dependent
					functionality into separate stand-alone modules.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="">
          <desc>When a security-critical event occurs, the software either does not record the event or omits important details about the event when logging it.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-522" name="Insufficiently Protected Credentials" state="0" impact="100" issueId="">
          <desc>This weakness occurs when the application transmits or stores authentication credentials and uses an insecure method that is susceptible to unauthorized interception and/or retrieval.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-5" name="J2EE Misconfiguration: Data Transmission Without Encryption" state="0" impact="100" issueId="">
          <desc>Information sent over a network can be compromised while in transit. An attacker may be able to read or modify the contents if the data are sent in plaintext or are weakly encrypted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-322" name="Key Exchange without Entity Authentication" state="0" impact="100" issueId="">
          <desc>The software performs a key exchange with an actor without verifying the identity of that actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-311" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="">
          <desc>The software does not encrypt sensitive or critical information before storage or transmission.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-636" name="Not Failing Securely ('Failing Open')" state="0" impact="100" issueId="">
          <desc>When the product encounters an error condition or failure, its design requires it to fall back to a state that is less secure than other options that are available, such as selecting the weakest encryption algorithm or using the most permissive access control restrictions.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-672" name="Operation on a Resource after Expiration or Release" state="0" impact="100" issueId="">
          <desc>The software uses, accesses, or otherwise operates on a resource after that resource has been expired, released, or revoked.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-693" name="Protection Mechanism Failure" state="0" impact="100" issueId="">
          <desc>The product does not use or incorrectly uses a protection mechanism that provides sufficient defence against directed attacks against the product.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-384" name="Session Fixation" state="0" impact="100" issueId="">
          <desc>Authenticating a user, or otherwise establishing a new user session, without invalidating any existing session identifier gives an attacker the opportunity to steal authenticated sessions.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-507" name="Trojan Horse" state="0" impact="100" issueId="">
          <desc>The software appears to contain benign or useful functionality, but it also contains code that is hidden from normal operation that violates the intended security policy of the user or the system administrator.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-400" name="Uncontrolled Resource Consumption" state="0" impact="100" issueId="">
          <desc>The software does not properly control the allocation and maintenance of a limited resource thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-798" name="Use of Hard-coded Credentials" state="0" impact="100" issueId="">
          <desc>The software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-916" name="Use of Password Hash With Insufficient Computational Effort" state="0" impact="100" issueId="">
          <desc>The software generates a hash for a password, but it uses a scheme that does not provide a sufficient level of computational effort that would make password cracking attacks infeasible or expensive.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-261" name="Weak Cryptography for Passwords" state="0" impact="100" issueId="">
          <desc>Obscuring a password with a trivial encoding does not protect the password.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-521" name="Weak Password Requirements" state="0" impact="100" issueId="">
          <desc>The product does not require that users should have strong passwords, which makes it easier for attackers to compromise user accounts.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-123" name="Write-what-where Condition" state="0" impact="100" issueId="">
          <desc>Any condition where the attacker has the ability to write an arbitrary value to an arbitrary location, often as the result of a buffer overflow.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="protect_audit_info_logs_tools" name="Assets shall protect audit information, audit logs, and audit tools (if present) from unauthorized access, modification and deletion." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. the storage of audit information to hardware-enforced write-once media.
2. Access Management Process</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.11" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_auth_all_users_based_on_resp" name="Assets shall provide an authorization enforcement mechanism for all identified and authenticated users based on their assigned responsibilities." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. On all interfaces, the control system shall provide the capability to enforce authorizations assigned to all users (humans, software processes and devices) for controlling use of the control system to support segregation of duties and least privilege.
2. Authorization is granting of permissions based on authentication. 
3.All authorization decisions should be made on the server, not the client.  
4. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
5. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
6. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
7. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
8. Server side implementation and presentation layer representations of access control rules must match. 
9. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
10. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
11. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="auth_humans_tools_audit_logs" name="Assets shall provide the capability for authorized humans and/or tools to access audit logs on a read-only basis." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Access Control - Authorize members
2. Least Privilege &amp; Need to Know Basis
3. Review of access </desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="config_according_to_recommended_netw_and_security" name="Assets shall provide the capability to be configured according to recommended network and security configurations as described in guidelines provided by the asset supplier. The asset shall provide an interface to the currently deployed network and security configuration settings." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Devices with network connectivity are capable of being updated from the network.
2. provide the capability to generate a report listing the currently deployed security settings in a machine-readable format.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="continuous_monitor_accepted_sec" name="Assets shall provide the capability to be continuously monitored using commonly accepted security industry practices and recommendations to detect, characterize and report security breaches in a timely manner." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Control system monitoring capability can be achieved through a variety of tools and
techniques (for example, IDS, IPS, malicious code protection mechanisms and network monitoring mechanisms).
2. Monitoring devices should be strategically deployed within the control system (for example, at
selected perimeter locations and near server farms supporting critical applications) to collect
essential information. Monitoring mechanisms may also be deployed at ad hoc locations
within the control system to track specific transactions
3. SIEM Implementation</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="cap_to_be_recovered_to_known_secure_state" name="Assets shall provide the capability to be recovered and reconstituted to a known secure state after a disruption or failure." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Control system recovery and reconstitution to a known secure state means that all system
parameters (either default or configurable) are set to secure values, security-critical patches
are reinstalled, security-related configuration settings are reestablished, system documentation and operating procedures are available, application and system software is reinstalled and configured with secure settings, information from the most recent, known secure backups is loaded and the system is fully tested and functional.
1. Roll back procedure.
2. Secure storage of previous version</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_for_audit_records" name="Assets shall provide the capability to create timestamps (including date and time) for use in audit records." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Timestamps (including date and time) of audit records should be generated using internal
system clocks.
1. provide timestamps for use in audit record generation.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" name="Assets shall provide the capability to create timestamps that are synchronized with a system wide time source." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>to synchronize internal system clocks at a configurable frequency.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="explicit_read_auth_protect_conf_info" name="Assets shall provide the capability to erase all information, for which explicit read authorization is supported, from assets to be released from active service and/or decommissioned." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Removal of a control system component from active service should not provide the
opportunity for unintentional release of information for which explicit read authorization is
supported.
1. Information produced by the actions of a user or role (or the actions of a software process
acting on behalf of a user or role) should not be disclosed to a different user or role in an
uncontrolled fashion.
2. Purging of all information from volatile memory, active service or decommissioned system.
3. Ensure purging successfully occurs
NOTE Volatile memory resources are those that typically do not retain information after being released to memory management. However, there are attacks against random access memory (RAM) that have the potential to extract key material or other confidential data before it is actually over-written. Therefore, it is a commonly accepted practice to purge all unique data and connections to unique data from volatile shared memory when that memory is released back to the control system for use by a different user, such that this data is not visible or accessible to the new user.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="limit_rsrc_by_sec" name="Assets shall provide the capability to limit the use of resources by security functions to protect against resource exhaustion." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Resource management (for example, network segmentation or priority schemes) prevents a
lower-priority software process from delaying or interfering with the control system servicing
any higher-priority software process.
1. initiating network scans, patching and/or antivirus checks on an operating system.
2. Traffic rate limiting schemes should be considered as a mitigation technique.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="maintain_essential_functions" name="Assets shall provide the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>provide the capability to manage communication loads (such as
using rate limiting) to mitigate the effects of information flooding types of DoS events.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="support_auth_check_on_software_config" name="Assets shall provide the capability to perform or support authenticity checks on software, configuration and other information as well as the recording and reporting of the results of these checks or be integrated into a system that can perform or support authenticity checks." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Integrity verification methods are employed to detect, record, report and protect against software and information tampering.
1. cryptographic hashes
2. Notification of unauthorize changes
Integrity verification methods are employed to detect, record, report and protect against software and information tampering that may occur if other protection mechanisms (such as authorization enforcement) have been circumvented. The control system should employ formal or recommended integrity mechanisms (such as cryptographic hashes).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="integrity_check_software" name="Assets shall provide the capability to perform or support integrity checks on software, configuration and other information as well as the recording and reporting of the results of these checks or be integrated into a system that can perform or support integrity checks." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Integrity verification methods are employed to detect, record, report and protect against software and information tampering.
1. cryptographic hashes
2. Notification of unauthorize changes
Integrity verification methods are employed to detect, record, report and protect against software and information tampering that may occur if other protection mechanisms (such as authorization enforcement) have been circumvented. The control system should employ formal or recommended integrity mechanisms (such as cryptographic hashes).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_critical_long_lived_symmetric_keys" name="Assets shall provide the capability to protect critical, long lived symmetric keys via hardware mechanisms." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. establish the mutual trust using the symmetric key; store securely the shared secret (the authentication is valid as long as the shared secret remains secret); restrict access to the shared secret; ensure that the algorithms and keys used for the symmetric key authentication</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.16" supportedStandardRef="iec-62443-4-2:2019"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" name="Assets shall provide the capability to specifically restrict the use of unnecessary functions, ports, protocols and/or services." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc> 1. capability to specifically prohibit and/or restrict the use of unnecessary functions, ports, protocols and/or services.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="validate_syntax_length_content_of_any_input" name="Assets shall validate the syntax, length and content of any input data that is used as an industrial process control input or input via external interfaces that directly impacts the action of the asset." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. input data validation include out-of-range values for a defined field type, invalid characters in data fields, missing or incomplete data and buffer overflow.
2. SAST &amp; DAST
3. Data from external sources are sanitized based on acceptable formats and lengths.  It is preferred to use white listing, over black listing.
4. Data is validated when crossing API boundaries</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="phys_logical_connect_to_automation_process" name="Assets that physically or logically connect to an automation process shall provide the capability to set outputs to a predetermined state if normal operation as defined by the asset supplier cannot be maintained." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. The appropriate predetermined state of control system outputs is application dependent and could be one of the following user configurable options:
• Unpowered – the outputs fail to the unpowered state
• Hold – the outputs fail to the last-known good value
• Fixed – the outputs fail to a fixed value that is determined by the asset owner or an
application
2. All user supplied data is encoded prior to output. (i.e.. Html encoding, special character encoding).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_pw_policy_enforce" name="For assets utilizing password-based authentication, the asset shall provide the capability to enforce configurable password strength based on minimum length and variety of character types. " issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.
Note: A service should employ one or more tactics to prevent or at least slow down a brute force attack, including: blacklisting an IP after 5 unsuccessful attempts, slowing down attempts with increasing timeout delays introduced after 5 unsuccessful attempts, locking out non-admin accounts after 3 unsuccessful attempts.  The account must be disabled for a period of time sufficient to discourage brute force guessing of credentials, but not so long as to allow for a denial-of-service attack to be performed.  Allow non-admin users to reset their own passwords to prevent administrative burden.  If users are allowed to reset their password, best practice is to email a new password to the users email account and require a reset upon next logon.  It is not best practice to simply reset and display the new password on the authentication screen as an attacker may trigger that reset and change the password without notice to the user.  If using a screen reveal of password, should be accompanied by both a known secret of user, such as mothers maiden name and also an email to notify the user of such a change.  Temporary passwords and links should have a short expiration time.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_id_and_auth_for_human_users" name="Identify and authenticate all human users" issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. passwords, tokens, biometrics, Certificates, geographic location
2. role-based or group-based
3. should be applied to both local and remote access to the control system.
4. Least Privilege 
5. Segregation of Duties
6. Authentication types (factors): (1) something you know (a secret) -like username and password; (2) something you have - such as a token device or smart phone; and (3) something you are - such as biometrics. 
7. On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.
8.  services should run as non-root accounts or use SUID accounts that release privilege after service start.  Non-root accounts used for services should not have a shell enabled, i.e. /dev/null should be shell in passwd file.  In cases where the application must run with elevated privileges, raise privileges as late as possible, and drop them as soon as possible.  For windows based services, it is preferred to run the service as SYSTEM, instead of an administrator account, which would have credentials which may be guessed and used in an attack.
9. Authorization is granting of permissions based on authentication. 
10.All authorization decisions should be made on the server, not the client.  
11. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
12. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
13. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
14. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
15. Server side implementation and presentation layer representations of access control rules must match. 
16. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
17. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
18. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources
Note: system level forms of identification, such as IP or MAC address are easily spoofable and therefore do not qualify as a valid form of authentication. Establish and utilize standard, tested, authentication services whenever possible. Use a centralized implementation for all authentication controls, including libraries that call external authentication services. Segregate authentication logic from the resource being requested and use redirection to and from the centralized authentication control.  All authentication controls should fail securely. Enforce password complexity requirements established by policy or regulation. Authentication credentials should be sufficient to withstand attacks that are typical of the threats in the deployed environment. (e.g., requiring the use of alphabetic as well as numeric and/or special characters). Enforce password length requirements established by policy or regulation. Eight characters is commonly used, but 16 is better or consider the use of multi-word pass phrases. Password entry should be obscured on the user's screen. (e.g., on web forms use the input type "password")</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_human_user_interface_determine_user_took_action" name="If an asset provides a human user interface, the asset shall provide the capability to determine whether a given human user took a particular action. Control elements that are not able to support such capability shall be listed in component documents." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Examples of particular actions taken by a user include performing operator actions, changing
control system configurations, creating information, sending a message, approving
information (such as indicating concurrence) and receiving a message.
1. digital signatures, digital message receipts and timestamps</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.14" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="terminate_remote_session_auto_or_manual" name="If an asset supports remote sessions, the asset shall provide the capability to terminate a remote session either automatically after a configurable time period of inactivity, manually by a local authority, or manually by the user (human, software process or device) who initiated the session." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Terminate a remote session either automatically after a configurable time period of inactivity, manually by a local authority, or manually by the user (human, software process or device) who initiated the session.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" name="If an asset supports usage through wireless interfaces it shall provide the capability to integrate into the asset that supports usage authorization, monitoring and restrictions according to commonly accepted industry practices." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>provide the capability to authorize, monitor and enforce usage restrictions for wireless connectivity to the control system.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="user_crypto_algs" name="If cryptography is required, the asset shall use cryptographic algorithms, key sizes and mechanisms for key establishment and management according to commonly accepted security industry practices and recommendations." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. document the practices and procedures relating to cryptographic key establishment and management.
2. utilize established and tested encryption and hash algorithms, such as the advanced
encryption standard (AES) and the secure hash algorithm (SHA) series, and key sizes based
on an assigned standard.
3. Key generation needs to be performed using an effective random number generator.
4. The security policies and procedures for key management need to address
periodic key changes, key destruction, key distribution and encryption key backup in
accordance with defined standards</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_acc_mgmt_for_auth_users" name="Provide support of management of all accounts by authorized users" issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. individual, role-based, device-based, Service &amp;  default account management Policy.
2. Review of accounts.
3. Approvals for creating, disabling, removing or modifying accounts.
4.  On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="allocate_sufficient_audit_record_storage" name="The asset shall allocate sufficient audit record storage capacity according to commonly recognized recommendations for log management and system configuration. The asset shall provide auditing mechanisms to reduce the likelihood of such capacity being exceeded." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>The control system shall allocate sufficient audit record storage capacity according to
commonly recognized recommendations for log management and system configuration. The
control system shall provide auditing mechanisms to reduce the likelihood of such capacity
being exceeded</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.11" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="id_and_handle_error_conditions" name="The asset shall identify and handle error conditions in a manner such that effective remediation can occur. This shall be done in a manner which does not provide information that could be exploited by adversaries to attack the IACS unless revealing this information is necessary for the timely troubleshooting of problems." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Error messages generated by the control system should provide timely and useful information without revealing potentially harmful information.
2. Vulnerability Assessment &amp; Penetration Testing</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.9" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_auth_based_on_role_leas_priv" name="The asset shall provide authorization enforcement for all users based on their assigned responsibilities and least privilege" issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. enforce authorizations assigned to all human users.
2. Use control policies (for example, identity-based policies, role-based policies and rule-based policies) and associated read/write access enforcement mechanisms (for example, access control lists, access control matrices and cryptography).
2. check which roles are assigned to a verified user or asset and which privileges are assigned to these roles – if the requested operation is covered by the permissions, it is executed, otherwise rejected. Only qualified and authorized individuals should obtain the use of control system components for purposes of initiating changes, including upgrades and modifications. Authorization is granting of permissions based on authentication. 
3.All authorization decisions should be made on the server, not the client.  
4. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
5. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
6. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
7. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
8. Server side implementation and presentation layer representations of access control rules must match. 
9. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
10. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
11. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="role_to_define_and_modify_perm_mapping" name="The asset shall provide directly or through a compensating security mechanism, for an authorized role to define and modify the mapping of permissions to roles for all human users" issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>The control system shall provide the capability for an authorized user or role to define and
modify the mapping of permissions to roles for all human users.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="alert_personnel_prevent_svc_loss" name="The asset shall provide the capability to alert personnel and prevent the loss of essential services and functions in the event of an audit processing failure. The control system shall provide the capability to support appropriate actions in response to an audit processing failure according to commonly accepted industry practices and recommendations. " issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Audit generation typically occurs at the source of the event. Audit processing involves
transmission, possible augmentation (such as the addition of a timestamp) and persistent
storage of the audit records. Audit processing failures include, for example, software or
hardware errors, failures in the audit capturing mechanisms and audit storage capacity being
reached or exceeded
1.capability to alert personnel and prevent the loss of essential services and functions in the event of an audit processing failure.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.12" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_config_usage_restriction" name="The asset shall provide the capability to automatically enforce configurable usage restrictions" issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Authenticate &amp; Authorize devices before allowing connection.
2. Digital+E46 Signatures</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="deny_access_via_untrusted_netw_unless_approved" name="The asset shall provide the capability to deny access requests via untrusted networks unless approved by an assigned role." issueId="" platform="" cost="0" risk="83" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.15" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="deny_netw_traffic_allow_netw_traffic_exceptions" name="The asset shall provide the capability to deny network traffic by default and allow network traffic by exception (also termed deny all, permit by exception)." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>deny network traffic by default and allow network traffic by exception (also termed deny all, permit by exception).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="show_sys_use_notification" name="The asset shall provide the capability to display a system use notification message before authenticating. The system use notification message shall be configurable by authorized personnel." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. display a system use notification message or warning banners before authenticating &amp; configurable by authorized personnel.
2. Privacy and security policies and procedures need to be consistent with applicable laws,
directives, policies, regulations, standards and guidance.
3. Examples of elements for inclusion in the system use notification message are:
a) that the individual is accessing a specific control system;
b) that system usage may be monitored, recorded and subject to audit;
c) that unauthorized use of the system is prohibited and subject to criminal and/or civil
penalties; and
d) that use of the system indicates consent to monitoring and recording</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.14" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="employ_cypto_mechs_to_recognize_changes" name="The asset shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="employ_maware_protection" name="The asset shall provide the capability to employ malicious code protection mechanisms at all entry and exit points." issueId="" platform="" cost="0" risk="83" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>prevent, detect, mitigate and report instances of detected malicious code (for example, viruses, worms, Trojan horses and spyware) transported by electronic mail, electronic mail attachments, Internet access, removable media (for example, universal serial bus (USB) devices, diskettes or compact disks), PDF documents, web services, network connections and infected laptops or other
common means.
1. Detection Technique  - binary integrity and attributes monitoring, hashing and signature techniques.
2.Mitigation technique - file cleaning, quarantining, file deletion, host communication restriction and IPSs
3. Prevention Technique - application blacklisting and whitelisting techniques, removable media control, sandbox techniques and specific computing platforms mechanisms such as restricted firmware update capabilities, No Execute (NX) bit, data execution prevention (DEP), address space layout randomization (ASLR), stack corruption detection and mandatory access controls.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" name="The asset shall provide the capability to employ protection mechanisms to prevent, detect, report and mitigate the effects of malicious code or unauthorized software. The asset shall provide the capability to update the protection mechanisms." issueId="" platform="" cost="0" risk="83" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>prevent, detect, mitigate and report instances of detected malicious code (for example, viruses, worms, Trojan horses and spyware) transported by electronic mail, electronic mail attachments, Internet access, removable media (for example, universal serial bus (USB) devices, diskettes or compact disks), PDF documents, web services, network connections and infected laptops or other
common means.
1. Detection Technique  - binary integrity and attributes monitoring, hashing and signature techniques.
2.Mitigation technique - file cleaning, quarantining, file deletion, host communication restriction and IPSs
3. Prevention Technique - application blacklisting and whitelisting techniques, removable media control, sandbox techniques and specific computing platforms mechanisms such as restricted firmware update capabilities, No Execute (NX) bit, data execution prevention (DEP), address space layout randomization (ASLR), stack corruption detection and mandatory access controls.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="limit_invalid_attempts" name="The asset shall provide the capability to enforce a limit of a configurable number of consecutive invalid access attempts by any user (human, software process or device) during a configurable time period. The asset shall provide the capability to deny access for a specified period of time or until unlocked by an administrator when this limit has been exceeded." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. limit of a configurable number of consecutive invalid access attempts by any user (human, software process or device).
2. As per Policy.
3. For all invalid authentication attempts, the server should simply respond "invalid attempt, please retry" or similarly vague statement that does not imply partial success.  
Note: A service should employ one or more tactics to prevent or at least slow down a brute force attack, including: blacklisting an IP after 5 unsuccessful attempts, slowing down attempts with increasing timeout delays introduced after 5 unsuccessful attempts, locking out non-admin accounts after 3 unsuccessful attempts.  The account must be disabled for a period of time sufficient to discourage brute force guessing of credentials, but not so long as to allow for a denial-of-service attack to be performed.  Allow non-admin users to reset their own passwords to prevent administrative burden.  If users are allowed to reset their password, best practice is to email a new password to the users email account and require a reset upon next logon.  It is not best practice to simply reset and display the new password on the authentication screen as an attacker may trigger that reset and change the password without notice to the user.  If using a screen reveal of password, should be accompanied by both a known secret of user, such as mothers maiden name and also an email to notify the user of such a change.  Temporary passwords and links should have a short expiration time.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.13" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="restrict_mobile_code" name="The asset shall provide the capability to enforce usage restrictions for mobile code technologies based on the potential to cause damage to the asset." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Mobile code technologies include, but are not limited to, Java, JavaScript, ActiveX, portable
document format (PDF), Postscript, Shockwave movies, Flash animations and VBScript.
1. The control system shall provide the capability to enforce usage restrictions for mobile code technologies based on the potential to cause damage to the control system that include:
a) preventing the execution of mobile code;
b) requiring proper authentication and authorization for origin of the code;
c) restricting mobile code transfer to/from the control system; and
d) monitoring the use of mobile code.
2. verify integrity of the mobile code before allowing code execution with HASH/Codesigning technique.
3. both the selection and use of mobile code installed on servers and
mobile code downloaded and executed.
4. prevent the development, acquisition or introduction of unacceptable mobile code within the control system. For example, mobile code exchanges may be disallowed directly with the
control system, but may be allowed in a controlled adjacent environment.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" name="The asset shall provide the capability to generate audit records relevant to security for the following categories: access control, request errors, operating system events, asset events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Generate audit records relevant to security for the following categories: access control, request errors, operating system events, control system events, backup and restore events, configuration changes, potential reconnaissance activity and audit log events. Individual audit records shall include the timestamp, source (originating device, software process or human user account), category, type, event ID and event result.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" name="The asset shall provide the capability to identify and authenticate all software processes and devices. This capability shall enforce such identification and authentication on all interfaces which provide access to the asset to support least privilege in accordance with applicable security policies and procedures." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. identity bound to the physical device
2. passwords, tokens or location (physical or logical)
3. role-based, group-based or entity-based,
4. Combination of 1) something you know (a secret) -like username and password; (2) something you have - such as a token device or smart phone; and (3) something you are - such as biometrics. 
5. Assign identifiers that uniquely identify users/devices
a. E.g., employ a unique username-password combination for the user
b. Reasoning: This will prevent user 1 from spoofing as user 2. This is a concern for users with different levels of access.
6. Uniquely identify and authenticate users and devices
c. Multi-factor authentication
d. Use of authentication protocols that require no password/multifactor authentication: e.g., OAuth, OpenID, SAML</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_auth_init" name="The asset shall provide the capability to: initialize authenticator content; change all default authenticators upon asset installation; change/refresh all authenticators; protect all authenticators from unauthorized disclosure and modification when stored and transmitted." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>&gt; initialize authenticator content;
&gt; change all default authenticators upon control system installation;
&gt; change/refresh all authenticators; and
&gt; protect all authenticators from unauthorized disclosure and modification when stored and
transmitted
2.  tokens, symmetric keys, private keys (part of a public/private key pair), biometrics,
passwords, physical keys and key card
3. Human users should take reasonable measures to safeguard authenticators, including maintaining possession of their individual authenticators, not loaning or sharing authenticators with others and reporting lost or compromised authenticators immediately.
4. cryptographic protections such as encryption or hashing or by handshake protocols which do not require transmission of the password. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.
5. Lockout or loss of control due to security measures is not acceptable. If the control system is required to have a high level of availability, measures should be taken to maintain this high
level of availability (such as compensating physical countermeasures, duplicate keys and
supervisory override).
6. Complex strength of the authentication mechanism</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="logically_segment_control_system" name="The asset shall provide the capability to logically segment asset networks from non-asset networks and to logically segment critical asset networks from other asset networks." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Access from the control system to the World Wide Web should be clearly justified based on
control system operational requirements.
2. Logical Segmentation.
3. Physical Segmentation.
4. capability to provide network services to control system networks, critical or otherwise, without a connection to non-control system networks.
5. capability to logically and physically isolate critical control system networks from non-critical control system networks.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="mitigate_info_effects_flooding_types" name="The asset shall provide the capability to manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. boundary protection
2. restricting the information flow to be unidirectional outbound
3. manage communication loads (such as using rate limiting) to mitigate the effects of information flooding types of DoS events.
4. restrict the ability of all users (humans, software processes and devices) to cause DoS events which affect other control systems or networks.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="monitor_control_access_methods" name="The asset shall provide the capability to monitor and control all methods of access to the asset via untrusted networks." issueId="" platform="" cost="0" risk="83" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Examples of access to the control system via untrusted networks typically include remote
access methods (such as dial-up, broadband and wireless) as well as connections from a
company’s office (non-control system) network.
1. restrict access achieved through dial-up connections (for example, limiting dial-up access based upon the source of the request).
2. protect against unauthorized connections or subversion of authorized connections (for example, using virtual private network technology).
3. Access via untrusted networks to geographically remote control system component locations (for example, control centers and field locations) should only be enabled when necessary and authenticated.
4. Multifactor authentication for remote user access to the control system.
5. Use of VPNs &amp; Firewalls.
6. Monitoring &amp; Logging of Access for control systems.
7. deny access requests via untrusted networks unless approved by an assigned role.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.15" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="monitor_control_comms_zone_boundaries" name="The asset shall provide the capability to monitor and control communications at zone boundaries to enforce the compartmentalization defined in the risk-based zones and conduits model." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Any connections to external networks or other control systems should occur through managed
interfaces consisting of appropriate boundary protection devices (for example, proxies,
gateways, routers, firewalls, unidirectional gateways, guards and encrypted tunnels) arranged
in an effective architecture (for example, firewalls protecting application gateways residing in
a DMZ).
1. capability to deny network traffic by default and allow network traffic by exception (also termed deny all, permit by exception).
2. capability to prevent any communication through the control system boundary (also termed island mode).
3. The control system shall provide the capability to prevent any communication through the
control system boundary when there is an operational failure of the boundary protection
mechanisms (also termed fail close). This ‘fail close’ functionality shall be designed such that
it does not interfere with the operation of a SIS or other safety-related functions.
4. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.4" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="physically_segment_control_system" name="The asset shall provide the capability to physically segment asset networks from non-asset networks and to physically segment critical asset networks from non-critical asset networks." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="prevent_further_access_init_seslock" name="The asset shall provide the capability to prevent further access by initiating a session lock after a configurable time period of inactivity or by manual initiation. The session lock shall remain in effect until the human user who owns the session or another authorized human user re-establishes access using appropriate identification and authentication procedures." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. activate session lock mechanisms automatically after a configurable time period.
2. In some cases, session lock for control system operator workstations or nodes is not advised (for example, sessions which are required for immediate operator responses in emergency situations).
3. In situations where the control system cannot support session lock, the responsible entity should employ appropriate compensating countermeasures (for example, providing increased physical security, personnel security and auditing measures).
Note: Use the server or framework’s session management controls. The application should only recognize these session identifiers as valid. Session identifier creation must always be done on a trusted system (e.g., The server). Session management controls should use well vetted algorithms that ensure sufficiently random session identifiers. Set the domain and path for cookies containing authenticated session identifiers to an appropriately restricted value for the site. Logout functionality should fully terminate the associated session or connection. Logout functionality should be available from all pages protected by authorization. Establish a session inactivity timeout that is as short as possible, based on balancing risk and business functional requirements. In most cases it should be no more than several hours. Disallow persistent logins and enforce periodic session terminations, even when the session is active. Especially for applications supporting rich network connections or connecting to critical systems. Termination times should support business requirements and the user should receive sufficient notification to mitigate negative impacts. If a session was established before login, close that session and establish a new session after a successful login. Generate a new session identifier on any re-authentication. Do not allow concurrent logins with the same user ID. Supplement standard session management for sensitive server-side operations, like account management, by utilizing per-session strong random tokens or parameters. This method can be used to prevent Cross Site Request Forgery attacks. Supplement standard session management for highly sensitive or critical operations by utilizing per-request, as opposed to per-session, strong random tokens or parameters. Set the "secure" attribute for cookies transmitted over an TLS connection. Set cookies with the HttpOnly attribute, unless you specifically require client-side scripts within your application to read or set a cookie's value</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_conf_of_info_traversing_netw" name="The asset shall provide the capability to protect the confidentiality of information at rest and remote access sessions traversing an untrusted network." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc/>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_conf_of_info_at_rest_remote_access" name="The asset shall provide the capability to protect the confidentiality of information for which explicit read authorization is supported, whether at rest or in transit." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. physical means, compartmentalization or encryption.
2. configuring explicit read authorizations in the control system.
3. Digital Certificates.
4. All credentials should be transmitted over encrypted channels, such as TLS 1.2 or greater with ciphers as outlined in NIST 800-52r1.  All web credentials should be sent as part of a POST, not GET.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_integrity_of_sessions" name="The asset shall provide the capability to protect the integrity of sessions. The asset shall reject any usage of invalid session IDs." issueId="" platform="" cost="0" risk="77" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Use of session integrity mechanisms can have a significant overhead and therefore their use should be considered in light of requirements for real-time communications.
2. capability to invalidate session IDs upon user logout or other session termination (including browser sessions).
3. generate a unique session ID for each session and treat all unexpected session IDs as invalid.
4. generate unique session IDs with commonly accepted sources of randomness.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_integrity_transmitted_info" name="The asset shall provide the capability to protect the integrity of transmitted information." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. The control system shall provide the capability to protect the integrity of transmitted information.
2. The control system shall provide the capability to employ cryptographic mechanisms to recognize changes to information during communication.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protect_relevant_priv_keys" name="The asset shall provide the capability to protect the relevant private keys via hardware mechanisms according to commonly accepted security industry practices and recommendations." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Follow All below Steps:
l) validate certificates by checking the validity of the signature of a given certificate;
m) validate certificates by constructing a certification path to an accepted CA or in the case of
self-signed certificates by deploying leaf certificates to all hosts which communicate with
the subject to which the certificate is issued;
n) validate certificates by checking a given certificate’s revocation status;
o) establish user (human, software process or device) control of the corresponding private
key; and
p) map the authenticated identity to a user (human, software process or device).</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.11" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="report_current_list_of_installed_assets" name="The asset shall provide the capability to report the current list of installed assets and their associated properties." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Usage of component ID, capability and revision level.
2. Formal process of configuration management should be deployed to keep control of the
changes in the component inventory baseline
3. The system requires all default passwords and pass phrases to be changed in order to complete the setup, prior to being operational.  This includes SSID passphrases, default accounts, admin accounts, etc.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:31.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_support_mgmt_id_by_user_group_role" name="The asset shall provide the capability to support the management of identifiers by user, group, role or asset interface." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Management of identifiers by group, role or  system interface.
2. Session ID, resource ID, secure cookie management policy.
3. On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.
NOTE: Use the server or framework’s session management controls. The application should only recognize these session identifiers as valid. Session identifier creation must always be done on a trusted system (e.g., The server). Session management controls should use well vetted algorithms that ensure sufficiently random session identifiers. Set the domain and path for cookies containing authenticated session identifiers to an appropriately restricted value for the site. Logout functionality should fully terminate the associated session or connection. Logout functionality should be available from all pages protected by authorization. Establish a session inactivity timeout that is as short as possible, based on balancing risk and business functional requirements. In most cases it should be no more than several hours. Disallow persistent logins and enforce periodic session terminations, even when the session is active. Especially for applications supporting rich network connections or connecting to critical systems. Termination times should support business requirements and the user should receive sufficient notification to mitigate negative impacts. If a session was established before login, close that session and establish a new session after a successful login. Generate a new session identifier on any re-authentication. Do not allow concurrent logins with the same user ID. Supplement standard session management for sensitive server-side operations, like account management, by utilizing per-session strong random tokens or parameters. This method can be used to prevent Cross Site Request Forgery attacks. Supplement standard session management for highly sensitive or critical operations by utilizing per-request, as opposed to per-session, strong random tokens or parameters. Set the "secure" attribute for cookies transmitted over an TLS connection. Set cookies with the HttpOnly attribute, unless you specifically require client-side scripts within your application to read or set a cookie's value
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.6" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="verify_intended_ops" name="The asset shall provide the capability to support verification of the intended operation of security functions and report when anomalies are discovered during FAT, SAT and scheduled maintenance. These security functions shall include all those necessary to support the security requirements specified in this standard." issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Security verification functions include:
• Verification of antivirus measures by European Institute for Computer Antivirus Research
(EICAR) testing of the control system file system. Antivirus software should detect this and
appropriate incident handling procedures should be triggered.
• Verification of the identification, authentication and use control measures by attempting
access with an unauthorized account (for some functionality this could be automated).
• Verification of IDSs as a security control by including a rule in the IDS that triggers on
irregular, but known non-malicious traffic. The test could then be performed by introducing
traffic that triggers this rule and the appropriate IDS monitoring and incident handling
procedures.
• Confirmation that audit logging is occurring as required by security policies and
procedures and has not been disabled by an internal or external entity.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="switch_to_and_from_emergency_power_supply" name="The asset shall provide the capability to switch to and from an emergency power supply without affecting the existing security state or a documented degraded mode. " issueId="" platform="" cost="0" risk="81" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>There may be instances where compensating countermeasures such as physical door access
control or control system may be affected by loss of base power supply, in which case the emergency power supply should cover those associated systems.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.7" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="unique_id_human_users" name="The asset shall provide the capability to uniquely identify and authenticate all human users." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. passwords, tokens, biometrics, Certificates, geographic location
2. role-based or group-based
3. should be applied to both local and remote access to the control system.
4. Least Privilege 
5. Segregation of Duties
6. Authentication types (factors): (1) something you know (a secret) -like username and password; (2) something you have - such as a token device or smart phone; and (3) something you are - such as biometrics. 
7. On systems with multiple user systems at multiple levels of access, there should be admin(s) and normal users.  Normal users should not have access to administrative functions.  Normal users should not have access to other users functions either.  Users should be restricted to the only functions required for their job.  For single user systems, where only one administrator accesses the system, this requirement does not apply.  For multiple user systems, where all users are administrators, each user should have a unique named account and actions should be logged per user, to allow for accountability and auditing of admin functions.
8.  services should run as non-root accounts or use SUID accounts that release privilege after service start.  Non-root accounts used for services should not have a shell enabled, i.e. /dev/null should be shell in passwd file.  In cases where the application must run with elevated privileges, raise privileges as late as possible, and drop them as soon as possible.  For windows based services, it is preferred to run the service as SYSTEM, instead of an administrator account, which would have credentials which may be guessed and used in an attack.
9. Authorization is granting of permissions based on authentication. 
10.All authorization decisions should be made on the server, not the client.  
11. Attributes used to make the authorization decision should be stored on the server and not able to be influenced by a remote attacker.  Authorization decisions include: file access, process control, URL access restrictions, administrative functions. Use only trusted system objects, e.g. server side session objects, for making access authorization decisions. Use a single site-wide component to check access authorization. This includes libraries that call external authorization services. Access controls should fail securely. 
12. Deny all access if the application cannot access its security configuration information. Enforce authorization controls on every request, including those made by server side scripts, "includes" and requests from rich client-side technologies like AJAX and Flash. 
13. Segregate privileged logic from other application code. Restrict access to files or other resources, including those outside the application's direct control, to only authorized users. 
14. Restrict access to protected URLs to only authorized users. Restrict access to protected functions to only authorized users. Restrict direct object references to only authorized users. Restrict access  to services to only authorized users. Restrict access  to application data to only authorized users. Restrict access to user and data attributes and policy information used by access controls. Restrict access security-relevant configuration information to only authorized users. 
15. Server side implementation and presentation layer representations of access control rules must match. 
16. If state data must be stored on the client, use encryption and integrity checking on the server side to catch state tampering. Enforce application logic flows to comply with business rules. Limit the number of transactions a single user or device can perform in a given period of time. The transactions/time should be above the actual business requirement, but low enough to deter automated attacks. Use the "referrer" header as a supplemental check only, it should never be the sole authorization check, as it is can be spoofed. If long authenticated sessions are allowed, periodically re-validate a user’s authorization to ensure that their privileges have not changed and if they have, log the user out and force them to re-authenticate.
17. Implement account auditing and enforce the disabling of unused accounts (e.g., After no more than 30 days from the expiration of an account’s password.). The application must support disabling of accounts and terminating sessions when authorization ceases (e.g., Changes to role, employment status, business process, etc.). Service accounts or accounts supporting connections to or from external systems should have the least privilege possible. 
18. Create an Access Control Policy to document an application's business rules, data types and access authorization criteria and/or processes so that access can be properly provisioned and controlled. This includes identifying access requirements for both the data and system resources.
19. Assign identifiers that uniquely identify users/devices
a. E.g., employ a unique username-password combination for the user
b. Reasoning: This will prevent user 1 from spoofing as user 2. This is a concern for users with different levels of access.
20. Uniquely identify and authenticate users and devices
c. Multi-factor authentication
d. Use of authentication protocols that require no password/multifactor authentication: e.g., OAuth, OpenID, SAML
Note: system level forms of identification, such as IP or MAC address are easily spoofable and therefore do not qualify as a valid form of authentication. Establish and utilize standard, tested, authentication services whenever possible. Use a centralized implementation for all authentication controls, including libraries that call external authentication services. Segregate authentication logic from the resource being requested and use redirection to and from the centralized authentication control.  All authentication controls should fail securely. Enforce password complexity requirements established by policy or regulation. Authentication credentials should be sufficient to withstand attacks that are typical of the threats in the deployed environment. (e.g., requiring the use of alphabetic as well as numeric and/or special characters). Enforce password length requirements established by policy or regulation. Eight characters is commonly used, but 16 is better or consider the use of multi-word pass phrases. Password entry should be obscured on the user's screen. (e.g., on web forms use the input type "password")</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.3" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="validate_integrity_of_backup_info" name="The asset shall provide the capability to verify the reliability of backup mechanisms" issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>provide the capability to verify the reliability of backup mechanisms</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="id_auth_all_users_engaged_in_wireless_comms" name="The controls system shall provide the capability to identify and authenticate all users (humans, software processes or devices) engaged in wireless communication." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Identification of Wireless technologies include, but are not limited to, microwave, satellite, packet radio, Institute of Electrical and Electronics Engineers (IEEE) 802.11x, IEEE 802.15.4 (ZigBee,IEC 62591 – WirelessHART®, ISA-100.11a), IEEE 802.15.1 (Bluetooth), wireless LAN mobile routers, mobile phones with tethering and various infrared technologies.
1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="uniquely_id_auth_all_users_engaged_in_wireless_comms" name="The controls system shall provide the capability to uniquely identify and authenticate all users (humans, software processes or devices) engaged in wireless communication." issueId="" platform="" cost="0" risk="94" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>Identification of Wireless technologies include, but are not limited to, microwave, satellite, packet radio, Institute of Electrical and Electronics Engineers (IEEE) 802.11x, IEEE 802.15.4 (ZigBee,IEC 62591 – WirelessHART®, ISA-100.11a), IEEE 802.15.1 (Bluetooth), wireless LAN mobile routers, mobile phones with tethering and various infrared technologies.
1. uniquely identify and authenticate all users passwords, tokens, biometrics, Certificates, geographic location.
(humans, software processes or devices) engaged in wireless communication.
2. For password-based authentication, the controller shall provide the capability to enforce configurable password strength based on minimum length and variety of character types.
3. Limiting the lifetime of a password.
4. Limiting the reuse of passwords.
5. Usage of multifactor authentication like passwords, tokens, biometrics, Certificates, geographic location.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.8" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="provide_participate_in_sys_level_backup" name="The identity and location of critical files and the ability to conduct backups of user-level and system-level information (including system state information) shall be supported by the asset without affecting the normal plant operations." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. availability of up-to-date backups.
2. verify the reliability of backup mechanisms.
3. automate the backup function based on a configurable frequency.
4. Review of Failed Backups.
5. Centralize Backup, backup media.
6. Encrypted backup storage</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="11.5" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:19.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="obscure_auth_feedback" name="When an asset provides an authentication capability, the asset shall provide the capability to obscure feedback of authenticator information during the authentication process." issueId="" platform="" cost="0" risk="71" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. obscure feedback of authentication information during the authentication process by displaying asterisks or other random characters when a human user types in a password obscures feedback of authentication information.
2. entry of wired equivalent privacy (WEP) keys, secure socket shell (SSH) token entry and
RSA one-time passwords.
3. not provide any hint as to the reason for the authentication failure, such as “unknown user name”.
</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.12" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:25.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="if_pki_can_use_best_practices" name="Where PKI is utilized, the asset shall provide the capability to operate a PKI according to commonly accepted best practices or obtain public key certificates from an existing PKI." issueId="" platform="" cost="0" risk="87" state="Recommended" owner="cnmarrow" library="" source="RULES" edited="false">
          <desc>1. Obtain public key certificates from an existing PKI.
2. organization’s certificate policy
3. agency should issue public key certificates under an appropriate certificate policy or obtains public key certificates under an appropriate certificate policy from an approved service provider.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.10" supportedStandardRef="iec-62443-3-3:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2021-02-01T11:01:20.000">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="common-sl2-cr1-1" name="SL2 - Common - CR1.1" desc="" library="">
          <threats>
            <threat ref="cr1-1-auth_access_token_exploit" name="An adversary exploits a weakness in authentication to create an access token to associate a process/thread" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-287">
                  <countermeasures>
                    <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                    <countermeasure ref="unique_id_human_users" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                <countermeasure ref="unique_id_human_users" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-1-unauth_human_sys_access" name="Unauthorized human access to the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                    <countermeasure ref="unique_id_human_users" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                <countermeasure ref="unique_id_human_users" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-1-unid-sys-user" name="Unidentified user of the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="50" availability="25" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-286">
                  <countermeasures>
                    <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                    <countermeasure ref="unique_id_human_users" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_id_and_auth_for_human_users" mitigation="50"/>
                <countermeasure ref="unique_id_human_users" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-10" name="SL2 - Common - CR1.10" desc="" library="">
          <threats>
            <threat ref="cr1-10-adv_auth_feedback" name="An adversary receives authenticator feedback which helps him in user enumeration. E.g. invalid username. Invalid password." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-209">
                  <countermeasures>
                    <countermeasure ref="obscure_auth_feedback" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="obscure_auth_feedback" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-11" name="SL2 - Common - CR1.11" desc="" library="">
          <threats>
            <threat ref="cr1-11-adv_bruteforce_auth_creds" name="And adversary can bruteforce authentication credentials" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-522">
                  <countermeasures>
                    <countermeasure ref="limit_invalid_attempts" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="limit_invalid_attempts" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-12" name="SL2 - Common - CR1.12" desc="" library="">
          <threats>
            <threat ref="cr1-12-adv_no_motd" name="Adversaries who compromised the asset can dispute there was no message stating access was only for authorized personnel" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="show_sys_use_notification" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="show_sys_use_notification" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-13" name="SL2 - Common - CR1.13" desc="" library="">
          <threats>
            <threat ref="cr1-13-adv_access_untrusted_netw" name="An adversary accesses the asset via an untrusted network" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="75" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="deny_access_via_untrusted_netw_unless_approved" mitigation="50"/>
                    <countermeasure ref="monitor_control_access_methods" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="deny_access_via_untrusted_netw_unless_approved" mitigation="50"/>
                <countermeasure ref="monitor_control_access_methods" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-14" name="SL2 - Common - CR1.14" desc="" library="">
          <threats>
            <threat ref="cr1-14-rogue_employee_abuse_key" name="A rogue employee has unfettered access to a key and might use it for a malicious purpose or pass it onto someone else to the same end." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-322">
                  <countermeasures>
                    <countermeasure ref="protect_critical_long_lived_symmetric_keys" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_critical_long_lived_symmetric_keys" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-2" name="SL2 - Common - CR1.2" desc="" library="">
          <threats>
            <threat ref="cr1-2-unid_sys_backdoor" name="Unidentified backdoor plugged in the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-2-unid_softw_arb_code_exec" name="Unidentified software that executes arbitrary code" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-123">
                  <countermeasures>
                    <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_id_and_auth_of_sw_on_all_interfaces" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-3" name="SL2 - Common - CR1.3" desc="" library="">
          <threats>
            <threat ref="cr1-3-adv_get_netw_info" name="An adversary that has previously obtained unauthorized access to certain device resources, uses that access to obtain information such as location and network information" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="provide_acc_mgmt_for_auth_users" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_acc_mgmt_for_auth_users" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-4" name="SL2 - Common - CR1.4" desc="" library="">
          <threats>
            <threat ref="cr1-4-adv_guess_trusted_id" name="An adversary guesses, obtains, or &quot;rides&quot; a trusted identifier (e.g. session ID, resource ID, cookie, etc.) to perform authorized actions under the guise of an authenticated user or service." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-384">
                  <countermeasures>
                    <countermeasure ref="provide_support_mgmt_id_by_user_group_role" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_support_mgmt_id_by_user_group_role" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-5" name="SL2 - Common - CR1.5" desc="" library="">
          <threats>
            <threat ref="cr1-5-adv_guess_default_pw" name="An adversary guesses the default password and user of an authenticator (e.g. admin:admin)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-521">
                  <countermeasures>
                    <countermeasure ref="provide_auth_init" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_auth_init" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-5-adv_retrieve_unencrypted_pw" name="An adversary is able to retrieve unencrypted passwords after a DBMS/DB -server breach" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-261">
                  <countermeasures>
                    <countermeasure ref="provide_auth_init" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_auth_init" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-6" name="SL2 - Common - CR1.6" desc="" library="">
          <threats>
            <threat ref="cr1-6-adv_rogue_dev_mitm" name="An adversary can plant a rogue device to perform man-in-the-middle attacks" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
                    <countermeasure ref="uniquely_id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
                <countermeasure ref="uniquely_id_auth_all_users_engaged_in_wireless_comms" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-7" name="SL2 - Common - CR1.7" desc="" library="">
          <threats>
            <threat ref="cr1-7-adv_bruteforce_pw" name="An adversary is able to brute force the password" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-307">
                  <countermeasures>
                    <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="cr1-7-adv_guess_pw" name="An adversary is able to guess the password based on identifying an authenticator" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-521">
                  <countermeasures>
                    <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_pw_policy_enforce" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-8" name="SL2 - Common - CR1.8" desc="" library="">
          <threats>
            <threat ref="cr1-8-adv_imposter_signed" name=" An attacker generates a message or datablock that causes the recipient to believe that the message or datablock was generated and cryptographically signed by an authoritative or reputable source, misleading a victim or victim operating system into performing malicious actions" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-347">
                  <countermeasures>
                    <countermeasure ref="if_pki_can_use_best_practices" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="if_pki_can_use_best_practices" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr1-9" name="SL2 - Common - CR1.9" desc="" library="">
          <threats>
            <threat ref="cr1-9-adv_gen_certificate" name="An adversary exploits a weakness resulting from using a hashing algorithm with weak collision resistance to generate a certificate signing request (CSR) that contains collision blocks in the &quot;to be signed&quot; part" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-916">
                  <countermeasures>
                    <countermeasure ref="protect_relevant_priv_keys" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_relevant_priv_keys" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-1" name="SL2 - Common - CR2.1" desc="" library="">
          <threats>
            <threat ref="cr2-1-adv_connect_with_compromised_acc_make_changes" name="An adversary is able to connect to the asset with a compromised account and is able to make changes to all content available on the asset. (no roles)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_auth_all_users_based_on_resp" mitigation="34"/>
                    <countermeasure ref="enforce_auth_based_on_role_leas_priv" mitigation="33"/>
                    <countermeasure ref="role_to_define_and_modify_perm_mapping" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_auth_all_users_based_on_resp" mitigation="34"/>
                <countermeasure ref="enforce_auth_based_on_role_leas_priv" mitigation="33"/>
                <countermeasure ref="role_to_define_and_modify_perm_mapping" mitigation="33"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-10" name="SL2 - Common - CR2.10" desc="" library="">
          <threats>
            <threat ref="cr2-10-a_system_user_admin_is_not_notified_when_there_is_an_error_logging_the_system" name="A system user admin is not notified when there is an error logging the asset. Adversaries can use this by making the logging of the asset prone to errors by introducing a bug in the process. Now adversaries can compromise the system without it being logged." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="75" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="alert_personnel_prevent_svc_loss" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="alert_personnel_prevent_svc_loss" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-11" name="SL2 - Common - CR2.11" desc="" library="">
          <threats>
            <threat ref="cr2-11-an_adversary_compromises_a_system_without_knowing_when_he_compromised_it" name="An adversary compromises a system without knowing when he compromised it." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                    <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="create_timestamps_for_audit_records" mitigation="50"/>
                <countermeasure ref="create_timestamps_sync_with_sys_wide_timesrc" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-12" name="SL2 - Common - CR2.12" desc="" library="">
          <threats>
            <threat ref="cr2-12-an_adversary_compromised_the_system_not_knowing_from_where_he_compromised_the_system" name="An adversary compromised the asset, not knowing from where he compromised the asset" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="provide_human_user_interface_determine_user_took_action" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_human_user_interface_determine_user_took_action" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-2" name="SL2 - Common - CR2.2" desc="" library="">
          <threats>
            <threat ref="cr2-2-adv_wifi_access" name="An adversary is able to get access to the asset via wireless protocols without authorization" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="intagrate_into_sys_with_auth_moni_restrict_support" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-3" name="SL2 - Common - CR2.3" desc="" library="">
          <threats>
            <threat ref="cr2-3-adv_portable_dev_access" name="An adversary can access the asset using a portable device" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="enforce_config_usage_restriction" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="enforce_config_usage_restriction" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-4" name="SL2 - Common - CR2.4" desc="" library="">
          <threats>
            <threat ref="cr2-4-an_adversary_can_execute_remote_code" name="An adversary can execute remote code" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-94">
                  <countermeasures>
                    <countermeasure ref="restrict_mobile_code" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="restrict_mobile_code" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-5" name="SL2 - Common - CR2.5" desc="" library="">
          <threats>
            <threat ref="cr2-5-an_adversary_can_perform_a_dos_attack_by_making_consecutive_authorization_requests" name="An adversary can perform a DoS attack by making consecutive authorization requests" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-307">
                  <countermeasures>
                    <countermeasure ref="prevent_further_access_init_seslock" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="prevent_further_access_init_seslock" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-6" name="SL2 - Common - CR2.6" desc="" library="">
          <threats>
            <threat ref="cr2-6-an_adversary_could_have_maintained_a_stored_session" name="An adversary could have maintained a stored session. By doing so he keeps access to the asset with the role identified with that corresponding session." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-384">
                  <countermeasures>
                    <countermeasure ref="terminate_remote_session_auto_or_manual" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="terminate_remote_session_auto_or_manual" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-8" name="SL2 - Common - CR2.8" desc="" library="">
          <threats>
            <threat ref="cr2-8-an_aversary_could_have_compromised_the_sytem_without_you_knowing" name="An adversary could have compromised the system without you knowing what part in the asset was compromised or how he compromised the asset " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="gen_audit_record_relevant_to_sec_for_cat" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr2-9" name="SL2 - Common - CR2.9" desc="" library="">
          <threats>
            <threat ref="cr2-9-logging_of_the_system_will_fail_when_allocated_storage_capacity_is_satisfied" name="Logging of the asset will fail when allocated storage capacity is satisfied. Attackers can take advantage of this by creating space-eater malware." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-117">
                  <countermeasures>
                    <countermeasure ref="allocate_sufficient_audit_record_storage" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="allocate_sufficient_audit_record_storage" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-1" name="SL2 - Common - CR3.1" desc="" library="">
          <threats>
            <threat ref="cr3-1-adv_intercept_netw_traffic" name="An adversary can intercept network traffic" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="25" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-5">
                  <countermeasures>
                    <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                    <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="employ_cypto_mechs_to_recognize_changes" mitigation="50"/>
                <countermeasure ref="protect_integrity_transmitted_info" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-2" name="SL2 - Common - CR3.2" desc="" library="">
          <threats>
            <threat ref="cr3-2-adv_phishing_mail" name="An adversary sends a phishing mail with a trojan as email attachment" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-507">
                  <countermeasures>
                    <countermeasure ref="employ_maware_protection" mitigation="50"/>
                    <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="employ_maware_protection" mitigation="50"/>
                <countermeasure ref="protection_mechanisms_to_prevent_detect_report_mitigate_malware_effects" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-3" name="SL2 - Common - CR3.3" desc="" library="">
          <threats>
            <threat ref="cr3-3-adv_plant_backdoor" name="An adversary could have planted a backdoor on the asset without the user ever knowing (no anti-virus)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-147">
                  <countermeasures>
                    <countermeasure ref="verify_intended_ops" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="verify_intended_ops" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-4" name="SL2 - Common - CR3.4" desc="" library="">
          <threats>
            <threat ref="cr3-4-adv_tamper_software" name="An adversary is able to tamper with software running on a system. On the asset no integrity check is in place." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-354">
                  <countermeasures>
                    <countermeasure ref="integrity_check_software" mitigation="50"/>
                    <countermeasure ref="support_auth_check_on_software_config" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="integrity_check_software" mitigation="50"/>
                <countermeasure ref="support_auth_check_on_software_config" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-5" name="SL2 - Common - CR3.5" desc="" library="">
          <threats>
            <threat ref="cr3-5-adv_xss" name="An adversary can perform cross site scripting when input is not validated" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-79">
                  <countermeasures>
                    <countermeasure ref="validate_syntax_length_content_of_any_input" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="validate_syntax_length_content_of_any_input" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-6" name="SL2 - Common - CR3.6" desc="" library="">
          <threats>
            <threat ref="cr3-6-adv_fuzz_sensor" name="An adversary can fuzz a sensor connected to a PLC which will cause the controller to generate wrong output values which can cause big system failures (DoS)" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="75" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-20">
                  <countermeasures>
                    <countermeasure ref="phys_logical_connect_to_automation_process" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="phys_logical_connect_to_automation_process" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-7" name="SL2 - Common - CR3.7" desc="" library="">
          <threats>
            <threat ref="cr3-7-adv_disclose_info_via_error_msg" name="An adversary can use error messages that contain too much information, such as stack traces, to discover vulnerabilities in the running service." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-209">
                  <countermeasures>
                    <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="id_and_handle_error_conditions" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-8" name="SL2 - Common - CR3.8" desc="" library="">
          <threats>
            <threat ref="cr3-8-adv_mitm_random_sessionid" name="An adversary can perform a man in the middle attack when generating a session with a random session-ID." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="protect_integrity_of_sessions" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_integrity_of_sessions" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr3-9" name="SL2 - Common - CR3.9" desc="" library="">
          <threats>
            <threat ref="cr3-9-adv_delete_audit_records_after_breach" name="An adversary is able to delete audit records after a system breach which can make investigations very difficult  " state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-732">
                  <countermeasures>
                    <countermeasure ref="protect_audit_info_logs_tools" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_audit_info_logs_tools" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr4-1" name="SL2 - Common - CR4.1" desc="" library="">
          <threats>
            <threat ref="cr4-1-adv_intercept_unecrypted_file_in_transit" name="An adversary is able to intercept an unencrypted file in transit" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="protect_conf_of_info_at_rest_remote_access" mitigation="50"/>
                    <countermeasure ref="protect_conf_of_info_traversing_netw" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="protect_conf_of_info_at_rest_remote_access" mitigation="50"/>
                <countermeasure ref="protect_conf_of_info_traversing_netw" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr4-2" name="SL2 - Common - CR4.2" desc="" library="">
          <threats>
            <threat ref="cr4-adv_access_file_unpurged_dev" name="An adversary can access files through a device which was released from active service and which was not purged" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-672">
                  <countermeasures>
                    <countermeasure ref="explicit_read_auth_protect_conf_info" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="explicit_read_auth_protect_conf_info" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr4-3" name="SL2 - Common - CR4.3" desc="" library="">
          <threats>
            <threat ref="cr4-3-adv_break_alg_weak_encryption" name="When a weak encryption algorithm is used an adversary is capable of breaking the algorithm with standard available tools" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-326">
                  <countermeasures>
                    <countermeasure ref="user_crypto_algs" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="user_crypto_algs" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr5-1" name="SL2 - Common - CR5.1" desc="" library="">
          <threats>
            <threat ref="cr5-1-network_segmentation_exploit" name="An adversary is able to hop between internal networks since they are not segregated" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="logically_segment_control_system" mitigation="50"/>
                    <countermeasure ref="physically_segment_control_system" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="logically_segment_control_system" mitigation="50"/>
                <countermeasure ref="physically_segment_control_system" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr5-2" name="SL2 - Common - CR5.2" desc="" library="">
          <threats>
            <threat ref="cr5-2-lateralmovement_exploit" name="An adversary can complete lateral movement within the asset when no protection is set up" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="deny_netw_traffic_allow_netw_traffic_exceptions" mitigation="50"/>
                    <countermeasure ref="monitor_control_comms_zone_boundaries" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="deny_netw_traffic_allow_netw_traffic_exceptions" mitigation="50"/>
                <countermeasure ref="monitor_control_comms_zone_boundaries" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr6-1" name="SL2 - Common - CR6.1" desc="" library="">
          <threats>
            <threat ref="cr6-1-audit_log_exploit" name="An adversary may compromise the asset and edit the logfiles with non root privileges" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="75" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-532">
                  <countermeasures>
                    <countermeasure ref="auth_humans_tools_audit_logs" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="auth_humans_tools_audit_logs" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr6-2" name="SL2 - Common - CR6.2" desc="" library="">
          <threats>
            <threat ref="cr6-2-continuous_monitoring_exploit" name="An adversary compromises a system  without it being timely notified and detected by for example a IDS" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-693">
                  <countermeasures>
                    <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="continuous_monitor_accepted_sec" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-1" name="SL2 - Common - CR7.1" desc="" library="">
          <threats>
            <threat ref="cr7-1-dos_no_protect" name="Assets might lose the capability to maintain essential functions when operating in a degraded mode as the result of a DoS event.&#10;" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-1100">
                  <countermeasures>
                    <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                    <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="maintain_essential_functions" mitigation="50"/>
                <countermeasure ref="mitigate_info_effects_flooding_types" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-2" name="SL2 - Common - CR7.2" desc="" library="">
          <threats>
            <threat ref="cr7-2-rsrc_exhaustion" name="Assets might lose the capability to maintain essential functions as a result of resource exhaustion." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-400">
                  <countermeasures>
                    <countermeasure ref="limit_rsrc_by_sec" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="limit_rsrc_by_sec" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-3" name="SL2 - Common - CR7.3" desc="" library="">
          <threats>
            <threat ref="cr7-3-no_usr_sys_info_backup" name="Assets might not regain their state (user- and system-level information) due to storage failure." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="50" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-636">
                  <countermeasures>
                    <countermeasure ref="provide_participate_in_sys_level_backup" mitigation="50"/>
                    <countermeasure ref="validate_integrity_of_backup_info" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="provide_participate_in_sys_level_backup" mitigation="50"/>
                <countermeasure ref="validate_integrity_of_backup_info" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-4" name="SL2 - Common - CR7.4" desc="" library="">
          <threats>
            <threat ref="cr7-4-no_usr_sys_info_backup" name="Assets might not regain their state (user- and system-level information) due to storage failure." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="50" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-636">
                  <countermeasures>
                    <countermeasure ref="cap_to_be_recovered_to_known_secure_state" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="cap_to_be_recovered_to_known_secure_state" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-5" name="SL2 - Common - CR7.5" desc="" library="">
          <threats>
            <threat ref="cr7-5-emergency_power" name="An adversary can cause a power outage of a security system which will give an adversary to compromise the asset." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="switch_to_and_from_emergency_power_supply" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="switch_to_and_from_emergency_power_supply" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-6" name="SL2 - Common - CR7.6" desc="" library="">
          <threats>
            <threat ref="cr7-6-unauth_access_default_creds" name="Unauthorized component access might occur as a result of not being able to change default access credentials" state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="75" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-798">
                  <countermeasures>
                    <countermeasure ref="config_according_to_recommended_netw_and_security" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="config_according_to_recommended_netw_and_security" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-7" name="SL2 - Common - CR7.7" desc="" library="">
          <threats>
            <threat ref="cr7-7-unauth_access_unnecessary_func" name="Unauthorized component access might occur as a result of not being able to restrict unnecessary functions, ports, protocols and/or services." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="restrict_use_of_unnecessary_function_port_protocol_svc" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="common-sl2-cr7-8" name="SL2 - Common - CR7.8" desc="" library="">
          <threats>
            <threat ref="cr7-8-rogue_assets" name="Rogue assets might enter the network as a result of not being able to verify component identities." state="Expose" source="RULES" edited="false" owner="cnmarrow" library="" editable="true">
              <desc/>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="report_current_list_of_installed_assets" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
  </components>
  <threadFixScans/>
</project>
